{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[!hello]*.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list all the files that does n't contain the name ` hello `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "partition", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"split elements of a list ` l ` by ' \t '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hex", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "LShift", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "walls", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert the sum of list ` walls ` into a hex presentation"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"loop through ` mylist ` with step 2"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "isupper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all string elements in list ` words ` are upper-cased"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\bLOG_ADDR\\s+(\\S+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get value in string ` line ` matched by regex pattern ' \\bLOG_ADDR\\s+(\\S+) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "start[SEP]excel.exe[SEP]<path/to/file>", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how can i launch an instance of an application using python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "example_string", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string of numbers ` example_string ` separated by ` , ` into a list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "binascii", "type": "identifier", "children": []}]}]}, {"value": "a2b_hex", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string ` s ` containing hex bytes to a hex string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "kdll", "type": "identifier", "children": []}]}]}, {"value": "CreateSymbolicLinkW", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "D:\\testdirLink", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "D:\\testdir", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a symlink directory ` D:\\testdirLink ` for directory ` D:\\testdir ` with unicode support using ctypes library"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "db", "type": "identifier", "children": []}]}]}, {"value": "Doc", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_id", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_id", "type": "string", "children": []}]}]}]}]}]}]}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "$set", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "geolocCountry", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myGeolocCountry", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert a new field ' geolocCountry ' on an existing document ' b ' using pymongo"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myobject", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "number", "type": "string", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"evaluate a nested dictionary ` myobject.id.number ` to get ` number ` if ` myobject ` is present with getattr"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a list containing all cartesian products of elements in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"empty a list ` lst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^\\d+\\s|\\s\\d+\\s|\\s\\d+$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete self-contained digits from string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bar", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "attrb1", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "attrb2", "type": "identifier", "children": []}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` bar ` by each element 's attribute ` attrb1 ` and attribute ` attrb2 ` in reverse order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_ints", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a list of integers ` list_of_ints ` using string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ast", "type": "identifier", "children": []}]}]}, {"value": "literal_eval", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0xdeadbeef", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string ' 0xdeadbeef ' to decimal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_key", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_value", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_key", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_key", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_container", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"build dictionary with keys of dictionary ` _container ` as keys and values of returned value of function ` _value ` with correlating key as parameter"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\w+", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello[SEP]world,[SEP]my[SEP]name[SEP]is...James[SEP]the[SEP]2nd!", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of words from a string ` Hello[SEP]world,[SEP]my[SEP]name[SEP]is...James[SEP]the[SEP]2nd! ` removing punctuation"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\s+|\\S+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` s ` based on white spaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "monthrange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2012", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get last day of the second month in year 2012"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "powerset", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "abcd", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a list with permutations of string ' abcd '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` mylist ` alphabetically"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "super", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Executive", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "__init__", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "args", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"inherit from class ` Executive `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "ix", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"remove column by index ` [:, 0:2] ` in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}	"destruct elements of list ` [1, 2, 3] ` to variables ` a ` , ` b ` and ` c `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "webbrowser", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file:///my_pdf.pdf", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display a pdf file that has been downloaded as ` my_pdf.pdf `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d1", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"combine two dictionaries ` d ` and ` d1 ` , concatenate string values with identical ` keys `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trimming a string ` str `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "first_name", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "form", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "firstname", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"flask get posted form data ' firstname '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "remove", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove item \" b \" in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[\u0000-\u007f]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\u00a3100[SEP]is[SEP]worth[SEP]more[SEP]than[SEP]\u20ac100", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all non-ascii characters in a unicode string ` \u00a3100[SEP]is[SEP]worth[SEP]more[SEP]than[SEP]\u20ac100 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "codecs", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "iso-8859-1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read file ' myfile ' using encoding ' iso-8859-1 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "exit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"abort the execution of a python script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "echo[SEP]Hello[SEP]World", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calling an external command \" echo[SEP]Hello[SEP]World \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myListOfTuples", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a dictionary of pairs from a list of tuples ` myListOfTuples `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]table[SEP]VALUES[SEP](%s,[SEP]%s,[SEP]%s)", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "var1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var2", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var3", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute a sql statement using variables ` var1 ` , ` var2 ` and ` var3 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lol", "type": "identifier", "children": []}]}]}, {"value": "pop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hello", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete an element \" hello \" from a dictionary ` lol `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "issubset", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all the items in a list ` ['a', 'b'] ` exists in another list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "DEBUSSY", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}]}]}]}]}	"set environment variable ' DEBUSSY ' to ' 1 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "isnull", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get data of columns with null values in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "user", "type": "identifier", "children": []}]}]}, {"value": "groups", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "name", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Member", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "exists", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"in django , check if a user is in a group ' Member '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "index", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find consecutive segments from a column ' A ' in a pandas data frame ' df '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "f", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "issubset", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a3", "type": "identifier", "children": []}]}]}, {"value": "f", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if dictionary ` L[0].f.items() ` is in dictionary ` a3.f.items() `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\d+\\.\\d+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Current[SEP]Level:[SEP]13.4[SEP]db.", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract floating number from string ' Current[SEP]Level:[SEP]13.4[SEP]db. '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the product of each two items at the same index of list ` a ` and list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "fromlist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stdin", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create array ` a ` containing integers from stdin"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "stdin", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read a file from redirected stdin and save to variable ` result `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "#[SEP]Data[SEP]for[SEP]Class[SEP]A[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write a comment ` #[SEP]Data[SEP]for[SEP]Class[SEP]A[LINE] ` to a file object ` f `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "adfix", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "__", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of variables from module ' adfix.py ' in current module ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "RuntimeError", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "specific[SEP]message", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cause", "type": "expr", "children": []}]}]}]}	"throw a runtime error with specific[SEP]message ' specific[SEP]message '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "start[SEP]\"$file\"", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open a file \" $file \" under unix"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find_all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "href", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^(?!(?:[a-zA-Z][a-zA-Z0-9+.-]*:|//))", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"find all anchors with a hyperlink that matches the pattern ' ^(?!(?:[a-zA-Z][a-zA-Z0-9+.-]*:|//)) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "check_output", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "espeak", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "stderr", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "STDOUT", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"hide output of subprocess ` ['espeak', text] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2010", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "isocalendar", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get equivalent week number from a date ` 2010/6/16 ` using isocalendar"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "get_dummies", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "order", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"binarize the values in columns of list ` order ` in a pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "cols", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sum", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"write column ' sum ' of dataframe ` a ` to csv file ' test.csv '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dbb", "type": "identifier", "children": []}]}]}, {"value": "commit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"commit all the changes after executing a query ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list of tuples to multiple lists in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "sqrt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Pow", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the euclidean distance between two 3-d arrays ` A ` and ` B `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "stats", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "expand", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pandas split strings in column ' stats ' by ' , ' into columns in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\[[^\\]]*\\]|\\([^\\)]*\\)|\"[^\"]*\"|\\S+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "strs", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all occurrences of the pattern ' \\[[^\\]]*\\]|\\([^\\)]*\\)|\"[^\"]*\"|\\S+ ' within ` strs `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all elements in list ` lst ` are tupples of long and int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "exit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"properly quit a program"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "length", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "strings", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the length of all strings in a list ` strings `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([0-9]+)([A-Z])", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "20M10000N80M", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"separate numbers and characters in string ' 20M10000N80M '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of lists ` l ` by index 2 of the inner list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "dummy", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "agg", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "returns", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"apply two different aggregating functions ` mean ` and ` sum ` to the same column ` dummy ` in pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"find average of a nested list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df_1", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df_2", "type": "identifier", "children": []}]}]}, {"value": "sort_values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate dataframe ` df_1 ` to dataframe ` df_2 ` sorted by values of the column ' y '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\([^)]*\\)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove parentheses and text within it in string ` filename `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "unsorted_list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort lists in the list ` unsorted_list ` by the element at index 3 of each list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "isalpha", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all non-alphabet chars from string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "2", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list with string ` ['1', '2', '3'] ` into list with integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-(?!aa-|bb-)([^-]+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regular expression matching all but ' aa ' and ' bb ' for string ` string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "POST", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "title", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"django get the value of key ' title ' from post request ` request ` if exists , else return empty string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mykey1", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"removing key values pairs with key ' mykey1 ' from a list of dictionaries ` mylist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "xs", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "s", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list of strings ` xs ` by the length of string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "remove", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ValueError", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}	"delete the element ` c ` from list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "imshow", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "imageArray", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "cmap", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Greys_r", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"display a grayscale image from array of pixels ` imageArray `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pickle", "type": "identifier", "children": []}]}]}, {"value": "dump", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemlist", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "outfile", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"serialize ` itemlist ` to file ` outfile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "column_name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_value", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"select rows whose column value in column ` column_name ` does not equal ` some_value ` in pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "pop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove index 2 element from a list ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "path/to/python", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "test2.py", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "neededArgumetGoHere", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"run ' test2.py ' file with python location ' path/to/python ' and arguments ' neededArgumetGoHere ' as a subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the products of each two elements at the same index of list ` a ` and list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "eval", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "20<30", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"evaluate the expression ' 20<30 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"input an integer tuple from user"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "21", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert 21 to binary string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dir_path", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "realpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find name of current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thread", "type": "identifier", "children": []}]}]}, {"value": "start_new_thread", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myfunction", "type": "identifier", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "MyStringHere", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"start a new thread for ` myfunction ` with parameters ' MyStringHere ' and 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pandas", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "dropna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "dropna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reindex_like", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"combine two columns ` foo ` and ` bar ` in a pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2000", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "days", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get last day of the first month in year 2000"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "U", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read file ' myfile.txt ' using universal newline mode ' U '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "obj", "type": "identifier", "children": []}]}]}, {"value": "__dict__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all object attributes of object ` obj `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "shutdown", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/s", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"shutdown a computer using subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted_list_of_keyvalues", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ips_data", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "data_two", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort json ` ips_data ` by a key ' data_two '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"how to get the length of words in a sentence ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print current date and time in a regular format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cur", "type": "identifier", "children": []}]}]}, {"value": "executemany", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]table[SEP]VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "tup", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute sql query ' INSERT[SEP]INTO[SEP]table[SEP]VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s) ' with all parameters in list ` tup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concat a list of strings ` lst ` using string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove extra white spaces & tabs from a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "repeat", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all combination of n binary values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hour", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "weekday", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "weeknum", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lambdafunc", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"add multiple columns ` hour ` , ` weekday ` , ` weeknum ` to pandas data frame ` df ` from lambda function ` lambdafunc `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "X\u00c3\u00bcY\u00c3\u009f", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "raw_unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode ` u'X\u00c3\u00bcY\u00c3\u009f' ` as unicode and decode with utf-8"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "pop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove the element in list ` a ` at index ` index `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_to_sort", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of lists ` list_to_sort ` by indices 2,0,1 of the inner list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "fillna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "group", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "transform", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mean", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace nan values in column ' value ' with the mean of data in column ' group ' of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ls", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "-l", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calling an external command \" ls -l \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string ` s ` to its base-10 representation"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "calendar", "type": "identifier", "children": []}]}]}, {"value": "monthrange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "year", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "month", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get last day of the month ` month ` in year ` year `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get yesterday 's date as a string in ` YYYY-MM-DD ` format using timedelta"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a python dictionary ' a ' to a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "M", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete character \" M \" from a string ` s ` using python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myVar", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "locals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if a local variable ' myVar ' exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Article", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "pub_date", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "annotate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "article_count", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "title", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"group the values from django model ` Article ` with group by value ` pub_date ` and annotate by ` title `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "XYZ", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "IGNORECASE", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "fooxyzbar", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' fooxyzbar ' based on case-insensitive matching using string ' XYZ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fig", "type": "identifier", "children": []}]}]}, {"value": "set_size_inches", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "w", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "h", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "forward", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"set the size of figure ` fig ` in inches to width height of ` w ` , ` h `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find_all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "string", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Elsie", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"beautifulsoup search string ' Elsie ' inside tag ' a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "ix", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"return dataframe ` df ` with last row dropped"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0,1,2", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string \" 0,1,2 \" based on delimiter ' , '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "set_yscale", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "log", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"plot logarithmic axes with matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list all files in directory ` path `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0xff", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string \" 0xff \" to decimal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "combinations", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hel", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "lo", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "bye", "type": "string", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate all possible string permutations of each two elements in list ` ['hel', 'lo', 'bye'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myString", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trimming \" [LINE] \" from string ` myString `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "c_contofficeID", "type": "identifier", "children": []}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^12(?=.{4}$)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"use regex pattern ' ^12(?=.{4}$) ' to remove digit 12 if followed by 4 other digits in column ` c_contofficeID ` of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "linalg", "type": "identifier", "children": []}]}]}, {"value": "solve", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "dot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "T", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "dot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "T", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"solve for the least squares ' solution of matrices ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "savetxt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test.txt", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"save numpy array ` x ` into text file ' test.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "modified", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a data ` a ` in descending order based on the ` modified ` attribute of elements using lambda function"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "trace_df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ratio", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get proportion of rows in dataframe ` trace_df ` whose values for column ` ratio ` are greater than 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "./urls-eu.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"read lines from a csv file ` ./urls-eu.csv ` into a list of lists ` arr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "onlyfiles", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mypath", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isfile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mypath", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"list all files of a directory ` mypath `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^$", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "TemplateView", "type": "identifier", "children": []}]}]}, {"value": "as_view", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "template_name", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "your_template.html", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"serve a static html page ' your_template.html ' at the root of a django project"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sex", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Female", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Male", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"replace value 0 with ' Female ' and value 1 with ' Male ' in column ' sex ' of dataframe ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "weekly", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "visitors", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "daily", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"find the sums of length 7 subsets of a list ` daily `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` a ` in ascending order based on the addition of the second and third elements of each tuple in it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Pow", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate elements of a list ' x ' of multiple integers to a single integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "items", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if the third element of all the lists in a list \" items \" is equal to zero ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "10/05/2012", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d/%m/%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"represent datetime object ' 10/05/2012 ' with format ' %d/%m/%Y ' into format ' %Y-%m-%d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "as[SEP]df", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all spaces from a string converted from dictionary ` {'a': 1, 'b': 'as df'} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "findAll", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "attrs", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "description", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"beautifulsoup find all tags with attribute ' name ' equal to ' description '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ValueError", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A[SEP]very[SEP]specific[SEP]bad[SEP]thing[SEP]happened", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cause", "type": "expr", "children": []}]}]}]}	"manually throw/raise a ` ValueError ` exception with the message ' A[SEP]very[SEP]specific[SEP]bad[SEP]thing[SEP]happened '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of words ` words ` of a file ' myfile '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a random integer between 0 and 9"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlopen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "urlencode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "params", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace percent-encoded code in request ` f ` to their single-character equivalent"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "SetComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Pow", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create dict of squared int values in range of 100"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "z", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of booleans ` z ` that shows wether the corresponding items in list ` x ` and ` y ` are equal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "next", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"retrieve an arbitrary value from dictionary ` dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "strs", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "size", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list of ' size ' empty strings"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "u", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8-sig", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert utf-8 with bom string ` s ` to utf-8 with no bom ` u `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "set_yticklabels", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u00e9", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\u00e3", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\u00e2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set an array of unicode characters ` [u'\u00e9', u'\u00e3', u'\u00e2'] ` as labels in matplotlib ` ax `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^a-zA-Z0-9-]+", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to exclude a character from a regex group ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "fillna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "method", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ffill", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"change nan values in dataframe ` df ` using preceding values in the frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "shutil", "type": "identifier", "children": []}]}]}, {"value": "copy2", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/dir/file.ext", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/new/dir/newname.ext", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"copy file \" /dir/file.ext \" to \" /new/dir/newname.ext \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "&", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"slice ` url ` with ' & ' as delimiter to get \" http://www.domainname.com/page?CONTENT_ITEM_ID=1234 \" from url `` http : //www.domainname.com/page ? content_item_id=1234 & param2 & param3 ''"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` c ` containing items from list ` b ` whose index is in list ` index `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "script2.py[SEP]1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"run python script ' script2.py[SEP]1 ' from another python script , passing in script2.py[SEP]1 as an argument"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%dT%H:%M:%SZ", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a date string ` s ` to a datetime object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "remove", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete the element 6 from list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sql", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myDict", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute sql statement ` sql ` with values of dictionary ` myDict ` as parameters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parser", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "argparse", "type": "identifier", "children": []}]}]}, {"value": "ArgumentParser", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "allow_abbrev", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"disable abbreviation in argparse"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "writer", "type": "identifier", "children": []}]}]}, {"value": "writerows", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write all tuple of tuples ` A ` at once into csv file"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlopen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www.stackoverflow.com", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "getcode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"checking if website \" http://www.stackoverflow.com \" is up"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how do i convert datetime to date ( in python ) ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "LoD", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a set containing all keys names from list of dictionaries ` LoD `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"iterate over a dictionary ` dict ` in sorted order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "remove", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"delete the element ` c ` from list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterating key and items over dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "vals", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find rows matching ` (0,1) ` in a 2 dimensional numpy array ` vals `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\"", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\\"", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"escaping quotes in string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}]}]}]}	"get the row names from index in a pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"combine two lists ` [1, 2, 3, 4] ` and ` ['a', 'b', 'c', 'd'] ` into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[-+]?\\d*\\.\\d+|\\d+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Current[SEP]Level:[SEP]-13.2[SEP]db[SEP]or[SEP]14.2[SEP]or[SEP]3", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract floating point numbers from a string ' Current[SEP]Level:[SEP]-13.2[SEP]db[SEP]or[SEP]14.2[SEP]or[SEP]3 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "drop", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"append a pandas series ` b ` to the series ` a ` and get a continuous index"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "redirect", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Home.views.index", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"django redirect to view ' Home.views.index '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/path/to/2014_07_13_test", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add a path ` /path/to/2014_07_13_test ` to system path"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of lists with summing the values of the second element from each list of lists ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2010-11-13[SEP]10:33:54.227806", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M:%S.%f", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a datetime string back to a datetime object of format ' %Y-%m-%d[SEP]%H:%M:%S.%f '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u25b2", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a character that has unicode value ` \u25b2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str1", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenating values in ` list1 ` to a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort each row in a pandas dataframe ` df ` in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"get all the values in column ` b ` from pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse a list ` array `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "combinations", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum of product of combinations in a list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"from a list of strings ` my_list ` , remove the values that contains numbers ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l2", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l1", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list of aggregation of each element from list ` l2 ` to all elements of list ` l1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"converting byte string ` c ` in unicode string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get element at index 0 of each list in column ' value ' of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"how do i read the first line of a string ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all possible combination of items from 2-dimensional list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "post", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://httpbin.org/post", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "json", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cheers", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"execute a post request to url ` http://httpbin.org/post ` with json data ` {'test': 'cheers'} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "stdin", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"read line by line from stdin"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "items", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the size of list ` items `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` lst ` of key , value pairs into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "StringIO", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "sep", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "comment", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "#", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"pandas read comma-separated csv file ` s ` and skip commented lines starting with ' # '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"select rows of dataframe ` df ` whose value for column ` A ` is ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pyplot", "type": "identifier", "children": []}]}]}, {"value": "legend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "loc", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "fontsize", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x-small", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"change legend size to ' x-small ' in upper-left location"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ld", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "d", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "size", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get dictionary with max value of key ' size ' in list of dicts ` ld `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append string ` foo ` to list ` list `"
