{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "kill", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "getpid", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "signal", "type": "identifier", "children": []}]}]}, {"value": "SIGUSR1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"send a signal ` signal.SIGUSR1 ` to the current process"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bytes", "type": "identifier", "children": []}]}]}, {"value": "fromhex", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "4a4b4c", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode a hex string ' 4a4b4c ' to utf-8 ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all elements in list ` myList ` are identical"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%*s[SEP]:[SEP]%*s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "20", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Python", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "20", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Very[SEP]Good", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format number of spaces between strings ` Python ` , ` %*s[SEP]:[SEP]%*s ` and ` Very[SEP]Good ` to be ` 20 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cp1251", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to convert a string from cp-1251 to utf-8 ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "res", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "kwargs", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "IsNot", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get rid of none values in dictionary ` kwargs `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "res", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "kwargs", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "IsNot", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get rid of none values in dictionary ` kwargs `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "check_output", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ps[SEP]-ef[SEP]|[SEP]grep[SEP]something[SEP]|[SEP]wc[SEP]-l", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"capture final output of a chain of system commands ` ps[SEP]-ef[SEP]|[SEP]grep[SEP]something[SEP]|[SEP]wc[SEP]-l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate a list of strings ` ['a', 'b', 'c'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "Series", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "intersection", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find intersection data between series ` s1 ` and series ` s2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "client", "type": "identifier", "children": []}]}]}, {"value": "send", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "HTTP/1.0[SEP]200[SEP]OK[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sending http headers to ` client `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "then", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "when", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format a datetime string ` when ` to extract date only"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "inputString", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a multi-line string ` inputString ` into separate strings"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a[SEP][LINE][SEP]b[SEP][LINE][SEP]c", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a[SEP][LINE][SEP]b[SEP][LINE][SEP]c multi-line string ` a[SEP][LINE][SEP]b[SEP][LINE][SEP]c ` by new line character ` a[SEP][LINE][SEP]b[SEP][LINE][SEP]c `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate elements of list ` b ` by a colon \" : \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Entry", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the first object from a queryset in django model ` Entry `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"calculate sum over all rows of 2d numpy array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "warnings", "type": "identifier", "children": []}]}]}, {"value": "simplefilter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "always", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"enable warnings using action ' always '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate items of list ` l ` with a space '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "python.exe", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "hello.py", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "htmlfilename.htm", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"run script ' hello.py ' with argument ' htmlfilename.htm ' on terminal using python executable"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "30/03/09[SEP]16:31:32.123", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d/%m/%y[SEP]%H:%M:%S.%f", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how can i parse a time string containing milliseconds in it with python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_float", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string ` my_string ` with dot and comma into a float number ` my_float `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "123,456.908", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string ` 123,456.908 ` with dot and comma into a floating number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/path/to/whatever", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set pythonpath in python script ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\W+)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Words,[SEP]words,[SEP]words.", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' Words,[SEP]words,[SEP]words. ' using a regex ' (\\W+) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Output.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open a file ` Output.txt ` in append mode"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlretrieve", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www.example.com/songs/mp3.mp3", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "mp3.mp3", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download a file \" http://www.example.com/songs/mp3.mp3 \" over http and save to \" mp3.mp3 \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "u", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlopen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_name", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "wb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "meta", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "u", "type": "identifier", "children": []}]}]}, {"value": "info", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_size", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "meta", "type": "identifier", "children": []}]}]}, {"value": "getheaders", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Content-Length", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Downloading:[SEP]%s[SEP]Bytes:[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_name", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "file_size", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_size_dl", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "block_sz", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "8192", "type": "object", "children": []}]}]}]}, {"value": "While", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buffer", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "u", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "block_sz", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buffer", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Break", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}, {"value": "AugAssign", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_size_dl", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buffer", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buffer", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "status", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%10d[SEP][%3.2f%%]", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_size_dl", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_size_dl", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100.0", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_size", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "status", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "status", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "status", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "status", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "end", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "close", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download a file ` url ` over http and save to ` file_name `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "response", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlopen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www.example.com/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "html", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "response", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download a file ' http://www.example.com/ ' over http"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download a file ` url ` over http"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "response", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "stream", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}, {"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "10MB", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "wb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "handle", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tqdm", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "response", "type": "identifier", "children": []}]}]}, {"value": "iter_content", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "handle", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}]}]}	"download a file ` url ` over http and save to \" 10MB \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parser", "type": "identifier", "children": []}]}]}, {"value": "add_argument", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "--version", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "action", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "version", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "version", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%(prog)s[SEP]2.0", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"argparse add argument with flag ' --version ' and version action of ' %(prog)s[SEP]2.0 ' to parser ` parser `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove key ' c ' from dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "split_df", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "csv_df", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "suffixes", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_left", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "_right", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create new dataframe object by merging columns \" key \" of dataframes ` split_df ` and ` csv_df ` and rename the columns from dataframes ` split_df ` and ` csv_df ` with suffix ` _left ` and ` _right ` respectively"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` s ` by space with ` 4 ` splits"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Enter[SEP]your[SEP]input:", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read keyboard-input"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "app", "type": "identifier", "children": []}]}]}, {"value": "run", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "debug", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"enable debug mode on flask application ` app `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pickle", "type": "identifier", "children": []}]}]}, {"value": "dump", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "save.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "wb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python save list ` mylist ` to file object ' save.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "scipy", "type": "identifier", "children": []}]}]}, {"value": "tensordot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "P", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "T", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axes", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "swapaxes", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"multiply a matrix ` P ` with a 3d tensor ` T ` in scipy"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "zeros", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create 3d array of zeroes of size ` (3,3,3) `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "content", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"cut off the last word of a sentence ` content `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "asarray", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"convert scalar ` x ` to array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum all elements of nested list ` L `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "!f", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "470FC614", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert hex string ' 470FC614 ' to a float number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dict", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"multiple each value by ` 2 ` for all keys in a dictionary ` my_dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sleep.sh", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"running bash script ' sleep.sh '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"join elements of list ` l ` with a comma ` , `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a comma-separated string from a list ` myList `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse the list that contains 1 to 10"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "lamp,[SEP]bag,[SEP]mirror", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bag,", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove substring ' lamp,[SEP]bag,[SEP]mirror ' from a string ' lamp,[SEP]bag,[SEP]mirror '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse the order of words , delimited by ` . ` , in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "fromtimestamp", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M:%S.%f", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert epoch time represented as milliseconds ` s ` to string using format ' %Y-%m-%d[SEP]%H:%M:%S.%f '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M:%S", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "gmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1236472051807", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1000.0", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse milliseconds epoch time ' 1236472051807 ' to format ' %Y-%m-%d[SEP]%H:%M:%S '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "days", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the date 7 days before the current date"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "column", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum elements at index ` column ` of each list in list ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sum columns of a list ` array `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "base64", "type": "identifier", "children": []}]}]}, {"value": "b64encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bytes", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "your[SEP]string", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode binary your[SEP]string ' your[SEP]string ' to base64 code"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dicts", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dicts", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"combine list of dictionaries ` dicts ` with the same keys in each list to a single dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dicts", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dicts", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"merge a nested dictionary ` dicts ` into a flat dictionary by concatenating nested values with the same key ` k `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myParam", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"how do i get the url parameter in a flask view"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Counter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"identify duplicate values in list ` mylist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "insert", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "apps", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert directory ' apps ' into directory ` __file__ `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "subdir", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"modify sys.path for python module ` subdir `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "db", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]present[SEP]VALUES('test2',[SEP]?,[SEP]10)", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert a ' None ' value into a sqlite3 table ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "image", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "menuitem", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_menuitems", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "image", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "menuitem", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"flatten list ` list_of_menuitems `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "extend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append elements of a set ` b ` to a list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "extend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append elements of a set to a list in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "savetxt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c:\\data[LINE]p.txt", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "fmt", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%d", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"write the data of dataframe ` df ` into text file ` np.txt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c:\\data\\pandas.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "header", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "sep", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "mode", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"write content of dataframe ` df ` into text file ' c:\\data\\pandas.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "rpartition", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` x ` by last occurrence of character ` - `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "rsplit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the last part of a string before the character ' - '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ftp", "type": "identifier", "children": []}]}]}, {"value": "storlines", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "STOR", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"upload file using ftp"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "browser", "type": "identifier", "children": []}]}]}, {"value": "execute_script", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "document.getElementById('XYZ').value+='1'", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add one to the hidden web element with id ' XYZ ' with selenium python script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "maximum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create array containing the maximum value of respective elements of array ` [2, 3, 4] ` and array ` [1, 5, 2] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a list ` l ` and move first 3 elements to the end of the list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fn", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "isfile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fn", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"loop over files in directory ' . '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "dirs", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "filenames", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "walk", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "source", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filenames", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"loop over files in directory ` source `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1000", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10000", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a random list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%H:%M:%S.%f", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"using % f with strftime ( ) in python to get microseconds"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "db", "type": "identifier", "children": []}]}]}, {"value": "GqlQuery", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "SELECT[SEP]*[SEP]FROM[SEP]Schedule[SEP]WHERE[SEP]station[SEP]=[SEP]$1", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "key", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"google app engine execute gql query ' SELECT[SEP]*[SEP]FROM[SEP]Schedule[SEP]WHERE[SEP]station[SEP]=[SEP]$1 ' with parameter ` foo.key() `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "b", "type": "identifier", "children": []}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "contains", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^f", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"filter rows in pandas starting with alphabet ' f ' using regular expression ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "col", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "col", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tab", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a 2 dimensional list ` tab ` as a table with delimiters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BC", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuples", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "errors", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ignore", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pandas : delete rows in dataframe ` df ` based on multiple columns values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "({:d}[SEP]goals,[SEP]${:d})", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "goals", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "penalties", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format the variables ` self.goals ` and ` self.penalties ` using string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "({}[SEP]goals,[SEP]${})", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "goals", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "penalties", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format string \" ({}[SEP]goals,[SEP]${}) \" with variables ` goals ` and ` penalties `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "({0.goals}[SEP]goals,[SEP]${0.penalties})", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format string \" ({0.goals}[SEP]goals,[SEP]${0.penalties}) \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert list of lists ` L ` to list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"combine elements of each list in list ` L ` into digits of a single integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a list of lists ` L ` to list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myfile", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lines", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write the elements of list ` lines ` concatenated by special character ' [LINE] ' to file ` myfile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "AAT", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "XAC", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ANT", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "TTA", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "And", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "X", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}, {"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "N", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"removing an element from a list based on a predicate ' X ' or ' N '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\b(\\w+)([SEP]\\1\\b)+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove duplicate words from a string ` text ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"count non zero values in each column in pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<!Distillr)\\\\AcroTray\\.exe", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C:\\SomeDir\\AcroTray.exe", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"search for string that matches regular expression pattern ' (?<!Distillr)\\\\AcroTray\\.exe ' in string ' C:\\SomeDir\\AcroTray.exe '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "QH[SEP]QD[SEP]JC[SEP]KD[SEP]JS", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' QH[SEP]QD[SEP]JC[SEP]KD[SEP]JS ' into a list on white spaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ">.*<", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"search for occurrences of regex pattern ' >.*< ' in xml string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "close", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"erase all the contents of a file ` filename `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string_date", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M:%S.%f", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string into datetime using the format ' %Y-%m-%d[SEP]%H:%M:%S.%f '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thelist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "332", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find the index of a list with the first element equal to ' 332 ' within the list of lists ` thelist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^\\sa-zA-Z0-9]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"lower a string ` text ` and remove non-alphanumeric characters aside from space"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?!\\s)[\\W_]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all non-alphanumeric characters except space from a string ` text ` and lower it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "label", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "H\u2082O", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"subscript text ' H20 ' with ' 2 ' as subscripted in matplotlib labels for arrays ' x ' and ' y ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "label", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "$H_2O$", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"subscript text ' H20 ' with ' 2 ' as subscripted in matplotlib labels for arrays ' x ' and ' y ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"loop over a list ` mylist ` if sublists length equals 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Object", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"initialize a list ` lst ` of 100 objects object ( )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Object", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` lst ` containing 100 instances of object ` Object `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_css_selector", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".someclass[SEP]a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "get_attribute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "href", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the content of child tag with ` href ` attribute whose parent has css ` someclass `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Date_Time", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"joining data from dataframe ` df1 ` with data from dataframe ` df2 ` based on matching values of column ' Date_Time ' in both dataframes"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "first[SEP]string[SEP]is:[SEP]%s,[SEP]second[SEP]one[SEP]is:[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str1", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "geo.tif", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"use ` first[SEP]string[SEP]is:[SEP]%s,[SEP]second[SEP]one[SEP]is:[SEP]%s ` operator to print variable values ` str1 ` inside a first[SEP]string[SEP]is:[SEP]%s,[SEP]second[SEP]one[SEP]is:[SEP]%s"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2.MATCHES[SEP]$$TEXT$$[SEP]STRING", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "$$TEXT$$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a string by a delimiter in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "exists", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "directory", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "makedirs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "directory", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if directory ` directory ` exists and create it if necessary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "makedirs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "OSError", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "isdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": []}, {"value": "cause", "type": "expr", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}	"check if a directory ` path ` exists and create it if necessary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "distutils", "type": "identifier", "children": []}]}]}, {"value": "dir_util", "type": "identifier", "children": []}]}]}, {"value": "mkpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if a directory ` path ` exists and create it if necessary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "makedirs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "OSError", "type": "identifier", "children": []}]}]}, {"value": "exception", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "exception", "type": "identifier", "children": []}]}]}, {"value": "errno", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "errno", "type": "identifier", "children": []}]}]}, {"value": "EEXIST", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": []}, {"value": "cause", "type": "expr", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}	"check if a directory ` path ` exists and create it if necessary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\bH3\\b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "H1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace a separate word ' H3 ' by ' H1 ' in a string ' text '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\D", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "aas30dsa20", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"substitute ascii letters in string ' aas30dsa20 ' with empty string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aas30dsa20", "type": "string", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get digits only from a string ` aas30dsa20 ` using lambda function"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"access a tag called \" name \" in beautifulsoup ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "records", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "record", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_id", "type": "string", "children": []}]}]}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "record", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "record", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a dictionary ` records ` of key-value pairs in pymongo cursor ` cursor `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "concatenate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create new matrix object by concatenating data from matrix a and matrix b"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "vstack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concat two matrices ` A ` and ` B ` in numpy"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "stat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filepath", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "st_size", "type": "identifier", "children": []}]}]}]}]}]}	"get the characters count in a file ` filepath `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the occurrences of item \" a \" in list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Counter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the occurrences of items in list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"count the occurrences of items in list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the occurrences of items in list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the occurrences of item \" b \" in list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "shutil", "type": "identifier", "children": []}]}]}, {"value": "copy", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "srcfile", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "dstdir", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"copy file ` srcfile ` to directory ` dstdir `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the key associated with the largest value in dictionary ` x ` whilst key is non-zero value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get the largest key whose not associated with value of 0 in dictionary ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the largest key in a dictionary ` x ` with non-zero value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "seek", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"put the curser at beginning of the file"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "isnull", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"combine values from column ' b ' and column ' a ' of dataframe ` df ` into column ' c ' of datafram ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ele", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"remove key ' ele ' from dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "MyModel", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "timestamp", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "F", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "timestamp", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "days", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "36524.25", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"update datetime field in ` MyModel ` to be the existing ` timestamp ` plus 100 years"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "it", "type": "string", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "was", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "annoying", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"merge list ` ['it'] ` and list ` ['was'] ` and list ` ['annoying'] ` into one list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "zfill", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"increment a value with leading zeroes in a number ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "LtE", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if a pandas dataframe ` df ` 's index is sorted"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert tuple ` t ` to list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` t ` to tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "level1", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "level1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert tuple ` level1 ` to list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pprint", "type": "identifier", "children": []}]}]}, {"value": "pprint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dataobject", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "logFile", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"send the output of pprint object ` dataobject ` to file ` logFile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BoolCol", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get index of rows in column ' BoolCol '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "iloc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "flatnonzero", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BoolCol", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"create a list containing the indexes of rows where the value of column ' BoolCol ' in dataframe ` df ` are equal to true"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BoolCol", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get list of indexes of rows where column ' BoolCol ' values match true"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BoolCol", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get index of rows in dataframe ` df ` which column ' BoolCol ' matches value true"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "owd", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change working directory to the directory ` owd `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]test[SEP]VALUES[SEP](?,[SEP]'bar')", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testfield", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert data from a string ` testfield ` to sqlite db ` c `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\x89[LINE]", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "string_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode string \" \\x89[LINE] \" into a normal string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "raw_string", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "string_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a raw string ` raw_string ` into a normal string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "raw_byte_string", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a raw string ` raw_byte_string ` into a normal string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "finditer", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\d)\\1*", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a string ` s ` with into all strings of repeated characters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "scatter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randn", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randn", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "facecolors", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "none", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"scatter a plot with x , y position of ` np.random.randn(100) ` and face color equal to none"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randn", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randn", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "o", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "mfc", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "none", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"do a scatter plot with empty circles"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "div", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "id", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "main-content", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "decompose", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove a div with a id ` main-content ` using beautifulsoup"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ids", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "contains", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ball", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"filter rows containing key word ` ball ` in column ` ids `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"convert index at level 0 into a column in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "index1", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}]}]}]}	"add indexes in a data frame ` df ` to a column ` index1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "tick", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "obs", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"convert pandas index in a dataframe to columns"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get reverse of list items from list ' b ' using extended slicing"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"join each element in array ` a ` with element at the same index in array ` b ` as a tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ravel", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "ravel", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "i4,i4", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"zip two 2-d arrays ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_ints", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` list_of_ints ` into a comma separated string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "post", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "data", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "DATA", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "headers", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "HEADERS_DICT", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "auth", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "username", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "password", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"send a post request with raw data ` DATA ` and basic authentication with ` username ` and ` password `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "abcd}def}", "type": "string", "children": []}]}]}, {"value": "rfind", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "}", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find last occurrence of character ' } ' in string \" abcd}def} \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"iterate ove list ` [1, 2, 3] ` using list comprehension"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "y", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract all the values with keys ' x ' and ' y ' from a list of dictionaries ` d ` to list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "splitext", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "basename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hemanth.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the filename without the extension from file ' hemanth.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a dictionary by adding each two adjacent elements in tuple ` x ` as key/value pair to it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "D", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "E", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "F", "type": "string", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "G", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "H", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "I", "type": "string", "children": []}]}]}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a list containing flattened list ` [['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "closing_price", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "GtE", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "99", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "closing_price", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "LtE", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "101", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"select rows in a dataframe ` df ` column ' closing_price ' between two values 99 and 101"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<br>", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "regex", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"replace all occurences of newlines ` [LINE] ` with ` <br> ` in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<br>", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "regex", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"replace all occurrences of a string ` [LINE] ` by string ` <br> ` in a pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list containing each two adjacent letters in string ` word ` as its elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}, {"value": "arg", "type": "arg", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of pairs from a string ` word ` using lambda function"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(https?://[^\\s]+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "myString", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract a url from a string ` myString `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?P<url>https?://[^\\s]+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "myString", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "url", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract a url from a string ` myString `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^A-Za-z0-9]+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all special characters , punctuation and spaces from a string ` mystring ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "date_range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2016-01-01", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "freq", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "WOM-2FRI", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "periods", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "13", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"create a datetimeindex containing 13 periods of the second friday of each month starting from date ' 2016-01-01 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "matrix", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"create multidimensional array ` matrix ` with 3 rows and 2 columns in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "_", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace spaces with underscore"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "abspath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mydir/myfile.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get an absolute file path of file ' mydir/myfile.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` my_string ` on white spaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "splitext", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get filename without extension from file ` filename `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list containing the sum of each element ` i ` in list ` l ` plus the previous elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Docs/src/Scripts/temp", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/\u0000/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u0000", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` Docs/src/Scripts/temp ` by ` / ` keeping ` / ` in the result"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "shuffle", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "transpose", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"shuffle columns of an numpy array ' r '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "D", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"copy all values in a column ' B ' to a new column ' D ' in a pandas data frame ' df '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "maindata", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Info", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"find a value within nested json ' data ' where the key inside another key ' B ' is unknown ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "predicate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check characters of string ` string ` are true predication of function ` predicate `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "statvfs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "f_files", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "statvfs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "f_ffree", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"determine number of files on a drive with python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "fetchone", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"how to get a single result from a sqlite query in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "user_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "number", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "number", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "user_input", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert string ` user_input ` into a list of integers ` user_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "user", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of integers by splitting a string ` user ` with comma"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sorting a python list by two criteria"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ut", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cmpfun", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of objects ` ut ` , based on a function ` cmpfun ` in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ut", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reverse list ` ut ` based on the ` count ` attribute of each object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ut", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of objects ` ut ` in reverse order by their ` count ` property"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_partial_link_text", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Send", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"click a href button ' Send ' with selenium"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "findElement", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "By", "type": "identifier", "children": []}]}]}, {"value": "linkText", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Send[SEP]InMail", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"click a href button having text ` Send[SEP]InMail ` with selenium"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_link_text", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Send[SEP]InMail", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"click a href button with text ' Send[SEP]InMail ' with selenium"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ME", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"cast an int ` i ` to a string and concat to string ' ME '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort_values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "System_num", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Dis", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sorting data in dataframe pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "outfile", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "#test[SEP]firstline[LINE]", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "infile", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"prepend the line ' #test[SEP]firstline[LINE] ' to the contents of file ' infile ' and save as the file ' outfile '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "t", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list ` l ` by length of value in tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\b(\\w+)d\\b", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` s ` by words that ends with ' d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ba[rzd]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "foobarrrr", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"return ` True ` if string ` foobarrrr ` contains regex ` ba[rzd] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"removing duplicates in list ` t `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "source_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"removing duplicates in list ` source_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "OrderedDict", "type": "identifier", "children": []}]}]}, {"value": "fromkeys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "abracadabra", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"removing duplicates in list ` abracadabra `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert array ` a ` into a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert the first row of numpy matrix ` a ` to a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "text", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Address:", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "findNext", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "td", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "contents", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"in ` soup ` , get the content of the sibling of the ` td ` tag with text content ` Address: `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%d@%d", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert elements of each tuple in list ` l ` into a string separated by character ` @ `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%d@%d", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert each tuple in list ` l ` to a string with ' @ ' separating the tuples ' elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "execute_script", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "return[SEP]document.documentElement.outerHTML;", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the html from the current web page of a selenium driver"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "teststr", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\d+[xX]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get all matches with regex pattern ` \\d+[xX] ` in list of string ` teststr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "50", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "900", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"select values from column ' A ' for which corresponding values in column ' B ' will be greater than 50 , and in column ' C ' - equal 900 in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "o", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort dictionary ` o ` in ascending order based on its keys and items"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get sorted list of keys of dict ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to sort dictionaries by keys in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert string \" 1 \" into integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"function to convert strings into integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "T2", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "T1", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert items in ` T1 ` to integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "./test.sh", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"call a shell script ` ./test.sh ` using subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "notepad", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"call a shell script ` notepad ` using subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "l2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"combine lists ` l1 ` and ` l2 ` by alternating their elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "encoded", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "base64", "type": "identifier", "children": []}]}]}, {"value": "b64encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "data[SEP]to[SEP]be[SEP]encoded", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode string ' encoded '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "encoded", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "data[SEP]to[SEP]be[SEP]encoded", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ascii", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode a string ` encoded ` data[SEP]to[SEP]be[SEP]encoded ` ascii ` encoding"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lol", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "csv", "type": "identifier", "children": []}]}]}, {"value": "reader", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "text.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "delimiter", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse tab-delimited csv file ' text.txt ' into a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_object", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "my_str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get attribute ` my_str ` of object ` my_object `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "LD", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "LD", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"group a list of dicts ` LD ` into one dict by key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_pairs", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how do i sum the first value in each tuple in a list of tuples in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ast", "type": "identifier", "children": []}]}]}, {"value": "literal_eval", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{'code1':1,'code2':1}", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert unicode string u \" {'code1':1,'code2':1} \" into dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"find all words in a string ` mystring ` that start with the ` $ ` sign"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^https?:\\/\\/.*[[LINE]]*", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "flags", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "MULTILINE", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"remove any url within string ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "in1d", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace all elements in array ` A ` that are not present in array ` [1, 3, 4] ` with zeros"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"calculate mean across dimension in a 2d array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/usr/bin/Rscript", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "--vanilla", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/pathto/MyrScript.r", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"running r script ' /pathto/MyrScript.r ' from python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/usr/bin/Rscript[SEP]--vanilla[SEP]/pathto/MyrScript.r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"run r script ' /usr/bin/Rscript[SEP]--vanilla[SEP]/pathto/MyrScript.r '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "writer", "type": "identifier", "children": []}]}]}, {"value": "writeheader", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add a header to a csv file"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "fillna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"replacing nan in the dataframe ` df ` with row average"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M:%S", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "localtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1347517370", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert unix timestamp ' 1347517370 ' to formatted string ' %Y-%m-%d[SEP]%H:%M:%S '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "super", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Derived", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "cls", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "do", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"call a base class 's class method ` do ` from derived class ` Derived `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"selecting rows in numpy ndarray ' a ' , where the value in the first column is 0 and value in the second column is 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "hello[SEP]world[SEP]sample[SEP]text", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"separate words delimited by one or more spaces into a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"length of longest element in list ` words `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "from_user", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"get the value associated with unicode key ' from_user ' of first dictionary in list ` result `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "File.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"retrieve each line from a file ' File.txt ' as a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "res", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"swap keys with values in a dictionary ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_file", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "path/to/FILE_NAME.ext", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open a file ` path/to/FILE_NAME.ext ` in write mode"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "col2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col3", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "nunique", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to count distinct values in a column of a pandas group by object ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "EMP$$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict1", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if any key in the dictionary ` dict1 ` starts with the string ` EMP$$ `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict1", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "EMP$$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"create list of values from dictionary ` dict1 ` that have a key that starts with ' EMP$$ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "email", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "list", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sf", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sf", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a pandas series ` sf ` into a pandas dataframe ` df ` with columns ` email ` and ` list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print elements of list ` list ` seperated by tabs ` \t `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u00d0\u00bf\u00d1\u0080\u00d0\u00b8", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "raw_unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print unicode string ' \u00d0\u00bf\u00d1\u0080\u00d0\u00b8 ' with utf-8"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Sopet\u00c3\u00b3n", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "latin-1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode a latin character in string ` Sopet\u00c3\u00b3n ` properly"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "image", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "image", "type": "identifier", "children": []}]}]}, {"value": "resize", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Image", "type": "identifier", "children": []}]}]}, {"value": "ANTIALIAS", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"resized image ` image ` to width , height of ` (x, y) ` with filter of ` ANTIALIAS `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "n(?<=[^n]n)n+(?=[^n])(?i)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regex , find \" n \" s only in the middle of string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.0f}%", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1.0", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display the float ` 1/3*100 ` as a percentage"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "title", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of dictionary ` mylist ` by the key ` title `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "title", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list ` l ` of dicts by dict value ' title '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "title", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "title_url", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of dictionaries by the value of keys ' title ' , ' title_url ' , ' id ' in ascending order ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "heapq", "type": "identifier", "children": []}]}]}, {"value": "nlargest", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "i", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "abs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l1", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l2", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find 10 largest differences between each respective elements of list ` l1 ` and list ` l2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find_all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "span", "type": "string", "children": []}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "class", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "starGryB[SEP]sp", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"beautifulsoup find all ' span ' elements in html string ` soup ` with class of ' starGryB[SEP]sp '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_sql", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "engine", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "schema", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a_schema", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"write records in dataframe ` df ` to table ' test ' in schema ' a_schema '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "brackets", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^(){}[\\]]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract brackets from string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove duplicate elements from list ' L '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"read a file ` file ` without newlines"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testlist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get the position of item 1 in ` testlist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testlist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get the position of item 1 in ` testlist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testlist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"get the position of item 1 in ` testlist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testlist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"get the position of item 1 in ` testlist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "gen", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testlist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "gen", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"get the position of item 1 in ` testlist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testlist", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the position of item ` element ` in list ` testlist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testlist", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ValueError", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}	"get the position of item ` element ` in list ` testlist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lis", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "item", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"find the first element of the tuple with the maximum second element in a list of tuples ` lis `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lis", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get the item at index 0 from the tuple that has maximum value at index 1 in list ` lis `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "sleep", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a delay of 1 second"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ")", "type": "string", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list of tuples ` L ` to a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "models", "type": "identifier", "children": []}]}]}, {"value": "CharField", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "max_length", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "default", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0000000", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "editable", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"django set default value of field ` b ` equal to ' 0000000 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list5", "type": "identifier", "children": []}]}, {"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "degree", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort lis ` list5 ` in ascending order based on the degrees value of its elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list5", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "vertex", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "degree", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "vertex", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "vertex", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"how do i perform secondary sorting in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a list into a generator object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "newlist", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "oldlist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "removelist", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove elements from list ` oldlist ` that have an index number mentioned in list ` removelist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "yourfile.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open a file ` yourfile.txt ` in write mode"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "obj", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "attr", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get attribute ' attr ' from object ` obj `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "ImportFrom", "type": "stmt", "children": [{"value": "functools", "type": "identifier", "children": []}, {"value": "names", "type": "alias", "children": [{"value": "alias", "type": "alias", "children": [{"value": "reduce", "type": "identifier", "children": []}, {"value": "asname", "type": "identifier", "children": []}]}]}, {"value": "0", "type": "int", "children": []}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reduce", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "a", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}, {"value": "arg", "type": "arg", "children": [{"value": "b", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aa", "type": "string", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bb", "type": "string", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cc", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert tuple of tuples ` (('aa',), ('bb',), ('cc',)) ` to tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "a", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aa", "type": "string", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bb", "type": "string", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cc", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert tuple of tuples ` (('aa',), ('bb',), ('cc',)) ` to list in one line"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "range", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"python pandas : how to replace a characters in a column of a dataframe ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unzip the list ` [('a', 1), ('b', 2), ('c', 3), ('d', 4)] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unzip the list ` [('a', 1), ('b', 2), ('c', 3), ('d', 4)] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "original", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}, {"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "original", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"unzip list ` original `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "original", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}, {"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "original", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"unzip list ` original ` and return a generator"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "e", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unzip list ` [('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}, {"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "e", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unzip list ` [('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )] ` and fill empty results with none"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Decimal", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "3.9", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode ` Decimal('3.9') ` to a json string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mynewkey", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mynewvalue", "type": "string", "children": []}]}]}]}]}]}	"add key \" mynewkey \" to dictionary ` d ` with value \" mynewvalue \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add key ' a ' to dictionary ` data ` with value 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "a", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add key ' a ' to dictionary ` data ` with value 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "a", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"add key ' a ' to dictionary ` data ` with value 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "matrix", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find maximal value in matrix ` matrix `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "answer", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "answer", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number ` answer ` to 2 precision after the decimal point"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ip", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[0-9]+(?:\\.[0-9]+){3}", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract ip address from an html string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"filter dataframe ` df ` by values in column ` A ` that appear more than once"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myfile", "type": "identifier", "children": []}]}]}, {"value": "splitlines", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"append each line in file ` myfile ` into a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "readlines", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of integers ` lst ` from a file ` filename.txt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "colorbar", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "mappable", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mappable", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "cax", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax3", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"add color bar with image ` mappable ` to plot ` plt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Counter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "text", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "most_common", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count most frequent 100 words in column ' text ' of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(.+?):(.+?)\\b[SEP]?", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python split a string using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "combinations", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate all 2-element subsets of tuple ` (1, 2, 3) `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pytz", "type": "identifier", "children": []}]}]}, {"value": "utc", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a value of datetime.today ( ) in the utc time zone"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list2", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get a new list ` list2 ` by removing empty list from a list of lists ` list1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list2", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"create ` list2 ` to contain the lists from list ` list1 ` excluding the empty lists from ` list1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "HttpResponse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "mimetype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "application/json", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"django response with json ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(.*?)\\[.*?\\]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "example_str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all text that is not enclosed within square brackets in string ` example_str `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(.*?)(?:\\[.*?\\]|$)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "example_str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"use a regex to get all text in a string ` example_str ` that is not surrounded by square brackets"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\(.+?\\)|\\w", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "(zyx)bc", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get whatever is between parentheses as a single match , and any char outside as an individual match in string ' (zyx)bc '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\((.*?)\\)|(\\w)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "(zyx)bc", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex ' \\((.*?)\\)|(\\w) ' with string ' (zyx)bc '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\(.*?\\)|\\w", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "(zyx)bc", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match multiple regex patterns with the alternation operator ` | ` in a string ` (zyx)bc `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elements", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%{0}%", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elements", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"formate each string cin list ` elements ` into pattern ' %{0}% '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "background-process", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "arguments", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open a background process ' background-process ' with arguments ' arguments '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mykeys", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get list of values from dictionary ' mydict ' w.r.t . list of keys ' mykeys '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Name", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Joe", "type": "string", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Age", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "22", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` [('Name', 'Joe'), ('Age', 22)] ` into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"average each two columns of array ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode-escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\"", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\\"", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"double backslash escape all double quotes in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\W+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string into a list of words and whitespace"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "kind", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "barh", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "stacked", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"plotting stacked barplots on a panda data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myDictionary", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"reverse the keys and values in a dictionary ` myDictionary `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "Or", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "how", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "what", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"finding the index of elements containing substring ' how ' and ' what ' in a list of strings ' myList ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "obj", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if object ` obj ` is a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "o", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if object ` o ` is a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "o", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Is", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"check if object ` o ` is a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "o", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if object ` o ` is a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "obj_to_test", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if ` obj_to_test ` is a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list2", "type": "identifier", "children": []}]}]}, {"value": "extend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append list ` list1 ` to ` list2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}]}, {"value": "extend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylog", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append list ` mylog ` to ` list1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "extend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append list ` a ` to ` c `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylog", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"append items in list ` mylog ` to ` list1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append a tuple of elements from list ` a ` with indexes ' [0][0] [0][2] ' to list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "app", "type": "identifier", "children": []}]}]}, {"value": "config", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "SECRET_KEY", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Your_secret_string", "type": "string", "children": []}]}]}]}]}]}	"initialize ` SECRET_KEY ` in flask config with ` Your_secret_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "out", "type": "identifier", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "out-1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "out-2", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "out", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"unpack a series of tuples in pandas into a dataframe with column names ' out-1 ' and ' out-2 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stocks_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stocks_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "MSFT", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find the index of an element ' MSFT ' in a list ` stocks_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "set_xticklabels", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "labels", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "rotation", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "45", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"rotate the xtick labels of matplotlib plot ` ax ` by ` 45 ` degrees to make long labels readable"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^\\w]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove symbols from a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "basename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "realpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the current directory of a script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "'\\\\[0-7]{1,3}'", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find octal characters matches from a string ` str ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[[SEP]](?=[A-Z]+\\b)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` input ` based on occurrences of regex pattern ' [[SEP]](?=[A-Z]+\\b) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[[SEP]](?=[A-Z])", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` input ` at every space followed by an upper-case letter"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "post", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "files", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "files", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "headers", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "headers", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "data", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"send multipart encoded file ` files ` to url ` url ` with headers ` headers ` and metadata ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "wb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bytes_", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write bytes ` bytes_ ` to a file ` filename ` in python 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dct", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list from a list ` lst ` with values mapped into a dictionary ` dct `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "get_duplicates", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find duplicate names in column ' name ' of the dataframe ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1.923328437452", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"truncate float 1.923328437452 to 3 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "li", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d/%m/%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` li ` in descending order based on the date value in second element of each list in list ` li `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "set_rlabel_position", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "135", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"place the radial ticks in plot ` ax ` at 135 degrees"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "isabs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if path ` my_path ` is an absolute path"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yourdict", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get number of keys in dictionary ` yourdict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yourdictfile", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of keys in dictionary ` yourdictfile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "first", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pandas dataframe get first row of each group by ' id '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "Series", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"split a list in first column into multiple columns keeping other columns as well in pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "src=\"js/([^\"]*\\bjquery\\b[^\"]*)\"", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract attributes ' src=\"js/([^\"]*\\bjquery\\b[^\"]*)\" ' from string ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_f", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_f", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3.4", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "1.0", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_f", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum integers contained in strings in list ` ['', '3.4', '', '', '1.0'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c:\\Program[SEP]Files\\VMware\\VMware[SEP]Server\\vmware-cmd.bat", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"call a subprocess with arguments ` c:\\Program[SEP]Files\\VMware\\VMware[SEP]Server\\vmware-cmd.bat ` that may contain spaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "q", "type": "identifier", "children": []}]}]}, {"value": "put", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse a priority queue ` q ` in python without using classes"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "group", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "kind", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "color", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "g", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "g", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"make a barplot of data in column ` group ` of dataframe ` df ` colour-coded according to list ` color `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([a-fA-F\\d]{32})", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all matches of regex pattern ' ([a-fA-F\\d]{32}) ' in string ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the length of list ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"getting the length of array ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"getting the length of array ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_tuple", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"getting the length of ` my_tuple `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"getting the length of ` my_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\a", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "string_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove escape character from string \" \\a \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "obama", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%temp%", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%temp%", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace each ' a ' with ' b ' and each ' b ' with ' a ' in the string ' obama ' in a single pass ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "shutil", "type": "identifier", "children": []}]}]}, {"value": "rmtree", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/folder_name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove directory tree ' /folder_name '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "weekday", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "my_dt", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "weekday", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a new column ` weekday ` in pandas data frame ` data ` based on the values in column ` my_dt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reverse sort counter ` x ` by values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "pair", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reverse sort counter ` x ` by value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "vstack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append a numpy array ' b ' to a numpy array ' a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "concatenate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"numpy concatenate two arrays ` a ` and ` b ` along the first axis"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "concatenate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"numpy concatenate two arrays ` a ` and ` b ` along the second axis"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "r_", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"numpy concatenate two arrays ` a ` and ` b ` along the first axis"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"numpy concatenate two arrays ` a ` and ` b ` along the first axis"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "socket", "type": "identifier", "children": []}]}]}, {"value": "getaddrinfo", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "google.com", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "80", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"fetch address information for host ' google.com ' ion port 80"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "xs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sat", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "day", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "drop_level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"add a column ' day ' with value ' sat ' to dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "HttpResponse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Unauthorized", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "status", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "401", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"return a 401 unauthorized in django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Flask", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__name__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "template_folder", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "wherever", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"flask set folder ' wherever ' as the default template folder"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "session", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]t1[SEP](SELECT[SEP]*[SEP]FROM[SEP]t2)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how do i insert into INSERT[SEP]INTO[SEP]t1[SEP](SELECT[SEP]*[SEP]FROM[SEP]t2) ( select INSERT[SEP]INTO[SEP]t1[SEP](SELECT[SEP]*[SEP]FROM[SEP]t2) from t2 ) in sqlalchemy ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c2", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "row", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of lists ' c2 ' such that third row comes first"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c2", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "row", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sorting a list of lists in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c2", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "row", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sorting a list of lists in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "matplotlib", "type": "identifier", "children": []}]}]}, {"value": "rc", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "font", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "arg", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sans-serif", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "family", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Arial", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "sans-serif", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"set font ` Arial ` to display non-ascii characters in matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "toordinal", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert datetime column ' date ' of pandas dataframe ' df ' to ordinal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "get_attribute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "innerHTML", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get html source of selenium webelement ` element `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "get_loc", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bob", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the integer location of a key ` bob ` in a pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "gnome-terminal[SEP]-e[SEP]'bash[SEP]-c[SEP]\"sudo[SEP]apt-get[SEP]update;[SEP]exec[SEP]bash\"'", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open a ' gnome ' terminal from python script and run ' sudo gnome-terminal[SEP]-e[SEP]'bash[SEP]-c[SEP]\"sudo[SEP]apt-get[SEP]update;[SEP]exec[SEP]bash\"' update ' command ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dict", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "third_key", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add an item with key ' third_key ' and value 1 to an dictionary ` my_dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}]}]}	"declare an array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert item ` 12 ` to a list ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "insert", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "wuggah", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add an entry ' wuggah ' at the beginning of list ` myList `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\xF3\\xBE\\x80\\x80", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\x", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a hex-string representation to actual bytes"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"select the last column of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Letters", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}, {"value": "Str", "type": "expr", "children": [{"value": "Letters", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get the first value from dataframe ` df ` where column ' Letters ' is equal to ' C '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "column_stack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"converting two lists ` [1, 2, 3] ` and ` [4, 5, 6] ` into a matrix"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the type of ` i `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"determine the type of variable ` v `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"determine the type of variable ` v `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"determine the type of variable ` v `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"determine the type of variable ` v `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "variable_name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the type of variable ` variable_name `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "next", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "islice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the 5th item of a generator"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\"{}\"", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a string ` word ` with string format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"join a list of strings ` list ` using a space '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` y ` containing two empty lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C:/name/MyDocuments/numbers", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"read a file ' C:/name/MyDocuments/numbers ' into a list ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "char", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "char", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "it[SEP]is[SEP]icy", "type": "string", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "char", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "i", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete all occurrences of character ' i ' in string ' it[SEP]is[SEP]icy '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "i", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "it[SEP]is[SEP]icy", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete all instances of a character ' i ' in a string ' it[SEP]is[SEP]icy '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "it[SEP]is[SEP]icy", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "i", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete all characters \" i \" in string \" it[SEP]is[SEP]icy \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "char", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "char", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "it[SEP]is[SEP]icy", "type": "string", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "char", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "i", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to delete all instances of a character in a string in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "dropna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "subset", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"drop rows of pandas dataframe ` df ` having nan in column at index \" 1 \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "n", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "30", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get elements from list ` myList ` , that have a field ` n ` value 30"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "nums", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "intstringlist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"converting list of strings ` intstringlist ` to list of integer ` nums `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "eval", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Enter[SEP]the[SEP]unfriendly[SEP]numbers:", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list of string numbers into list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "stdout", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print \" . \" without newline"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2.51", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round off the float that is the product of ` 2.52 * 100 ` and convert it to an int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/mydir", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "*.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"find all files in directory \" /mydir \" with extension \" .txt \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/mydir", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "endswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"find all files in directory \" /mydir \" with extension \" .txt \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "dirs", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "files", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "walk", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/mydir", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "files", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "endswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"find all files in directory \" /mydir \" with extension \" .txt \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "legend", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"plot dataframe ` df ` without a legend"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "256", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "256", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ip", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "192.168.%d.%d", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ip", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"loop through the ip address range \" 192.168.x.x \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "256", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "256", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"loop through the ip address range \" 192.168.x.x \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "generator", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter_iprange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "192.168.1.1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "192.168.255.255", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "step", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"loop through the ip address range \" 192.168.x.x \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "LShift", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the corresponding decimal values for binary values of each boolean element in list ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "target", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%r[LINE]%r[LINE]%r[LINE]", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "line2", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "line3", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write multiple strings ` line1 ` , ` line2 ` and ` line3 ` in one line in a file ` target `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert list of lists ` data ` into a flat list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo[LINE]bar", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "string_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print new line character as ` [LINE] ` in a string ` foo[LINE]bar `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "rsplit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove last comma character ' , ' in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}	"calculate the mean of each element in array ` x ` with the element previous to it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get an array of the mean of each two consecutive values in numpy array ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "fromiter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "codecs", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "new.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "encoding", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<U2", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"load data containing ` utf-8 ` from file ` new.txt ` into numpy array ` arr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "time", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reverse sort list of dicts ` l ` by value for key ` time `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "a", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "time", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of dictionary ` l ` based on key ` time ` in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "contains", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(Hel|Just)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get rows of dataframe ` df ` that match regex ' (Hel|Just) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\[(.*)\\]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "your_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the string in ` your_string ` between two special characters \" [ \" and \" ] \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y%m%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pandas", "type": "identifier", "children": []}]}]}, {"value": "date_range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "20130226", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "20130302", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"how to create a list of date string in ' yyyymmdd ' format with python pandas ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "The[SEP]big[SEP]brown[SEP]fox[SEP]is[SEP]brown", "type": "string", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "brown", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count number of times string ' The[SEP]big[SEP]brown[SEP]fox[SEP]is[SEP]brown ' occurred in string ' The[SEP]big[SEP]brown[SEP]fox[SEP]is[SEP]brown '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "loads", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode json string ` request.body ` to python dict"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlretrieve", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "file_name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download the file from url ` url ` and save it under file ` file_name `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` text ` by space"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` text ` by \" , \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` line ` into a list by whitespace"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<!\\d)\\.(?!\\d)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"replace dot characters ' . ' associated with ascii letters in list ` s ` with space '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_strings", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "s", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` list_of_strings ` based on second index of each string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "check_call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "vasp[SEP]|[SEP]tee[SEP]tee_output", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"call multiple bash function \u2018 vasp[SEP]|[SEP]tee[SEP]tee_output \u2019 and \u2018 vasp[SEP]|[SEP]tee[SEP]tee_output \u2019 using \u2018 vasp[SEP]|[SEP]tee[SEP]tee_output \u2019"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"eliminate all strings from list ` lst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get all the elements except strings from the list ' lst ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "newlist", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_to_be_sorted", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "k", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of dictionaries ` list_to_be_sorted ` by the value of the dictionary key ` name `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "newlist", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of dictionaries ` l ` by values in key ` name ` in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_dicts", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"how do i sort a list of dictionaries by values of the dictionary in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_dicts", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "age", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"how do i sort a list of dictionaries by values of the dictionary in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "prots", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "scores", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"how to sort a dataframe by the ocurrences in a column in python ( pandas )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "trans", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "category", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"join together with \" , \" elements inside a list indexed with ' category ' within a dictionary ` trans `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "D", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate array of strings ` ['A', 'B', 'C', 'D'] ` into a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "load", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlopen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "url", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get json data from restful service ' url '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sents", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "And", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "@$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "#", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"remove all strings from a list a strings ` sents ` where the values starts with ` @$\t ` or ` # `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Entry", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "pub_date__contains", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "08:00", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"django filter by hour"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "item", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "points", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "time", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of dictionary ` list ` first by key ` points ` and then by ` time `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1970", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "total_seconds", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert datetime object ` (1970, 1, 1) ` to seconds"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\_a)?\\.([^\\.]*)$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "_suff.\\2", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "long.file.name.jpg", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert ` _suff ` before the file extension in ` long.file.name.jpg ` or replace ` _a ` with ` suff ` if it precedes the extension ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Import", "type": "stmt", "children": [{"value": "names", "type": "alias", "children": [{"value": "alias", "type": "alias", "children": [{"value": "imp", "type": "identifier", "children": []}, {"value": "asname", "type": "identifier", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "imp", "type": "identifier", "children": []}]}]}, {"value": "reload", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "module", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reload a module ` module `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "H", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "pack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "h", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "number", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert integer ` number ` into an unassigned integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numlist", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numlist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert int values in list ` numlist ` to float"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"write dataframe ` df ` , excluding index , to a csv file"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json_data", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "loads", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "unescaped", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a urllib unquoted string ` unescaped ` to a json data ` json_data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "127", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list containing all ascii characters as its elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "newFile", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "pack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "5B", "type": "string", "children": []}]}, {"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "newFileBytes", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write ` newFileBytes ` to a binary file ` newFile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^[A-Z0-9]*(?![a-z])", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python regex - check for a capital letter with a following lowercase in string ` string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get the last key of dictionary ` dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hi[SEP]there", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "file", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"write line \" hi[SEP]there \" to file ` f `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hi[SEP]there[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "close", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write line \" hi[SEP]there[LINE] there \" to file ` myfile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "somefile.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "the_file", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "the_file", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"write line \" Hello \" to file ` somefile.txt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "iso-8859-15", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert unicode string ` s ` to ascii"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "AuthorizedEmail", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "group", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "group", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "order_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-added", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"django get maximum value associated with field ' added ' in model ` AuthorizedEmail `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Test([0-9.]*[0-9]+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all numbers and dots from a string ` text ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Test([\\d.]*\\d+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python regex to find all numbers and dots from ' text '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "powershell.exe", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "script.ps1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute script ' script.ps1 ' using ' powershell.exe ' shell"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of tuples ` b ` by third item in the tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cf", "type": "identifier", "children": []}]}]}, {"value": "get_range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "get_keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of all keys in cassandra database ` cf ` with pycassa"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a datetime with the current date & time"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "next", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "And", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the index of an integer ` 1 ` from a list ` lst ` if the list also contains boolean items"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "13", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"subtract 13 from every number in a list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C:\\", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"choose a random file from the directory contents of the c drive , ` C:\\ `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "abs", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"get the highest element in absolute value in a numpy matrix ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\"(http.*?)\"", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "MULTILINE", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "DOTALL", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all urls within text ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://[^t][^s\"]+\\.html", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "document", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match urls whose domain does n't start with ` t ` from string ` document ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "![SEP]!", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "!", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` mystring ` considering the spaces '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open file ` path ` with mode ' r '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "items", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "items", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sum elements at the same index in list ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "newaxis", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"add a new axis to array ` a `"
