{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "db", "type": "identifier", "children": []}]}]}, {"value": "session", "type": "identifier", "children": []}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "page", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"flask-sqlalchemy delete row ` page `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"serialize dictionary ` data ` and its keys to a json formatted string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_obj", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the attribute ` x ` from object ` your_obj `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rows", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "findAll", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "tr", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"beautifulsoup find all ' tr ' elements in html string ` soup ` at the five stride starting from the fourth element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a string ` s ` into integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "select", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "div[id$=_answer]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"beautifulsoup select ' div ' elements with an id attribute value ending with sub-string ' _answer ' in html parsed string ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"combining rows in pandas by adding their values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pylab", "type": "identifier", "children": []}]}]}, {"value": "ylim", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1000", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set the y axis range to ` 0, 1000 ` in subplot using pylab"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BrandName", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BrandName", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ABC", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "AB", "type": "string", "children": []}]}]}]}, {"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace values ` ['ABC', 'AB'] ` in a column ' BrandName ' of pandas dataframe ` df ` with another value ' A '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "is", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "No[SEP]'is'[SEP]here!", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Found[SEP]'is'[SEP]in[SEP]the[SEP]string.", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"check if string ` s ` contains \" is \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "order", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` mylist ` of tuples by arbitrary key from list ` order `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "some_command[SEP]with[SEP]args", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calling an external command \" args \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "done", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "el", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "el", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` done ` containing permutations of each element in list ` [a, b, c, d] ` with variable ` x ` as tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "getcwd", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\[.*?\\]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "abcd[e]yth[ac]ytwec", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all square brackets from string ' abcd[e]yth[ac]ytwec '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get index values of pandas dataframe ` df ` as list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "sleep", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "60", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a 60 seconds time delay"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Alabama_exp", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Credit_exp", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round off entries in dataframe ` df ` column ` Alabama_exp ` to two decimal places , and entries in column ` Credit_exp ` to three decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert binary string to list of integers using python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ID", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "head", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract the first four rows of the column ` ID ` from a pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iterable", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a dictionary ` d ` from list ` iterable `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{}{}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "adict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert dictionary ` adict ` into string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"truncate string ` s ` up to character ' : '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "stat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C:\\Python27\\Lib\\genericpath.py", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "st_size", "type": "identifier", "children": []}]}]}]}]}]}	"get the size of file ' C:\\Python27\\Lib\\genericpath.py '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"create an empty data frame ` df2 ` with index from another data frame ` df1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BB", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "A7", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "F6", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "9E", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a list of hex byte strings ` ['BB', 'A7', 'F6', '9E'] ` to a list of hex integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unpack elements of list ` i ` as arguments into function ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "rc", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "font", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "arg", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "size", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "30", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"change the size of the sci notation to ' 30 ' above the y axis in matplotlib ` plt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of integers in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "jsobj", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "e", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "f", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "g", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "h", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "var6", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var7", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var8", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append dict ` {'f': var6, 'g': var7, 'h': var8} ` to value of key ` e ` in dict ` jsobj['a']['b'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hex", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "walls", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list of booleans ` walls ` into a hex string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a_module", "type": "identifier", "children": []}]}]}, {"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the path of module ` a_module `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "country", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "capital", "type": "identifier", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a random key ` country ` and value ` capital ` form a dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "date", "type": "identifier", "children": []}]}]}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Y[SEP]M[SEP]d", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"jinja2 formate date ` item.date ` accorto pattern ' Y[SEP]M[SEP]d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a string after a specific substring ' , ' in string ` my_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "column_name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_value", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"select all rows whose values in a column ` column_name ` equals a scalar ` some_value ` in pandas data frame object ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "site", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Superuser", "type": "string", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"what 's the best way to search for a python dictionary value in a list of dictionaries ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2010", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "31", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "relativedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "months", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "UAdd", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get the date 1 month from today"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "gca", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "invert_xaxis", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse all x-axis points in pyplot"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "start_remove", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "end_remove", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"drop the rows in pandas timeseries ` df ` from the row containing index ` start_remove ` to the row containing index ` end_remove `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "post", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "data", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "payload", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"post request url ` url ` with parameters ` payload `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` l ` by index 2 of the item"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_id", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<check_box_id>", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "is_selected", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"determine if checkbox with id ' <check_box_id> ' is checked in selenium python webdriver"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pandas dataframe ` df ` column ' a ' to list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arrays", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"apply itertools.product to elements of a list of lists ` arrays `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"dropping all columns named ' a ' from a multiindex ' df ' , across all level ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"check if key ' c ' in ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "SELECT[SEP]*[SEP]FROM[SEP]foo[SEP]WHERE[SEP]bar[SEP]=[SEP]%s[SEP]AND[SEP]baz[SEP]=[SEP]%s", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "param1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "param2", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"mysql execute query ' SELECT[SEP]*[SEP]FROM[SEP]foo[SEP]WHERE[SEP]bar[SEP]=[SEP]%s[SEP]AND[SEP]baz[SEP]=[SEP]%s ' with parameters ` param1 ` and ` param2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "set_window_size", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1400", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1000", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set a window size to ` 1400, 1000 ` using selenium webdriver"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "permutations", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all possible sequences of elements in a list ` [2, 3, 4] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst2", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get tuples of the corresponding elements from lists ` lst ` and ` lst2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "instance", "type": "identifier", "children": []}]}]}, {"value": "__class__", "type": "identifier", "children": []}]}]}, {"value": "__name__", "type": "identifier", "children": []}]}]}]}]}]}	"how to get the concrete class name as a string ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(http://\\S+|\\S*[^\\w\\s]\\S*)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace each occurrence of the pattern ' (http://\\S+|\\S*[^\\w\\s]\\S*) ' within ` a ` with '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "unicodedata", "type": "identifier", "children": []}]}]}, {"value": "normalize", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "NFKD", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "title", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ascii", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ignore", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a unicode string ` title ` to a ' ascii ' string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "append", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"add column ` d ` to index of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the size of a list ` [1,2,3] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[!@#$]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove characters \" !@#$ \" from a string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a repeated pandas data frame object ` x ` by ` 5 ` times"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urlfetch", "type": "identifier", "children": []}]}]}, {"value": "fetch", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "deadline", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "60", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"handle the ` urlfetch_errors ` exception for imaplib request to url ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\*\\*+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "*", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace repeated instances of a character ' * ' with a single instance in a string ' text '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"check if string ` str ` is palindrome"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "intersection", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}	"check if any elements in one list ` list1 ` are in another list ` list2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "to_reverse", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"given list ` to_reverse ` , reverse the all sublists and the list itself"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create list by splitting string ` mystring ` using \" , \" as delimiter"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Book", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "author__id", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "author__id", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"filter django objects by ` author ` with ids ` 1 ` and ` 2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create a list containing the indices of elements greater than 4 in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "variable", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}]}]}	"declare an array ` variable `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/path/to/my/venv/bin/python[SEP]myscript.py", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute python code ` /path/to/my/venv/bin/python[SEP]myscript.py ` in a virtualenv ` /path/to/my/venv ` from matlab"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "FireShot3%2B%25282%2529.png", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode a double url encoded string ' FireShot3%2B%25282%2529.png ' to ' FireShot3+(2).png '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "walk", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "directory", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"getting a list of all subdirectories in the directory ` directory `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "k_v", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k_v", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reverse sort dictionary ` d ` based on its values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "left", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "state", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "sort", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "index", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"do a ` left ` merge of dataframes ` x ` and ` y ` on the column ` state ` and sort by ` index `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "abs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "11.5", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find the index of element closest to number 11.5 in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "old_set", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "new_set", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get the average values from two numpy arrays ` old_set ` and ` new_set `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "calendar", "type": "identifier", "children": []}]}]}, {"value": "monthrange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2002", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get last day of the first month in 2002"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]table[SEP](`column1`)[SEP]VALUES[SEP](%s)", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert row into mysql database with column ' column1 ' set to the value ` value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "session", "type": "identifier", "children": []}]}]}, {"value": "query", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "User", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "filter_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "id", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "123", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Bob[SEP]Marley", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"update a user 's name as ` Bob[SEP]Marley ` having id ` 123 ` in sqlalchemy"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove newline in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\S+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python split string based on regular expression"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "accumulate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list comprehension with an accumulator in range of 10"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if ` x ` is an integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"make a dictionary from list ` f ` which is in the format of four sets of \" val, key, val \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "head", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "tail", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract first and last row of a dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myDict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "e", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort dictionary of lists ` myDict ` by the third item in each list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of values for key ' key ' from a list of dictionaries ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert list of strings ` str_list ` into list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Peak", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Weeks", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a pandas data frame by column ` Peak ` in ascending and ` Weeks ` in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "lowercase", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a random string of length ` x ` containing lower cased ascii letters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterate over a dictionary ` d ` in sorted order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "OrderedDict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "t", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort a dictionary ` d ` by key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "savez", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tmp", "type": "identifier", "children": []}]}, {"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getarray", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getarray", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getarray", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"save array at index 0 , index 1 and index 8 of array ` np ` to tmp file ` tmp `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "example", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get list of sums of neighboring integers in string ` example `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Employees", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "values_list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "eng_name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "flat", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"django return a queryset list containing the values of field ' eng_name ' in model ` Employees `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[\u4e00-\u9fff]+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "ipath", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all chinese characters in string ` ipath `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "to_datetime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "Series", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "date_stngs", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string of date strings ` date_stngs ` to datetime objects and put them in a dataframe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "info", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"log message ' test ' on the root logger ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.3g}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "num", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format a string ` num ` using string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]index(url)[SEP]VALUES(%s)", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"adding url ` url ` to mysql row"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/home/adam/*.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list all \" .txt \" files of a directory \" /home/adam/ \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Unix[SEP]EOL[LINE]", "type": "string", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove newline in string ' Unix[SEP]EOL[LINE] ' on the right side"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "AugAssign", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dt", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "hours", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"subtract 5 hours from the time object ` dt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the name of the os"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "calendar", "type": "identifier", "children": []}]}]}, {"value": "monthrange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2100", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get last day of the second month in 2100"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "N", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the dimensions of numpy array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "next", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"access an arbitrary value from dictionary ` dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "MyModel", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "text__regex", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^.{254}.*", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"filter queryset for all objects in django model ` MyModel ` where texts length are greater than ` 254 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "gold", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "example_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a sum of all values from key ` gold ` in a list of dictionary ` example_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dropwhile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bad_chars", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "example_line", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove letters from string ` example_line ` if the letter exist in list ` bad_chars `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "chain", "type": "identifier", "children": []}]}]}, {"value": "from_iterable", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sequences", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove duplicates elements from list ` sequences ` and sort it in ascending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "app", "type": "identifier", "children": []}]}]}, {"value": "run", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "debug", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"run flask application ` app ` in debug mode ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "multiply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "index", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"multiply column ' A ' and column ' B ' by column ' C ' in datafram ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "setattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "attr", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "group", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"assign value in ` group ` dynamically to class property ` attr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]table[SEP]VALUES[SEP](?,[SEP]?,[SEP]?)", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "var1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var2", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var3", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert variables ` (var1, var2, var3) ` into sql statement ' INSERT[SEP]INTO[SEP]table[SEP]VALUES[SEP](?,[SEP]?,[SEP]?) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "utcnow", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current utc time"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"delete first row of array ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "flatnonzero", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calculate the mean of the nonzero values ' indices of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "group", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "rank", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"get rank of rows from highest to lowest of dataframe ` df ` , grouped by value in column ` group ` , according to value in column ` value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a new string including the first two characters of string ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_value", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "max_value", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "min_value", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"clamping floating number ` my_value ` to be between ` min_value ` and ` max_value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "unicodedata", "type": "identifier", "children": []}]}]}, {"value": "normalize", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "NFKD", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "m\u00fasica", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ascii", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ignore", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace non-ascii chars from a unicode string u ' m\u00fasica '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.2f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "13.95", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"limit float 13.949999999999999 to two decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert python 2 dictionary ` a ` to a list of tuples where the value is the first tuple element and the key is the second tuple element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hexString", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string ` hexString ` to int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list ` my_list ` into string with values separated by spaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"iterate backwards from 10 to 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "psutil", "type": "identifier", "children": []}]}]}, {"value": "cpu_percent", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "psutil", "type": "identifier", "children": []}]}]}, {"value": "virtual_memory", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print cpu and memory usage"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "left", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "word", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"merge column ' word ' in dataframe ` df2 ` with column ' word ' on dataframe ` df1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "browser", "type": "identifier", "children": []}]}]}, {"value": "find_elements_by_xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "//*[@type='submit']/@value", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "text", "type": "identifier", "children": []}]}]}]}]}]}	"get the text of multiple elements found by xpath \" //*[@type='submit']/@value \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hasattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "property", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if object ` a ` has property ' property '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "rfind", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "&", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"cut a string by delimiter ' & '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2012-05-29T19:30:03.283Z", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%dT%H:%M:%S.%fZ", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert json string ' 2012-05-29T19:30:03.283Z ' into a datetime object using format ' %Y-%m-%dT%H:%M:%S.%fZ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "rename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "gdp", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "log(gdp)", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"rename column ' gdp ' in dataframe ` data ` to ' log(gdp) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the length of lists in list ` x ` that are more than 1 item in length"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "g", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "g", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ID", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "g", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of all the duplicate items in dataframe ` df ` using pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the last 10 elements from a list ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"reverse list ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to find the index of a value in 2d array in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "24052010", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d%m%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert date string ' 24052010 ' to date object in format ' %d%m%Y '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if string ` string ` starts with a number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "emaillist", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "queryresult", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a set of tuples ` queryresult ` to a string ` emaillist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "KEY_THAT_MIGHT_EXIST", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get value of the environment variable ' KEY_THAT_MIGHT_EXIST '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "simplejson", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%d,%d", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"serialize dictionary ` d ` as a json formatted string with each key formatted to pattern ' %d,%d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a+b", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "koko", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append to file ' test ' content ' koko '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "matrix", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list ` matrix ` containing 5 lists , each of 5 items all set to 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[bcdfghjklmnpqrstvwxyz]+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "CONCERTATION", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "IGNORECASE", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find consecutive consonants in a word ` CONCENTRATION ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"find the index of the element with the maximum value from a list ' a ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "?\\(\\w+\\)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove word characters in parenthesis from string ` item ` with a regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "HOME", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/home/username/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get value of the environment variable ' HOME ' with default value ' /home/username/ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reset index of dataframe ` df ` so that existing index values are transferred into ` df ` as columns"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "issubset", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all of the following items in list ` ['a', 'b'] ` are in a list ` ['a', 'b', 'c'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zipped", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a zipped list ` zipped ` using lambda function"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"delete all columns in dataframe ` df ` that do not hold a non-zero value in its records"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?:\\w+(?:\\s+\\w+)*,\\s)+(?:\\w+(?:\\s\\w+)*)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all occurrences of regex pattern ' (?:\\w+(?:\\s+\\w+)*,\\s)+(?:\\w+(?:\\s\\w+)*) ' in string ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "xticks", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set labels ` [1, 2, 3, 4, 5] ` on axis x in plot ` plt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "main_list", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert each list in list ` main_list ` into a tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the max string length in list ` i `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pandas", "type": "identifier", "children": []}]}]}, {"value": "read_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "sep", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "lineterminator", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"reading tab-delimited csv file ` filename ` with pandas on mac"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "basename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "normpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/folderA/folderB/folderC/folderD/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to get only the last part of a path in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "content", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "content", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "messages", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"lowercase string values with key ' content ' in a list of dictionaries ` messages `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "5", "type": "string", "children": []}]}]}, {"value": "zfill", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pads string ' 5 ' on the left with 1 zero"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "awk[SEP]'{print[SEP]$10,[SEP]$11}'[SEP]test.txt[SEP]>[SEP]test2.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"taking the results of a bash command \" awk[SEP]'{print[SEP]$10,[SEP]$11}'[SEP]test.txt[SEP]>[SEP]test2.txt \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "i", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "testdata", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove duplicated items from list of lists ` testdata `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Cards", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert nested list ' Cards ' into a flat list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse a string ` string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"add 1 to each integer value in list ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parser", "type": "identifier", "children": []}]}]}, {"value": "add_argument", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "input", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "nargs", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "+", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"specify multiple positional arguments with argparse"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}	"set every two-stride far element to -1 starting from second element in array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"switch keys and values in a dictionary ` my_dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "somelist", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "resultType", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of objects ' somelist ' where the object has member number variable ` resultType `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parsed_html", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "BeautifulSoup", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "html", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parsed_html", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "div", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "attrs", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "class", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "container", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parsing html string ` html ` using beautifulsoup"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "isfile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fname", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether a file ` fname ` exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "GRAVITY", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "9.8", "type": "object", "children": []}]}]}]}]}]}	"assign float 9.8 to variable ` GRAVITY `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stuff", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "and", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace string ' and ' in string ` stuff ` with character ' / '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "load", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "codecs", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sample.json", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "utf-8-sig", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open file ' sample.json ' in read mode with encoding of ' utf-8-sig '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Jun[SEP]1[SEP]2005[SEP]1:33PM", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%b[SEP]%d[SEP]%Y[SEP]%I:%M%p", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse string \" Jun[SEP]1[SEP]2005[SEP]1:33PM  Jun[SEP]1[SEP]2005[SEP]1:33PM \" into datetime by format \" %b[SEP]%d[SEP]%Y[SEP]%I:%M%p \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort_values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Peak", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Weeks", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a pandas data frame according to column ` Peak ` in ascending and ` Weeks ` in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "CustomPK", "type": "identifier", "children": []}]}]}, {"value": "_meta", "type": "identifier", "children": []}]}]}, {"value": "pk", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}]}]}]}]}]}	"get name of primary field ` name ` of django model ` CustomPK `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "exec", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file.py", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "file.py", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "exec", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"load a file ` file.py ` into the python console"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "formatter", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "Formatter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%(asctime)s;%(levelname)s;%(message)s", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"customize the time format in python logging"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "letter", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "letter", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "e", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get all indexes of a letter ` e ` from a string ` word `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert ` a ` to string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "AssertionError", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Unexpected[SEP]value[SEP]of[SEP]'distance'!", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "distance", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cause", "type": "expr", "children": []}]}]}]}	"throw an assertion error with message \" Unexpected[SEP]value[SEP]of[SEP]'distance'! \" , distance"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www.google.com", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"load the url ` http://www.google.com ` in selenium webdriver ` driver `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cityPopulation", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "k_v", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k_v", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reverse sort items in default dictionary ` cityPopulation ` by the third item in each key 's list of values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "dropna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "subset", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "three", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "four", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "five", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "all", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"remove all null values from columns ' three ' , ' four ' and ' five ' of dataframe ` df2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "Or", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "And", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "And", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"get logical xor of ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "m", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort column ` m ` in panda dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Date", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Date", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pandas : change all the values of a column ' Date ' into \" int(str(x)[-4:]) \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myfile", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myfile", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "appended[SEP]text", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"append line \" appended[SEP]text \" to file \" test.txt \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of strings ' words ' such that items starting with ' s ' come first ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "math", "type": "identifier", "children": []}]}]}, {"value": "ceil", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}	"find the largest integer less than ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{:,}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print number ` value ` as thousands separators"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"find tuple in list of tuples ` a_list ` with the largest second element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "very_Important.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read a text file ' very_Important.txt ' into a string variable ` str `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "-1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list of strings ` ['1', '-1', '1'] ` to a list of numbers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foobar", "type": "string", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get all characters in string ' foobar ' up to the fourth index"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "geometry", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "500x500", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how can i resize the root window in tkinter ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Total[SEP]score[SEP]for", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "is", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "score", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print the string ` Total[SEP]score[SEP]for ` , the value of the variable ` name ` , the string ` is ` and the value of the variable ` Total[SEP]score[SEP]for ` in one print call ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "shutil", "type": "identifier", "children": []}]}]}, {"value": "copy", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "file2.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"copy the content of file ' file.txt ' to file ' file2.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dataList", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"keep a list ` dataList ` of lists sorted as it is created by second element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort list of lists ` L ` by the second item in each list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "?\\([^)]+\\)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove anything in parenthesis from string ` item ` with a regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello", "type": "string", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trim string \" Hello \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"a sequence of empty lists of length ` n `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "g", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' g ' in string ` str `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c:\\data\\t.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"write pandas dataframe ` df ` to the file ' c:\\data\\t.csv ' without row names"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "realpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Blog", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "pk__in", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create a django query for a list of values ` 1, 4, 7 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "GtE", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get a list of all items in list ` j ` with values greater than ` 5 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "agg", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"group rows of pandas dataframe ` df ` with same ' id '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\ud83d\\ude4f", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-16", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "surrogatepass", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-16", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a emoji from a string ` \\ud83d\\ude4f ` having surrogate pairs"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "server", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "smtplib", "type": "identifier", "children": []}]}]}, {"value": "SMTP", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "smtp.gmail.com", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "587", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"setup a smtp mail server to ` smtp.gmail.com ` with port ` 587 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "ImportFrom", "type": "stmt", "children": [{"value": "subprocess", "type": "identifier", "children": []}, {"value": "names", "type": "alias", "children": [{"value": "alias", "type": "alias", "children": [{"value": "call", "type": "identifier", "children": []}, {"value": "asname", "type": "identifier", "children": []}]}]}, {"value": "0", "type": "int", "children": []}]}]}]}	"calling an external command \" ls -l \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all object attributes of an object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "42[SEP]0", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` 42[SEP]0 ` by white spaces ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "user", "type": "identifier", "children": []}]}]}, {"value": "groups", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "name__in", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "group1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "group2", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "exists", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if a user ` user ` is in a group from list of groups ` ['group1', 'group2'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10000", "type": "object", "children": []}]}]}]}]}]}]}]}	"initialize a list ` a ` with ` 10000 ` items and each item 's value ` 0 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"remove multiple values from a list ` my_list ` at the same time with index starting at ` 2 ` and ending just before ` 6 ` ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "queryresult", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a set of tuples ` queryresult ` to a list of strings"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "href", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".*follow\\?page.*", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find href value that has string ' follow?page ' inside it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(.)(?=.)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1-", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"separate each character in string ` s ` by ' - '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "id", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "position", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "id", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "ind", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ind", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the index value in list ` p_list ` using enumerate in list comprehension"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "corrcoef", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert array ` x ` into a correlation matrix"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "xaxis", "type": "identifier", "children": []}]}]}, {"value": "set_label_position", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "top", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"move an x-axis label to the top of a plot ` ax ` in matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetimevariable", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse datetime object ` datetimevariable ` using format ' %Y-%m-%d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "left_index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "right_index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "outer", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"combine dataframe ` df1 ` and dataframe ` df2 ` by index number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print current date and time in a regular format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "scipy", "type": "identifier", "children": []}]}]}, {"value": "matrix", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "transpose", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a matrix from a list ` [1, 2, 3] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "utcnow", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "hours", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "11", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "year", "type": "identifier", "children": []}]}]}]}]}]}	"using python 's datetime module , get the year that utc-11 is currently in"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_data", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "genfromtxt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "my_file.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "delimiter", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"read csv file ' my_file.csv ' into numpy array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"apply logical operator ' AND ' to all elements in list ` a_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mydf.tsv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "sep", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"export a pandas data frame ` df ` to a file ` mydf.tsv ` and retain the indices"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "cla", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"matplotlib clear the current axes ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "webbrowser", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://example.com", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"webbrowser open url ' http://example.com '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input_filename", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "html_text", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "markdown", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "output_format", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "html4", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pdfkit", "type": "identifier", "children": []}]}]}, {"value": "from_string", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "html_text", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "output_filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate pdf file ` output_filename ` from markdown file ` input_filename `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"check if value ' one ' is among the values of dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\((\\w+)\\)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove parentheses only around single words in a string ` s ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "SomeModel", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "id", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "id", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to delete a record in django models ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}, {"value": "arg", "type": "arg", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "args", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"add 100 to each element of column \" x \" in dataframe ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a random 12-digit number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Boat.txt.txt", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"strip the string ` .txt ` from anywhere in the string ` Boat.txt.txt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_function", "type": "identifier", "children": []}]}]}, {"value": "__name__", "type": "identifier", "children": []}]}]}]}]}]}	"get a name of function ` my_function ` as a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\b\\d+\\b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete digits at the end of string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "params", "type": "identifier", "children": []}]}]}, {"value": "getall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get multiple parameters with same name from a url in pylons"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "changed_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "original_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` changed_list ` containing elements of list ` original_list ` whilst converting strings containing digits to integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "etree", "type": "identifier", "children": []}]}]}, {"value": "tostring", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_tag", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "strong", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all texts and tags from a tag ` strong ` from etree tag ` some_tag ` using lxml"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datafile", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "example.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "found", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}, {"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datafile", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "blabla", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}, {"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}	"search for string ` blabla ` in txt file ' example.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pattern", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?:review:[SEP])?(http://url.com/(\\d+))\\s?", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "IGNORECASE", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get multiple matched strings using regex pattern ` (?:review:[SEP])?(http://url.com/(\\d+))\\s? `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "items", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find all the lists from a lists of list ' items ' if third element in all sub-lists is ' 0 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list of dictionaries ` d ` to pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_(?:for|or|and)_", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "sad_pandas_and_happy_cats_for_people", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' sad_pandas_and_happy_cats_for_people ' based on string ' and ' , ' or ' or ' for '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lestring", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lelist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"do a boolean check if a string ` lestring ` contains any of the items in list ` lelist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lol", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a list of lists ` lol ` to a dictionary with key as second value of a list and value as list itself"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "stats", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "Series", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string in column ' stats ' by ' , ' into separate columns in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "islice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "it", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get list of n next values of a generator ` it `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "gold", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myLIst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all the values in key ` gold ` summed from a list of dictionary ` myLIst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"add string ` - ` in ` 4th ` position of a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "example.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mmap", "type": "identifier", "children": []}]}]}, {"value": "mmap", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "fileno", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "access", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mmap", "type": "identifier", "children": []}]}]}, {"value": "ACCESS_READ", "type": "identifier", "children": []}]}]}]}]}]}]}]}, {"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "blabla", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"search for string ' blabla ' in txt file ' example.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Windows[SEP]EOL[LINE]", "type": "string", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove newline in string ' Windows[SEP]EOL[LINE] ' on the right side"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "sep", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ";", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "names", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Region[SEP]Name", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create pandas data frame ` df ` from txt file ` filename.txt ` with column ` Name ` and separator ` ; `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "ctime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get modified time of file ` file `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "combine", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_date", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "time", "type": "identifier", "children": []}]}]}, {"value": "min", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert date ` my_date ` to datetime"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "list_b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"merge lists ` list_a ` and ` list_b ` into a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "einsum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ijk,ikl->ijl", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"elementwise product of 3d arrays ` A ` and ` B `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "OrderedDict", "type": "identifier", "children": []}]}]}, {"value": "fromkeys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create new string with unique characters from ` s ` seperated by '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([a-z]*)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "f233op", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match zero-or-more instances of lower case alphabet characters in a string ` f233op `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "img", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cv2", "type": "identifier", "children": []}]}]}, {"value": "imread", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "messi5.jpg", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert an rgb image ' messi5.jpg ' into grayscale ` img `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bigdict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "l", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "m", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "n", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract subset of key value pair for keys ' l ' , ' m ' , ' n ' from ` bigdict ` in python 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "T", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "T", "type": "identifier", "children": []}]}]}]}]}]}	"scalar multiply matrix ` a ` by ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "stats", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "Series", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unpack column ' stats ' in dataframe ` df ` into a series of columns"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parser", "type": "identifier", "children": []}]}]}, {"value": "add_argument", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "nargs", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "*", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"argparse associate zero or more arguments with flag ' file '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "C", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list ` C ` by subtracting values in one list ` B ` from corresponding values in another list ` A `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sentence", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all whitespace in a string ` sentence `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "execute_script", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "window.scrollTo(0,[SEP]Y)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"scroll to the bottom of a web page using selenium webdriver"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ";", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a string ` string ` by multiple separators ` , ` and ` ; `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "trial_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "trial_dict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` trial_list ` based on values of dictionary ` trail_dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a;bcd,ef[SEP]g", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ";", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string \" a;bcd,ef[SEP]g \" on delimiters ' ; ' and ' , '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u00e2\u0080\u0093", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a regular expression object with the pattern ' \u00e2\u0080\u0093 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "iloc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get value at index ` [2, 0] ` in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\d+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` l ` based on its elements ' digits"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "Series", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "A1R", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B2", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "AABB4", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"initialize a pandas series object ` s ` with columns ` ['A', 'B', 'A1R', 'B2', 'AABB4'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "default_data", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "item3", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add key \" item3 \" and value \" 3 \" to dictionary ` default_data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "emaillist", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "queryresult", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list of tuples ` queryresult ` to a string from the first indexes ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "((?:A|B|C)D)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "BDE", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex pattern ' ((?:A|B|C)D) ' on string ' BDE '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "students", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "marks", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"concatenate a series ` students ` onto a dataframe ` marks ` with pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "abspath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the absolute path of a running python script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Result.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "sep", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"convert csv file ` Result.csv ` to pandas dataframe using separator '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?m)^\\s+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a[LINE][SEP]b[LINE][SEP]c", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove white spaces from all the lines using a regular expression in string ' a[LINE][SEP]b[LINE][SEP]c '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "globals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfunction", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calling a function named ' myfunction ' in the module"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"zip list ` a ` , ` b ` , ` c ` into a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "birthdays", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "d", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "month", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "day", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort datetime objects ` birthdays ` by ` month ` and ` day `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u2022", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "*", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace unicode characters '  ' \\u2022 ' in string ' str ' with ' * '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "var_name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"retrieve parameter ' var_name ' from a get request ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "group", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "group", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a list of tuples ` data ` into sub-lists of the same tuple field using itertools"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "linestyle", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "--", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "marker", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "o", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "color", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"set circle markers on plot for individual points defined in list ` [1,2,3,4,5,6,7,8,9,10] ` created by range ( 10 )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[\\[SEP][LINE]]{2,}", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "yourstring", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove newlines and whitespace from string ` yourstring `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test[SEP]string[SEP][LINE][LINE]", "type": "string", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove trailing newline in test[SEP]string[SEP][LINE][LINE] ' test[SEP]string[SEP][LINE][LINE] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "matrix", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort 2d array ` matrix ` by row with index 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get index of the first biggest element in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u001b[1m", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print bold text ' Hello '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?=(\\w\\w))", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "hello", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find overlapping matches from a string ` hello ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "pop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove the element in list ` a ` with index 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get indexes of the largest ` 2 ` values from a list ` a ` using itemgetter"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test/test.pdf", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read a binary file ' test/test.pdf '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_string", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if string ` some_string ` is empty"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "default_data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "item3", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}	"add key \" item3 \" and value \" 3 \" to dictionary ` default_data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get a list of indices of non zero elements in a list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "stdout", "type": "identifier", "children": []}]}]}, {"value": "flush", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"flush output of python print"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert nested list ` x ` into a flat list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get keys with same value in dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "alkaline_earth_values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"find the list in a list of lists ` alkaline_earth_values ` with the max value of the second element ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "linspace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "num", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "endpoint", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create 4 numbers in range between 1 and 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "grouped", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"filter dataframe ` grouped ` where the length of each group ` x ` is bigger than 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "eval", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "some", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "list", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "of", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "vars", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a dict of variable names ` ['some', 'list', 'of', 'vars'] ` as a string and their values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "&", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "=", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".html", "type": "string", "children": []}]}]}]}]}]}]}]}	"strip everything up to and including the character ` & ` from url ` url ` , strip the character ` = ` from the remaining string and concatenate ` .html ` to the end"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "headers", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "referer", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_referer", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"request url ` url ` using http header ` {'referer': my_referer} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get index of character ' b ' in list ' [ ' a ' , ' b ' ] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "32.268907563", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 32.268907563 up to 3 decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lists", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum of sums of each list , in a list of lists named ' lists ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "MyModel", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "extra", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "where", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "CHAR_LENGTH(text)[SEP]>[SEP]254", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"filter a django model ` MyModel ` to have charfield length of max ` 255 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"reverse a list ` L `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "attributes", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-topmost", "type": "string", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a window ` root ` jump to the front"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "META", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "HTTP_HOST", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"get domain/host name from request object in django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` mylist ` in alphabetical order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "translate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "!@#$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove characters \" !@#$ \" from a string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "argmin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get the value of the minimum element in the second column of array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}, {"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dirpath", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "dirnames", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "filenames", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "walk", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mypath", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "extend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filenames", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Break", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"list all files of a directory ` mypath `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "doSomething", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": []}, {"value": "name", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}	"call ` doSomething() ` in a try-except without handling the exception"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "java", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "-jar", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Blender.jar", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute a jar file ' Blender.jar ' using subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"divide elements in list ` a ` from elements at the same index in list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "equal", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether a numpy array ` a ` contains a given row ` [1, 2] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitXor", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"get logical xor of ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "char", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove characters in ` b ` from a string ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "lstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trim whitespace ( including tabs ) in ` s ` on the left side"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "rsplit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get every thing after last ` / `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "pop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove the last element in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{:.100f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2.345e-67", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a floating point number 2.345e-67 without any truncation"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict1", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort dictionary ` dict1 ` by value in ascending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlretrieve", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://search.twitter.com/search.json?q=hi", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "hi.json", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"save json output from a url \u2018 http : //search.twitter.com/search.json ? q=hi \u2019 to file \u2018 hi.json \u2019 in python 2"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all elements in a list ' lst ' are the same type ' int '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "figure", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "figsize", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "11.69", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "8.27", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"set size of ` figure ` to landscape a4 i.e . ` 11.69, 8.27 ` inches"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "MyCount", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"get max key in dictionary ` MyCount `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Total[SEP]score[SEP]for[SEP]%s[SEP]is[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "score", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a string using multiple strings ` name ` and ` Total[SEP]score[SEP]for[SEP]%s[SEP]is[SEP]%s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_string", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\"(\\d+),(\\d+)\"", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1.\\2", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "original_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace comma with dot in a string ` original_string ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove string \" 1 \" from string ` string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "2", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list with str into list with int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hasattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "property", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if object ` a ` has property ' property '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "ImportFrom", "type": "stmt", "children": [{"value": "functools", "type": "identifier", "children": []}, {"value": "names", "type": "alias", "children": [{"value": "alias", "type": "alias", "children": [{"value": "reduce", "type": "identifier", "children": []}, {"value": "asname", "type": "identifier", "children": []}]}]}, {"value": "0", "type": "int", "children": []}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reduce", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}, {"value": "arg", "type": "arg", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"multiply all items in a list ` [1, 2, 3, 4, 5, 6] ` together"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "name_num", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name_num", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "rsplit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name_num", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort items in dictionary ` d ` using the first part of the key after splitting the key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "webbrowser", "type": "identifier", "children": []}]}]}, {"value": "open_new", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"webbrowser open url ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_hdf", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/home/.../data.h5", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "firstSet", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create dataframe ` df ` with content of hdf store file ' /home/.../data.h5 ' with key of ' firstSet '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "kill", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "process", "type": "identifier", "children": []}]}]}, {"value": "pid", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "signal", "type": "identifier", "children": []}]}]}, {"value": "SIGKILL", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"kill a process with id ` process.pid `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "__str__", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert ` a ` to string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "year", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "size", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove duplicate rows from dataframe ` df1 ` and calculate their frequency"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"interleave the elements of two lists ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "column_name", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete column ' column_name ' from dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aaabcabccd", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list of all unique characters in a string ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_for_", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "happy_hats_for_cats", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' happy_hats_for_cats ' using string ' _for_ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a new string with the 3rd to the second-to-last characters of string ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list ` myList ` from 1 to 10"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print backslash"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string1", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string2", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"case insensitive string comparison between ` string1 ` and ` string2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}, {"value": "arg", "type": "arg", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"lambda function that adds two operands"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' s ' in string ` str ` starting from index 16"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a string ` a ` with new line character"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(.)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1\\1", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "S", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"double each character in string ` text.read() `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert array ` a ` to numpy array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "AB", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}]}]}]}	"pandas dataframe , how do i split a column ' AB ' into two ' A ' and ' B ' on delimiter '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "set_xticklabels", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "xaxis", "type": "identifier", "children": []}]}]}, {"value": "get_majorticklabels", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "rotation", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "45", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"rotate x-axis text labels of plot ` ax ` 45 degrees"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<!\\w)([A-Z])\\.", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove periods inbetween capital letters that are n't immediately preceeded by word character ( s ) in a string ` s ` using regular expressions"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_(?:f?or|and)_", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a string ` l ` by multiple words ` for ` or ` or ` or ` and `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:0b}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert decimal integer 8 to a list of its binary values as elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1123.456789", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round 1123.456789 to be an integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "setopt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pycurl", "type": "identifier", "children": []}]}]}, {"value": "WRITEFUNCTION", "type": "identifier", "children": []}]}, {"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make function ` WRITEFUNCTION ` output nothing in curl ` p `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "pushButton", "type": "identifier", "children": []}]}]}, {"value": "setStyleSheet", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "background-color:[SEP]red", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change the background colour of the button ` pushbutton ` to background-color:[SEP]red"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "realpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print script 's directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "lstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove newline in string ` s ` on the left side"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"getting the last element of list ` some_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stringnamehere", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ignore", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode the string ' stringnamehere ' to utf-8"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "My[SEP]Key", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "My[SEP]Value", "type": "string", "children": []}]}]}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"lowercase keys and values in dictionary ` {'My Key': 'My Value'} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2013-1-25", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%-m/%d/%y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a date string ' 2013-1-25 ' in format ' %Y-%m-%d ' to different format ' %-m/%d/%y '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:0b}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert decimal 8 to a list of its binary values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ignore_index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"simple way to append a pandas series ` a ` and ` b ` with same index"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tadas", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count ` True ` values associated with key ' one ' in dictionary ` tadas `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "num_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the next value greatest to ` 2 ` from a list of numbers ` num_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort pandas data frame ` df ` using values from columns ` c1 ` and ` c2 ` in ascending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"split dictionary/list inside a pandas column ' b ' into separate columns in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[{0},[SEP]{1},[SEP]{2}]", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display ` 1 2 3 ` as a list of string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "tom", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "cat", "type": "string", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "jerry", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "mouse", "type": "string", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "spark", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "dog", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert nested list of lists ` [['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']] ` into a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myInt", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"divide each element in list ` myList ` by integer ` myInt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trim whitespace ( including tabs ) in ` s ` on the right side"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "in1d", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if a numpy array ` a1 ` contains any element of another array ` a2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "GOOG", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "AAPL", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "keys", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "GOOG", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "AAPL", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"stack two dataframes next to each other in pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Counter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Counter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"get the difference between two lists ` [1, 2, 2, 2, 3] ` and ` [1, 2] ` that may have duplicate values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "threading", "type": "identifier", "children": []}]}]}, {"value": "Thread", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "target", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "SudsMove", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "start", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"run function ' SudsMove ' simultaneously"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key1", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if a given key ' key1 ' exists in dictionary ` dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reduce the first element of list of strings ` data ` to a string , separated by ' . '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "h", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode encodeuricomponent in gae"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ab", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"filtering out strings that contain ' ab ' from a list of strings ` lst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^([^A]*)AA([^A]|AA)*$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write a regex pattern to match even number of letter ` A `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "start", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "finditer", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "test[SEP]test[SEP]test[SEP]test", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"find all occurrences of a substring in a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "Country", "type": "identifier", "children": []}]}]}, {"value": "value_counts", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "name", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Sum[SEP]of[SEP]Accidents", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"get the count Sum[SEP]of[SEP]Accidents each unique value in column ` Country ` Sum[SEP]of[SEP]Accidents dataframe ` df ` and store in column ` Sum[SEP]of[SEP]Accidents `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dictionary", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get key-value pairs in dictionary ` my_dictionary ` for all keys in list ` my_list ` in the order they appear in ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "session", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mykey", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"clear session key ' mykey '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "dot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "dot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"multiply the columns of sparse matrix ` m ` by array ` a ` then multiply the rows of the resulting matrix by array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "blah", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "somestring", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if \" blah \" is in string ` somestring `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "remove", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove item ` c ` in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "resultType", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` L ` based on the value of variable ' resultType ' for each object in list ` L `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "get_text", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a beautiful soup html ` soup ` to text"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.{1}%}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "digits", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"variable number of digits ` digits ` in variable ` value ` in format string \" {0:.{1}%} \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "User", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "X", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"select records of dataframe ` df ` where the sum of column ' X ' for each value in column ' User ' is 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "legend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "numpoints", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"make matplotlib plot legend put marker in legend only once"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "25", "type": "object", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get count of values in numpy array ` a ` that are between values ` 25 ` and ` 100 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trim whitespace in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "output", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/home/user/test/wsservice/data.pkl", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "wb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open a file ` /home/user/test/wsservice/data.pkl ` in binary write mode"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append 4 to list ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "intarray", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "i", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"declare an array with element ' i '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "..", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change the current directory one level up"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "UTF8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "EmployeeList", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"encode each value to ' UTF8 ' in the list ` EmployeeList `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"retrieve list of values from dictionary ' d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[%s,[SEP]%s,[SEP]%s]", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print ' [1, 2, 3] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of integers ` keys ` where each value is in string format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get all indexes of a list ` a ` where each value is greater than ` 2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"delete an element with key ` key ` dictionary ` r `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a list of strings ` lst ` to list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rows", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "session", "type": "identifier", "children": []}]}]}, {"value": "query", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Congress", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sqlalchemy count the number of rows in table ` Congress `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "canvas", "type": "identifier", "children": []}]}]}, {"value": "create_text", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "font", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Purisa", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "text", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"set the font ' Purisa ' of size 12 for a canvas ' text item ` k `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".//a[contains(text(),\"TEXT[SEP]A\")]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find element ` a ` that contains string \" TEXT A \" in file ` root `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get list of string elements in string ` data ` delimited by commas , putting ` 0 ` in place of empty strings"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a tuple ` t ` containing first element of each tuple in tuple ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "files", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "match", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[0-9]+.*\\.jpg", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"create a list ` files ` containing all files in directory ' . ' that starts with numbers between 0 and 9 and ends with the extension ' .jpg '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string to integer with decimal in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove decimal points in pandas data frame using round"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pandas", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"combine two pandas dataframes with the same index"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "genfromtxt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "delimiter", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"read csv file ' myfile.csv ' into array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aaabcabccd", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get list of all unique characters in a string ' aaabcabccd '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"create a list containing keys of dictionary ` d ` and sort it alphabetically"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "revenue", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "CET", "type": "identifier", "children": []}]}]}, {"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "revenue", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"merge 2 dataframes ` df1 ` and ` df2 ` with same values in a column ' revenue ' with and index ' date '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "pluto", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"extract dictionary from list of dictionaries based on a key 's value ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort a list of strings ' mylist ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "gzip", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file.gz", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "encoding", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"open gzip-compressed file encoded as utf-8 ' file.gz ' in text mode"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0.month}/{0.day}/{0.year}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_date", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python date string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hashtags", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "#(\\w+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str1", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "UNICODE", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match a sharp , followed by letters ( including accent characters ) in string ` str1 ` using a regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "./abc.py", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "arg1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "arg2", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute a file ' ./abc.py ' with arguments ` arg1 ` and ` arg2 ` in python shell"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"move the last item in list ` a ` to the beginning"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "grid", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"draw a grid line on every tick of plot ` plt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a dictionary using two lists ` x ` and ` y `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of words in a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_css_selector", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "input[onclick*='1[SEP]Bedroom[SEP]Deluxe']", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find element by css selector \" input[onclick*='1[SEP]Bedroom[SEP]Deluxe'] \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_dict", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"map two lists ` keys ` and ` values ` into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"remove all instances of ` [1, 1] ` from a list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%5.3f", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a list of floating numbers ` l ` using string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"reverse list ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "outer", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"join two dataframes based on values in selected columns"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "users", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "order", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` users ` using values associated with key ' id ' according to elements in list ` order `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "results_union", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "union", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "results_list", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the union set from list of lists ` results_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "FFFF", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string \" FFFF \" to decimal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.2f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_number", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a digit ` your_number ` with exactly 2 digits after decimal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"initialize a list of empty lists ` x ` of size 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "binascii", "type": "identifier", "children": []}]}]}, {"value": "unhexlify", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "4081637ef7d0424a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unpack the binary data represented by the hexadecimal string ' 4081637ef7d0424a ' to a float"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dicts", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "abs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1.77672955975", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ratio", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "pixels", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get a dictionary in list ` dicts ` which key ' ratio ' is closer to a global value 1.77672955975"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "savefig", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test.svg", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"save plot ` plt ` as svg file ' test.svg '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "matplotlib", "type": "identifier", "children": []}]}]}, {"value": "rcParams", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "font.size", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "22", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change the font size on plot ` matplotlib ` to 22"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ValueError", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}	"parse string ` s ` to float or int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "s", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A:1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B:2", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C:3", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "D:4", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list ` ['A:1', 'B:2', 'C:3', 'D:4'] ` to dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<=\\?|!|\\.)\\s{0,2}(?=[A-Z]|$)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` text ` by the occurrences of regex pattern ' (?<=\\?|!|\\.)\\s{0,2}(?=[A-Z]|$) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "abs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"finding the largest delta between two integers in a list in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pattern", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"search for occurrences of regex pattern ` pattern ` in string ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` keys ` based on its elements ' dot-seperated numbers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"reverse a string \" foo \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "rsplit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` s ` on last delimiter"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chain", "type": "identifier", "children": []}]}]}, {"value": "from_iterable", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"flatten list of tuples ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "conn", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "httplib", "type": "identifier", "children": []}]}]}, {"value": "HTTPConnection", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "www.python.org", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "conn", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "HEAD", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r1", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "conn", "type": "identifier", "children": []}]}]}, {"value": "getresponse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r1", "type": "identifier", "children": []}]}]}, {"value": "status", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r1", "type": "identifier", "children": []}]}]}, {"value": "reason", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check the status code of url \" www.python.org \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "command", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute a command ` command ` in the terminal from a python script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create new list ` result ` by splitting each item in list ` words `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the number of values in list ` j ` that is greater than ` i `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}]}]}]}	"get the dimensions of numpy array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"transforming the string ` s ` into dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chmod", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "my_script.sh", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "484", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change the mode of file ' my_script.sh ' to permission number 484"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Day[SEP]old[SEP]bread,[SEP]50%[SEP]sale[SEP]{0}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "today", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace fields delimited by braces { } in string \" Day[SEP]old[SEP]bread,[SEP]50%[SEP]sale[SEP]{0} \" with string ' today '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "GREPDB=\"echo[SEP]123\";[SEP]/bin/bash[SEP]-c[SEP]\"$GREPDB\"", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"force bash interpreter ' GREPDB=\"echo[SEP]123\";[SEP]/bin/bash[SEP]-c[SEP]\"$GREPDB\" ' to be used instead of shell"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C:/Users/Name/Desktop", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"permanently set the current directory to the ' C:/Users/Name/Desktop '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"combine two lists ` [1, 2, 3, 4] ` and ` ['a', 'b', 'c', 'd'] ` into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?::|;|=)(?:-)?(?:\\)|\\(|D|P)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"fetch smilies matching regex pattern ' (?::|;|=)(?:-)?(?:\\)|\\(|D|P) ' in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort numpy float array ` A ` column by column"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "findAll", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "text", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all the texts without tags from beautiful soup object ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[\\u0600-\\u06FF]+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"retrieve arabic texts from string ` my_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hex", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"return the conversion of decimal ` d ` to hex without the ' 0x ' prefix"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all elements in a tuple ` (1, 6) ` are in another ` (1, 2, 3, 4, 5) `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myVar", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "locals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"check if a local variable ` myVar ` exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert ascii value ' a ' to int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "wx", "type": "identifier", "children": []}]}]}, {"value": "TextCtrl", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "size", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "300", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"modify the width of a text control as ` 300 ` keeping default height in wxpython"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "imp", "type": "identifier", "children": []}]}]}, {"value": "find_module", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "os", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get complete path of a module named ` os `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Original_List", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of last trailing words from another list of strings ` Original_List `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%5.3f", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "]", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format print output of list of floats ` l ` to print only up to 3 decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fileinput", "type": "identifier", "children": []}]}]}, {"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"read line by line from stdin"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "frozenset", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all duplicates from a list of sets ` L `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` a ` using the first dimension of the element as the key to list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "HttpResponse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "status", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "204", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"return http status code 204 from a django view"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_css_selector", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a[href^='javascript']", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"selenium ` driver ` click a hyperlink with the pattern \" a[href^='javascript'] \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "load", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "u", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode json string ` u ` to a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ts", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "marker", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"plot point marker ' . ' on series ` ts `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "theset", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thedict", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert keys in dictionary ` thedict ` into case insensitive"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` new_list ` containing the last 10 elements of list ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort dict ` data ` by value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "writer", "type": "identifier", "children": []}]}]}, {"value": "writerow", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write a tuple of tuples ` A ` to a csv file using python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_id", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "clear", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"clear text from textarea ' foo ' with selenium"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "by", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calculate the mean of columns with same name in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "DEBUSSY", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a environment variable ` DEBUSSY `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "order_array", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "order", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "year", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "month", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "day", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort array ` order_array ` based on column ' year ' , ' month ' and ' day '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"flatten a tuple ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cents_int", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dollars", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert currency string ` dollars ` to decimal ` cents_int `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "float64", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"assign an array of floats in range from 0 to 100 to a variable ` values `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"merge rows from dataframe ` df1 ` with rows from dataframe ` df2 ` and calculate the mean for rows that have the same value of axis 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "results", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "test_data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract all the values of a specific key named ' values ' from a list of dictionaries"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dic", "type": "identifier", "children": []}]}]}, {"value": "setdefault", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a key ` key ` if it does not exist in dict ` dic ` and append element ` value ` to value ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hashlib", "type": "identifier", "children": []}]}]}, {"value": "md5", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename.exe", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "hexdigest", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calculate the md5 checksum of a file named ' filename.exe '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "letter", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "number", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterating key and items over dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort a string ` s ` in lexicographic order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "g", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "g", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "test", "type": "identifier", "children": []}]}, {"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"make a list of lists in which each list ` g ` are the elements from list ` test ` which have the same characters up to the first ` _ ` character"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "y", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"rearrange the columns ' a ' , ' b ' , ' x ' , ' y ' of pandas dataframe ` df ` in mentioned sequence ' x ' , ' y ' , ' a ' , ' b '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "content", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode string ` content ` to utf-8 code"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hex", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "65", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert an int 65 to hex string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"remove elements from an array ` A ` that are in array ` B `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(([0-9]+)([A-Z]))", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "20M10000N80M", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"separate numbers from characters in string \" 30m1000n20m \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name[SEP](.*)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"finding words in string ` s ` after keyword ' name[SEP](.*) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "D:/Temp/tt.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "names", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "abcdef", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"read a ragged csv file ` D:/Temp/tt.csv ` using ` names ` parameter in pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a list ` l ` into evenly sized chunks ` n `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a new string from the 3rd character to the end of the string ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "super", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Instructor", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "__init__", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "year", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"call parent class ` Instructor ` of child class constructor"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "_", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "regex", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"replace white spaces in dataframe ` df ` with ' _ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "desired_value", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find all keys from a dictionary ` d ` whose values are ` desired_value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "func", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "args", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"call a function with argument list ` args `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3.0005", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 3.0005 up to 3 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum of all values in a python dict ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "functions", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"apply a list of functions named ' functions ' over a list of values named ' values '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "globals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "something", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bob", "type": "string", "children": []}]}]}]}]}]}	"define global variable ` something ` with value ` bob `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the size of list ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "browser", "type": "identifier", "children": []}]}]}, {"value": "current_url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current url in selenium webdriver ` browser `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort the list of tuples ` lst ` by the sum of every value except the first and by the first value in reverse order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"how can i compare two lists in python and return matches"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "to_del", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"delete items from list ` my_list ` if the item exist in list ` to_dell `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([a-z])*", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "f233op", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match zero-or-more instances of lower case alphabet characters in a string ` f233op `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "stack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "first", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get first non-null value per each row from dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".\\A|.\\A*|.\\A+", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regular expression syntax for not to match anything"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "hours", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "minutes", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"subtract 1 hour and 10 minutes from time object ` t `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find all the elements that consists value ' 1 ' in a list of tuples ' a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\w*\\d\\w*", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all words which contains number from a string ` words ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0,1,2", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert the string ' 0,1,2 ' to a list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string ` s ` to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "getLogger", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "setLevel", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "DEBUG", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change log level dynamically to ' DEBUG ' without restarting the application"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a set from string ` s ` to remove duplicate characters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<br/>", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%s::[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"dictionary ` d ` to string , custom format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "is", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "String", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "start", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the position of a regex match ` is ` in a string ` String `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sentence", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove whitespace in string ` sentence ` from beginning and end"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "T", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Idx", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"index a list ` L ` with another list ` Idx `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "replace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"create a new 2d array with 2 random rows from array ` A `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert strings in list-of-lists ` lst ` to ints"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a dictionary ` dict ` into a list with key and values as list items ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "53", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get the indices of tuples in list of tuples ` L ` where the first value is 53"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "T1_V6", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get all column name of dataframe ` df ` except for column ' T1_V6 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"check if ' a ' is in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "superset", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subset", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if dictionary ` subset ` is a subset of dictionary ` superset `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"map two lists ` keys ` and ` values ` into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4.0005", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 4.0005 up to 3 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove the last element in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json_string", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ob", "type": "identifier", "children": []}]}]}, {"value": "__dict__", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ob", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_name", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list of objects ` list_name ` to json string ` json_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([a-z](?=[A-Z])|[A-Z](?=[A-Z][a-z]))", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert spaces before capital letters in string ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "sample", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how do i create a list of unique random numbers ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "deadbeef", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string \" deadbeef \" to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "return_code", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "echo[SEP]Hello[SEP]World", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"calling an external command \" echo[SEP]Hello[SEP]World \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "TAA(?:[ATGC]{3})+?TAA", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "seq", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex pattern ' TAA(?:[ATGC]{3})+?TAA ' on string ` seq `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]\u001b[4m", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "3", "type": "string", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u001b[0m", "type": "string", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a rational number ` 3/2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_dct", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "order", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of dictionaries ` list_of_dct ` by values in an order ` order `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "connection", "type": "identifier", "children": []}]}]}, {"value": "send", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "HTTP/1.0[SEP]200[SEP]OK[LINE][LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"send data ' HTTP/1.0[SEP]200[SEP]OK[LINE][LINE] ' to socket ` connection `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "IsNot", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove none value from list ` L `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a dictionary ` a ` by values that are list type"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list containing elements from list ` list ` that are predicate to function ` f `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "instancelist", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "MyClass", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "29", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` instancelist ` containing 29 objects of type myclass"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Aloha", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' Aloha ' in ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "sample", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "50", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate 6 random numbers between 1 and 50"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\s*,\\s*|\\s*;\\s*", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a[SEP],[SEP]b;[SEP]cdf", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a[SEP],[SEP]b;[SEP]cdf string ` a[SEP],[SEP]b;[SEP]cdf ` using both commas and semicolons as delimeters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "TRX_DATE", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set index equal to field ' TRX_DATE ' in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "shutdown", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/l", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"logoff computer having windows operating system using python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"creating an empty list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "zsh[SEP]-c[SEP]'echo[SEP]$0'", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute command ' echo $0 ' in z shell"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myArray", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of elements in array ` myArray `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "dot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the dot product of matrix ` [1,0,0,1,0,0] ` and matrix ` [[0,1],[1,1],[1,0],[1,0],[1,1],[0,1]] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "exit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "some[SEP]error[SEP]message", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"terminating a python script with some[SEP]error[SEP]message \" some[SEP]error[SEP]message \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Invert", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "column_name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "isin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"select rows from a dataframe ` df ` whose value for column ` column_name ` is not in ` some_values `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "params", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "payload", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"request http url ` url ` with parameters ` payload `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"delete all rows in a numpy array ` a ` where any value in a row is zero ` 0 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"set data in column ' value ' of dataframe ` df ` equal to first element of each list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0}:<15}}{1}:<15}}{2}:<8}}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "2", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"escape character ' } ' in string ' {0}:<15}}{1}:<15}}{2}:<8}} ' while using function ` format ` with arguments ` ('1', '2', '3') `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get index of key ' c ' in dictionary ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[\\s+]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trim whitespaces ( including tabs ) in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "isin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"use a list of values ` [3,6] ` to select rows from a pandas dataframe ` df ` ' s column ' a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the indexes of the x and y axes in numpy array ` np ` where variable ` a ` is equal to variable ` value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\[[^\\]]*\\]|\"[^\"]*\"|\\S+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ' s ' by space while ignoring spaces within square braces and quotes ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "alist", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}]}]}	"empty a list ` alist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/tmp", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the age of directory ( or file ) ` /tmp ` in seconds ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1,000,000", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse a comma-separated string number ' 1,000,000 ' into int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "GET", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "username", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get value for \" username \" parameter in get request in django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2007-03-04T21:08:12", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%dT%H:%M:%S", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"none"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}, {"value": "shift", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "fillna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cumsum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split dataframe ` df ` where the value of column ` a ` is equal to ' B '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list containing the digits values from binary string ` x ` as elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",+", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "rsplit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "+", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert a character ' , ' into a string in front of ' + ' character in second part of the string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dic", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Test", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "class", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "section", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add dictionary ` {'class': {'section': 5}} ` to key ' Test ' of dictionary ` dic `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "frame", "type": "identifier", "children": []}]}]}, {"value": "resample", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1H", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "agg", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "radiation", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "tamb", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"resample dataframe ` frame ` to resolution of 1 hour ` 1H ` for timeseries index , summing values in the column ` radiation ` averaging those in column ` tamb `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x1", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x2", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x2", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "List1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "List2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"subtract elements of list ` List1 ` from elements of list ` List2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string1", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string2", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "The[SEP]strings[SEP]are[SEP]the[SEP]same[SEP](case[SEP]insensitive)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "The[SEP]strings[SEP]are[SEP]not[SEP]the[SEP]same[SEP](case[SEP]insensitive)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"case insensitive comparison of The[SEP]strings[SEP]are[SEP]the[SEP]same[SEP](case[SEP]insensitive) ` string1 ` and ` string2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.2f", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3.14159", "type": "object", "children": []}]}]}]}]}]}]}]}	"limit float 3.14159 to two decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of tuples of every three consecutive items in list ` [1, 2, 3, 4, 5, 6, 7, 8, 9] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list each value ` i ` in the implicit tuple ` range(3) `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"iterate over a dictionary ` dict ` in sorted order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "pivot_table", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "saleid", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "upc", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "aggfunc", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "size", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "fill_value", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"pivot dataframe ` df ` so that values for ` upc ` become column headings and values for ` saleid ` become the index"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elements", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract the 2nd elements from a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "msbuild[SEP]project.sln[SEP]/p:Configuration=Debug", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"compile visual studio project ` msbuild[SEP]project.sln[SEP]/p:Configuration=Debug ` from the command line through python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create 3 by 3 matrix of random numbers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{:08b}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"revers correlating bits of integer ` n `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Test", "type": "string", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "label", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if the value of the key \" name \" is \" Test \" in a list of dictionaries ` label `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"how to uniqify a list of dict in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list comprehension in list of lists ` X `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "utcnow", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "isoformat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get utc datetime in iso format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "dtype", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert dict ` result ` to numpy structured array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Entry", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "name", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "title", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "title", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "exists", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"django check if an object with criteria ` name ` equal to ' name ' and criteria ` title ` equal to ' title ' exists in model ` Entry `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "final_choices", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "another_choice", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_choices", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"add a tuple with value ` another_choice ` to a tuple ` my_choices `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "01010101111", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert binary string ' 01010101111 ' to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}	"create a list of integers with duplicate values ` [0, 0, 1, 1, 2, 2, 3, 3, 4, 4] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "to_dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert pandas dataframe ` df ` to a dictionary using ` id ` field as the key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "21/11/06[SEP]16:30", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d/%m/%y[SEP]%H:%M", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse string ' 21/11/06[SEP]16:30 ' according to format ' %d/%m/%y[SEP]%H:%M '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1.0005", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 1.0005 up to 3 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\b\\d+\\b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "he33llo[SEP]42[SEP]I'm[SEP]a[SEP]32[SEP]string[SEP]30", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"python : extract numbers from he33llo[SEP]42[SEP]I'm[SEP]a[SEP]32[SEP]string[SEP]30"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if type of a variable ` s ` is string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"extract all rows from dataframe ` data ` where the value of column ' Value ' is true"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "FloorDiv", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "add_prefix", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the values in each row of every two adjacent columns in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "char", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove character ` char ` from a string ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "close", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to erase the file contents of text file in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}, {"value": "arg", "type": "arg", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"make a function ` f ` that calculates the sum of two integer variables ` x ` and ` y `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.2f", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "13.9499999", "type": "object", "children": []}]}]}]}]}]}]}]}	"limit float 13.9499999 to two decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "shutdown", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/r", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"shutdown and restart a computer running windows from script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "https://www.mysite.com/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "auth", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "username", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "pwd", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"request page ' https://www.mysite.com/ ' with credentials of username ' username ' and password ' pwd '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "tar[SEP]c[SEP]my_dir[SEP]|[SEP]md5sum", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"call bash command ' tar[SEP]c[SEP]my_dir[SEP]|[SEP]md5sum ' with pipe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df3", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"join multiple dataframes ` d1 ` , ` d2 ` , and ` d3 ` on column ' name '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u00c5\u00c4\u00d6", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "UTF8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode unicode string ' \u00c5\u00c4\u00d6 ' to utf-8 code"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "match", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\d+(\\.\\d+)?)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3434.35353", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex pattern ' (\\d+(\\.\\d+)?) ' with string ' 3434.35353 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c:\\Users\\uname\\desktop\\python", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set the current working directory to ' c:\\Users\\uname\\desktop\\python '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "your[SEP]string", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "string_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert escaped utf your[SEP]string to utf your[SEP]string in ` your[SEP]string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "url", "type": "identifier", "children": []}]}]}]}]}]}	"retrieve the path from a flask request"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Press[SEP]Enter[SEP]to[SEP]continue...", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"prompt string ' Press[SEP]Enter[SEP]to[SEP]continue... ' Press[SEP]Enter[SEP]to[SEP]continue... the console"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"keep only unique words in list of words ` words ` and join into string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "exec", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename.py", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "filename.py", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "exec", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute file ' filename.py '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myString", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"right trimming \" [LINE]\t \" from string ` myString `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print list of items ` myList `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{%Y-%m-%d[SEP]%H:%M:%S}", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format current date to pattern ' {%Y-%m-%d[SEP]%H:%M:%S} '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b8", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert a binary ` b8 ` to a float number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test1.py", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"call a python script \" test1.py \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum numbers in a list ' your_list '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"update dictionary ` b ` , overwriting values where keys are identical , with contents of dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "15", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' s ' in string ` str ` starting from index 15"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove backslashes from string ` result `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"create sub matrix of a list of lists ` [[2, 3, 4], [2, 3, 4], [2, 3, 4]] ` ( without numpy )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello", "type": "string", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trimming a string \" Hello \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "concatenate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenating two one-dimensional numpy arrays ' a ' and ' b ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "My[SEP]Key", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "My[SEP]Value", "type": "string", "children": []}]}]}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"lowercase all keys and values in dictionary ` {'My Key': 'My Value'} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max_item", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get the tuple in list ` a_list ` that has the largest item in the second index"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "config_file", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "expanduser", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "~/foo.ini", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get file ' ~/foo.ini '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert tuple elements in list ` [(1,2),(3,4),(5,6),] ` into lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2.7.0_bf4fda703454", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how can i split and parse a string in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string \" a \" to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Import", "type": "stmt", "children": [{"value": "names", "type": "alias", "children": [{"value": "alias", "type": "alias", "children": [{"value": "platform", "type": "identifier", "children": []}, {"value": "asname", "type": "identifier", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "platform", "type": "identifier", "children": []}]}]}, {"value": "release", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get os version"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_sequence", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "item", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove the string value ` item ` from a list of strings ` my_sequence `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "yscale", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "log", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "nonposy", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "clip", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"plot a data logarithmically in y axis"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "obj", "type": "string", "children": []}]}]}]}]}]}]}]}	"define a list with string values ` ['a', 'c', 'b', 'obj'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "attrgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "resultType", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of objects ` s ` by a member variable ' resultType '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_args", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"how to format a list of arguments ` my_args ` into a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "pdf_reference.pdf", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "base64", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode a pdf file ` pdf_reference.pdf ` with ` base64 ` encoding"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_counter", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum all the values in a counter variable ` my_counter `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Cat1", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "fillna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Cat2", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"fill missing value in one column ' Cat1 ' with the value of another column ' Cat2 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<[^<]+?>", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"strip html from strings"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"output first 100 characters in a string ` my_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "applymap", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace values of dataframe ` df ` with true if numeric"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_id", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "clear", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"if selenium textarea element ` foo ` is not empty , clear the field"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "model", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "order_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "?", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"grab one random item from a database ` model ` in django/postgresql"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "strs", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get only digits from a string ` strs `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "set_xlabel", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Temperature[SEP]($^\\circ$C)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a celsius symbol with matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "11", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "17", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a list of integers between 2 values ` 11 ` and ` 17 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^a-zA-Z]*", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "your[SEP]string", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract only characters from a your[SEP]string as a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if any item from list ` b ` is in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "gold", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "example_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum values in list of dictionaries ` example_list ` with key ' gold '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "01-Jan-1995", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d-%b-%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse string ' 01-Jan-1995 ' into a datetime object using format ' %d-%b-%Y '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "10", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` ['10', '3', '2'] ` in ascending order based on the integer value of its elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict2", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict1", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict2", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"multiply values of dictionary ` dict ` with their respective values in dictionary ` dict2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:+d}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "score", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print +1 using format ' {0:+d} '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove specific elements in a numpy array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"map two lists ` keys ` and ` values ` into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "11B", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unpack hexadecimal string ` s ` to a list of integer values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listone", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listtwo", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"concatenate lists ` listone ` and ` listtwo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"extracting column ` 1 ` and ` 9 ` from array ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"merge all columns in dataframe ` df ` into one column"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test.sh", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "domid", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute shell script from python with variable"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[\\W_]+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace everything that is not an alphabet or a digit with '  ' in ' s ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get all the values from a numpy array ` a ` excluding index 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[a-zA-Z]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "the_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if string ` the_string ` contains any upper or lower-case ascii letters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "M\\N{AMPERSAND}M\\N{APOSTROPHE}s", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode-escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse a unicode string ` M\\N{AMPERSAND}M\\N{APOSTROPHE}s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "count", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"find a max value of the key ` count ` in a nested dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "feature_list", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"create a dataframe ` d ` filled with zeros with indices from 0 to length of ` data ` and column names from ` feature_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Value[SEP]is[SEP]\"{}\"", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a string ` value ` with string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "removedirs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"recursively remove folder ` name `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0}[SEP]{1}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "20", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print two numbers ` 10 ` and ` 20 ` using string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "example_string", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a string of numbers ' example_string ' separated by comma into a list of numbers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"subset numpy array ` a ` by column and row , returning the values from the first row , first column and the second row , second column and the third row , first column ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0!r}:{1!r}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dct", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "}", "type": "string", "children": []}]}]}]}]}]}]}]}	"convert dictionary ` dict ` into a string formatted object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hasattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "obj", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "attr_name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if object ` obj ` has attribute ' attr_name '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the value at index 1 for each tuple in the list of tuples ` L `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pattern", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\s+", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sentence", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pattern", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "sentence", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all whitespace in a string ` sentence `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\(.*\\)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace parentheses and all data within it with empty string '  ' in column ' name ' of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get list of keys in dictionary ` my_dict ` whose values contain values from list ` lst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "days", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"how to get yesterday in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "isin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "three", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"select rows whose value of the \" B \" column is \" one \" or \" three \" in the dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get a list of values with key ' key ' from a list of dictionaries ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "stock", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "same1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "same2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "as_index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "positions", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the column ` positions ` along the other columns ` stock ` , ` same1 ` , ` same2 ` in a pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"flatten list ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]OR[SEP]REPLACE[SEP]INTO[SEP]master.table1[SEP]SELECT[SEP]*[SEP]FROM[SEP]table1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert records in bulk from \" INSERT[SEP]OR[SEP]REPLACE[SEP]INTO[SEP]master.table1[SEP]SELECT[SEP]*[SEP]FROM[SEP]table1 \" of \" master \" db to \" INSERT[SEP]OR[SEP]REPLACE[SEP]INTO[SEP]master.table1[SEP]SELECT[SEP]*[SEP]FROM[SEP]table1 \" of sqlite3 ` cursor ` object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "match", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\$[0-9]+[^\\$]*$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "$1[SEP]off[SEP]delicious[SEP]$5[SEP]ham.", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex pattern ' \\$[0-9]+[^\\$]*$ ' on string ' $1[SEP]off[SEP]delicious[SEP]$5[SEP]ham. '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "LoD", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract all keys from a list of dictionaries ` LoD `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yourdf", "type": "identifier", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "columnheading1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "columnheading2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"delete mulitple columns ` columnheading1 ` , ` columnheading2 ` in pandas data frame ` yourdf `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "exists", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/etc/password.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether a path \" /etc/password.txt \" exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/home/username/www/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list the contents of a directory ' /home/username/www/ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"swap each pair of characters in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum values greater than 0 in dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "findAll", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "div", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "style", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "width=300px;", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"beautifulsoup find tag ' div ' with styling ' width=300px; ' in html string ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hello*.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list all the files that matches the pattern ` hello*.txt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "output", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the first letter of each element in string ` input `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst1", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"empty a list ` lst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "places", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "post[SEP]code", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get value of key ` post[SEP]code ` associated with first index of key ` places ` of dictionary ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_name", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "wget", "type": "identifier", "children": []}]}]}, {"value": "download", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download file from http url ` file_url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "#", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"what is the most pythonic way to exclude elements of a list that start with a specific character ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "fromtimestamp", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ms", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1000.0", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert ` ms ` milliseconds to a datetime object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"removing duplicate characters from a string variable \" foo \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "173", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert 173 to binary string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Y", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sort list ` X ` based on values from another list ` Y `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "zeros", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ravel", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert ndarray with shape 3x3 to array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"randomly select an item from list ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "drop", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reset index of series ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_sparse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert dataframe ` df ` to integer-type sparse object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d2", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d1", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"compose keys from dictionary ` d1 ` with respective values in dictionary ` d2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{s:{c}^{n}}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "s", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "dog", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "n", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "c", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"pad ' dog ' up to a length of 5 characters with ' x '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ascii", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ignore", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a unicode string ` a ` to a ' ascii ' string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "o", "type": "identifier", "children": []}]}]}, {"value": "my_attr", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "o", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract attribute ` my_attr ` from each object in list ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "structure", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the sum of each second value from a list of tuple ` structure `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pandas", "type": "identifier", "children": []}]}]}, {"value": "set_option", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "display.max_columns", "type": "string", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display maximum output data of columns in dataframe ` pandas ` that will fit into the screen"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert a character ` - ` after every two elements in a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "jvm.args=[SEP]-Dappdynamics.com=true,[SEP]-Dsomeotherparam=false,", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "=", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string \" jvm.args=[SEP]-Dappdynamics.com=true,[SEP]-Dsomeotherparam=false, \" on the first occurrence of delimiter ' = '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bigdict", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "l", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "m", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "n", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get items from a dictionary ` bigdict ` where the keys are present in ` ('l', 'm', 'n') `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort a pandas data frame by column ` a ` in ascending , and by column ` b ` in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "010101", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert binary string ' 010101 ' to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "intersection", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get geys of dictionary ` my_dict ` that contain any values from list ` lst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bigdict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bigdict", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "l", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "m", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "n", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"best way to extract subset of key-value pairs with keys matching ' l ' , ' m ' , or ' n ' from python dictionary object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{}-\\d*", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "user", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regular expression for validating string ' user ' containing a sequence of characters ending with ' - ' followed by any number of digits ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\[(\\w+)\\]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the string matches within parenthesis from a string ` s ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"request http url ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "set_xlabel", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Temperature[SEP](\u2103)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a celsius symbol on x axis of a plot ` ax `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if string ` a ` is an integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "quit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"terminate the program"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u0420\u043e\u0441\u0441\u0438\u044f", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print unicode characters in a string ` \u0420\u043e\u0441\u0441\u0438\u044f `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u00d0\u00bc\u00d0\u00b0\u00d1\u0080\u00d0\u00ba\u00d0\u00b0", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "latin-1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert unicode string ' \u00d0\u00bc\u00d0\u00b0\u00d1\u0080\u00d0\u00ba\u00d0\u00b0 ' to byte string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_tuples", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "tup", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tup", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sorting a list of tuples ` list_of_tuples ` where each tuple is reversed"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "in1d", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get index of elements in array ` A ` that occur in another array ` B `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "app", "type": "identifier", "children": []}]}]}, {"value": "config", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "SECURITY_REGISTER_URL", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/create_account", "type": "string", "children": []}]}]}]}]}]}	"change flask security register url to ` /create_account `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "heapq", "type": "identifier", "children": []}]}]}, {"value": "nlargest", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "tup", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tup", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get top ` 3 ` items from a dictionary ` mydict ` with largest sum of values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"make new column ' C ' in panda dataframe by adding values from other columns ' A ' and ' B '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert all of the items in a list ` lst ` to float"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "POST", "type": "identifier", "children": []}]}]}, {"value": "getlist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "pass_id", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list values of a dictionary item ` pass_id ` from post requests in django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__location__", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "bundled-resource.jpg", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open a file ' bundled-resource.jpg ' in the same directory as a python script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dict", "type": "identifier", "children": []}]}]}, {"value": "pop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove a key ' key ' from a dictionary ` my_dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello", "type": "string", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trimming a string \" Hello \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "January[SEP]11,[SEP]2010", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%B[SEP]%d,[SEP]%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert date string to day of week"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"remove all values within one list ` [2, 3, 7] ` from another list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "stdout", "type": "identifier", "children": []}]}]}, {"value": "flush", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"immediately see output of print statement that does n't end in a newline"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find all elements in a list of tuples ` a ` where the first element of each tuple equals 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l1", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"order a list of lists ` l1 ` by the first value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "rm", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "-r", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "some.file", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"run shell command ' rm -r some.file ' in the background"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dictList", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dictList", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a flat dictionary by summing values associated with similar keys in each dictionary of list ` dictlist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sorting the lists in list of lists ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parser", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Aug[SEP]28[SEP]1999[SEP]12:00AM", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse string \" Aug[SEP]28[SEP]1999[SEP]12:00AM \" into datetime"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "version_info", "type": "identifier", "children": []}]}]}]}]}]}	"check python version"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "num", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"converting integer ` num ` to list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split each string in list ` myList ` on the tab character"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "doSomething", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Exception", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}	"call ` doSomething() ` in a try-except without handling the exception"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parts", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate items from list ` parts ` into a string starting from the second element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "old_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"copy list ` old_list ` and name it ` new_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "in1d", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if array ` b ` contains all elements of array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"get logical xor of ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"delete every 8th column in a numpy array ' a ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "persons", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "passport", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "birth_info", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of dictionary ` persons ` according to the key ` ['passport']['birth_info']['date'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "two", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"build a dictionary containing the conversion of each list in list ` [['two', 2], ['one', 1]] ` to a key/value pair as its items"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_dicts", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"generate a list containing values associated with the key ' value ' of each dictionary inside list ` list_of_dicts `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([\\d.]+|\\W+)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "x+13.5*10x-4e1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' x+13.5*10x-4e1 ' into tokens"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert the elements of list ` L ` from hex byte strings to hex integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"group a list of ints into a list of tuples of each 2 elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list of lists ` a ` into list of tuples of appropriate elements form nested lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list of dictionaries ` L ` into a flat dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rs", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"serialise sqlalchemy rowproxy object ` row ` to a json object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"get a sorted list of the characters of string ` s ` in lexicographic order , with lowercase letters first"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Image", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "pathToFile", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "show", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display a image file ` pathToFile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\w+|[^\\w\\s]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "UNICODE", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a unicode string ` text ` into a list of words and punctuation characters with a regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "fillna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "method", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ffill", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"replace nans by preceding values in pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "winsound", "type": "identifier", "children": []}]}]}, {"value": "PlaySound", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sound.wav", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "winsound", "type": "identifier", "children": []}]}]}, {"value": "SND_FILENAME", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"play the wav file ' sound.wav '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "km", "type": "identifier", "children": []}]}]}, {"value": "fit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"fit kmeans function to a one-dimensional array ` x ` by reshaping it to be a multidimensional array of single values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the zip output as list from the lists ` [1, 2, 3] ` , ` [4, 5, 6] ` , ` [7, 8, 9] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "new_col", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add a column ' new_col ' to dataframe ` df ` for index in range"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the ascii value of a character as an int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Month", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Fruit", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "unstack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"group dataframe ` df ` by columns ' Month ' and ' Fruit '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cleaned", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"get a list ` cleaned ` that contains all non-empty elements in list ` your_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterate over a dictionary ` foo ` sorted by the key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all the values in a list ` ['a', 'b'] ` are present in another list ` ['b', 'a', 'foo', 'bar'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ast", "type": "identifier", "children": []}]}]}, {"value": "literal_eval", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{'muffin'[SEP]:[SEP]'lolz',[SEP]'foo'[SEP]:[SEP]'kitty'}", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"build a dict of key {'muffin'[SEP]:[SEP]'lolz',[SEP]'foo'[SEP]:[SEP]'kitty'} value pairs from a string representation of a dict , ` {'muffin'[SEP]:[SEP]'lolz',[SEP]'foo'[SEP]:[SEP]'kitty'} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Date", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "diff", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calculat the difference between each row and the row previous to it in dataframe ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "elem", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool_list", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elem", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"get indexes of all true boolean values from a list ` bool_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "seq", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "seq", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"merge the elements in a list ` lst ` sequentially"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dparser", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "monkey[SEP]10/01/1980[SEP]love[SEP]banana", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "fuzzy", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"extract date from a string ` monkey[SEP]10/01/1980[SEP]love[SEP]banana `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "AB", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "expand", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"split column ' AB ' in dataframe ` df ` into two columns by first whitespace '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Task", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "exclude", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "prerequisites__status__in", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "P", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "F", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"in django , filter ` Task.objects ` based on all entities in [ ' A ' , ' P ' , ' F ' ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u00ff", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex ' \u00ff ' to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Abc", "type": "string", "children": []}]}]}, {"value": "translate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "maketrans", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "abcABC", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "defDEF", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace a string ` Abc ` in case sensitive way using maketrans"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "isoformat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current datetime in iso format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "language", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "en", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"move dictionaries in list ` lst ` to the end of the list if value of key ' language ' in each dictionary is not equal to ' en '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "page", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlopen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www.google.com/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "BeautifulSoup", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "page", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parsing webpage ' http://www.google.com/ ' using beautifulsoup"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pickle", "type": "identifier", "children": []}]}]}, {"value": "load", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "afile", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python pickle/unpickle a list to/from a file ' afile '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "toPandas", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mycsv.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"export a table dataframe ` df ` in pyspark to csv ' mycsv.csv '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "no_integers", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get a list ` no_integers ` of all the items in list ` mylist ` that are not of type ` int `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"delete an element ` key ` from a dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "outer", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"multiplication of two 1-dimensional arrays in numpy"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Total[SEP]score[SEP]for[SEP]{}[SEP]is[SEP]{}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "score", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print multiple arguments ' name ' and ' Total[SEP]score[SEP]for[SEP]{}[SEP]is[SEP]{} ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cls", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"clear terminal screen on windows"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "resample", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "3M", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sum", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"resample series ` s ` into 3 months bins and sum each bin"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "grep", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "f", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "stdout", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "PIPE", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "stdin", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "PIPE", "type": "identifier", "children": []}]}]}]}]}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "stdin", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one[LINE]two[LINE]three[LINE]four[LINE]five[LINE]six[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "communicate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "stdin", "type": "identifier", "children": []}]}]}, {"value": "close", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set the stdin of the process ' grep f ' to be ' one[LINE]two[LINE]three[LINE]four[LINE]five[LINE]six[LINE] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "apple", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "banana", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "pear", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cat", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "dog", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "fish", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python json encoding"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "pack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Q", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s2", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert string representation ` s2 ` of binary string rep of integer to floating point number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "abspath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "existGDBPath", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract folder path from file path"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"zip two lists ` [1, 2] ` and ` [3, 4] ` into a list of two tuples containing elements at the same index in each list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "window", "type": "identifier", "children": []}]}]}, {"value": "set_position", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Gtk", "type": "identifier", "children": []}]}]}, {"value": "WindowPosition", "type": "identifier", "children": []}]}]}, {"value": "CENTER", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pygobject center window ` window `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\.\\s", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all the sentences from a string ` text ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "chain", "type": "identifier", "children": []}]}]}, {"value": "from_iterable", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get each value from a list of lists ` a ` using itertools"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if type of variable ` s ` is a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "h", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "h", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number ` h ` to nearest integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bigdict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "l", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "m", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "n", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract subset of key-value pairs with keys as ` ('l', 'm', 'n') ` from dictionary object ` bigdict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_string", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if string ` my_string ` is empty"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse key-value pairs in a dictionary ` map `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "dropna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "all", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"remove null columns in a dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^0-9]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "sdkjh987978asd098as0980a98sd", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all non-numeric characters from string ` sdkjh987978asd098as0980a98sd `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{:.50f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert scientific notation of variable ` a ` to decimal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "today", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"getting today 's date in yyyy-mm-dd"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the maximum string length in nested list ` i `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lista", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "listb", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list containing the multiplication of each elements at the same index of list ` lista ` and list ` listb `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "STNAME", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "COUNTY_POP", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "agg", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "nlargest", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the 3 largest integers in groupby by ' STNAME ' and ' COUNTY_POP '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "lift", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a window ` root ` jump to the front"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "od", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "collections", "type": "identifier", "children": []}]}]}, {"value": "OrderedDict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort dictionary ` d ` by key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "example.yaml", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stream", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yaml", "type": "identifier", "children": []}]}]}, {"value": "load", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stream", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yaml", "type": "identifier", "children": []}]}]}, {"value": "YAMLError", "type": "identifier", "children": []}]}]}, {"value": "exc", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "exc", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}]}]}	"parse a yaml file \" example.yaml \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\b[A-Z]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "formula", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all words containing letters between a and z in string ` formula `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col5", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "col2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "size", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get count of rows in each series grouped by column ' col5 ' and column ' col2 ' of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "path", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list all the contents of the directory ' path ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a new string including the last two characters of string ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "var", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Please[SEP]enter[SEP]something:", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print \" Please[SEP]enter[SEP]something: \" to console , and read user input to ` var `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "imtag", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "match", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<img.*?>", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"return a string from a regex match with pattern ' <img.*?> ' in string ' line '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set the current working directory to path ` path `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "grep", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "f", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "stdout", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "PIPE", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "stdin", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "PIPE", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "stderr", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "STDOUT", "type": "identifier", "children": []}]}]}]}]}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "grep_stdout", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "communicate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "input", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one[LINE]two[LINE]three[LINE]four[LINE]five[LINE]six[LINE]", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"set the stdin of the process ' grep f ' to be b ' one[LINE]two[LINE]three[LINE]four[LINE]five[LINE]six[LINE] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ascii_uppercase", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate random upper-case ascii string of 12 characters length"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"join list of numbers ` [1,2,3,4] ` to string of numbers ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[%s]", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.3f", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print numbers in list ` list ` with precision of 3 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "select", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "div[id^=\"value_xxx_c_1_f_8_a_\"]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"select ` div ` tags whose ` id ` s begin with ` value_xxx_c_1_f_8_a_ `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "centroids", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove elements from list ` centroids ` the indexes of which are in array ` index `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get all the keys from dictionary ` y ` whose value is ` 1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "genfromtxt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "delimiter", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"read csv file ' myfile.csv ' into array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "floats", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"converting string lists ` s ` to float list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "KeyError", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}, {"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "KeyError", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}	"delete an item with key ` key ` from ` mydict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "((\\d)(?:[()]*\\2*[()]*)*)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"use regular expression ' ((\\d)(?:[()]*\\2*[()]*)*) ' to split string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cool[SEP]beans...", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"append line \" cool[SEP]beans... \" to file \" foo \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"extract values not equal to 0 from numpy array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "D", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "inner", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"find all the rows in dataframe ' df2 ' that are also present in dataframe ' df1 ' , for the columns ' A ' , ' B ' , ' C ' and ' D ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "fromtimestamp", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myNumber", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M:%S", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert long int ` myNumber ` into date and time represented in the the string format ' %Y-%m-%d[SEP]%H:%M:%S '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a python dictionary ` d ` to a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hex", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert string ' a ' to hex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "gca", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "get_lines", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "get_xydata", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get data from matplotlib plot"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lists", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum elements at the same index of each list in list ` lists `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lines", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"read file ' filename ' line by line into a list ` lines `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "lst2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create tuples containing elements that are at the same index of list ` lst ` and list ` lst2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "INSERT[SEP]INTO[SEP]table[SEP]VALUES[SEP](%s,[SEP]%s,[SEP]%s)", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "var1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var2", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var3", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to use variables in sql statement in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0xa", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string \" 0xa \" to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dates_dict", "type": "identifier", "children": []}]}]}, {"value": "setdefault", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "date", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append ` date ` to list value of ` key ` in dictionary ` dates_dict ` , or create key ` key ` with value ` date ` in a list if it does not exist"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elems", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "getText", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert unicode text from list ` elems ` with index 0 to normal text ' utf-8 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "abspath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current script directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elem", "type": "identifier", "children": []}]}]}, {"value": "tag", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elem", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elem", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "IsNot", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get all sub-elements of an element tree ` a ` excluding the root element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C:\\Users\\username\\Desktop\\headfirstpython\\chapter3", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change current working directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"insert elements of list ` k ` into list ` a ` at position ` n `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "setdefault", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "somekey", "type": "string", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bob", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"for a dictionary ` a ` , set default value for key ` somekey ` as list and append value ` bob ` in that key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove identical items from list ` my_list ` and sort it alphabetically"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "it", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of items in a generator/iterator ` it `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "HttpResponse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "response_data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "content_type", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "application/json", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"create a json response ` response_data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<!\\S)((\\S+)(?:\\s+\\2))(?:\\s+\\2)+(?!\\S)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regex for repeating words in a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list of key-value tuples ` [('A', 1), ('B', 2), ('C', 3)] ` into dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "browser", "type": "identifier", "children": []}]}]}, {"value": "find_elements_by_xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "//*[@type='submit']", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "get_attribute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all the values in attribute ` value ` for the tags whose ` type ` attribute is ` submit ` in selenium"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{:.5}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aaabbbccc", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display first 5 characters of string ' aaabbbccc '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split list ` mylist ` into a list of lists whose elements have the same first five characters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "config", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "state", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "DISABLED", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"change the state of the tkinter ` Text ` widget to read only i.e . ` disabled `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "baz", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foos", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list containing all values associated with key ' baz ' in dictionaries of list ` foos ` using list comprehension"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ulimit[SEP]-s[SEP]unlimited;[SEP]some_executable", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"setting stacksize in a python script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove newline in string ` s ` on the right side"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get keys from a dictionary ' d ' where the value is ' 1 ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "exit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aa![SEP]errors!", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"abort the execution of the script using message ' aa![SEP]errors! '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list which indicates whether each element in ` x ` and ` y ` is identical"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^a-zA-Z0-9-_*.]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python / remove special character from string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all boolean values in a python dictionary ` dict ` are true"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "didn't", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "'", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace single quote character in string \" didn't \" with empty string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "substring", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if string \" substring \" is in string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get all the items from a list of tuple ' l ' where second item in tuple is ' 1 ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "11", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' s ' in string ` str ` starting from index 11"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "p", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0.1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0.05", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0.05", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0.2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0.4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0.2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"generate a random number in 1 to 7 with a given distribution [ 0.1 , 0.05 , 0.05 , 0.2 , 0.4 , 0.2 ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%0.12d", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "999999999999", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"generate a 12-digit random number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "fromstring", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u0000\u0000\u0080?\u0000\u0000\u0000@\u0000\u0000@@\u0000\u0000\u0080@", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<f4", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"convert binary string ' \u0000\u0000\u0080?\u0000\u0000\u0000@\u0000\u0000@@\u0000\u0000\u0080@ ' to numpy array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "ix", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Invert", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "endswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "prefix", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get a dataframe ` df2 ` that contains all the columns of dataframe ` df ` that do not end in ` prefix `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d2", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d1", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d2", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"divide values associated with each key in dictionary ` d1 ` from values associated with the same key in dictionary ` d2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get list of duplicated elements in range of 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "remove", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete the element 6 from list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "raw_unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode utf-8 code ` x ` into a raw unicode literal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "date", "type": "identifier", "children": []}]}]}, {"value": "today", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%A", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get day name from a datetime object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "savefig", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "graph.png", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dpi", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1000", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"save current figure to file ' graph.png ' with resolution of 1000 dpi"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "pivot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "order", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sample", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"convert dataframe ` df ` into a pivot table using column ' order ' as index and values of column ' sample ' as columns"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_condition", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of values in ` d ` dictionary that are predicate to function ` some_condition `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "post", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://wikipedia.org", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "cookies", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cookie", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"send cookies ` cookie ` in a post request to url ' http://wikipedia.org ' with the python requests library"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "collections", "type": "identifier", "children": []}]}]}, {"value": "Counter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "most_common", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print letter that appears most frequently in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a nested list by the inverse of element 2 , then by element 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a list of consecutive integers from 0 to 8"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "get_level_values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"collapse hierarchical column index to level 0 in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mycsv.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write dataframe ` df ` to csv file ' mycsv.csv '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "windows-1252", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a unicode string ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myString", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trim string ` myString `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myString", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if the string ` myString ` is empty"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\bis\\b", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "String", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "start", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the position of a regex match for word ` is ` in a string ` String `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "savefig", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename.png", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"save plot ` plt ` as png file ' filename.png '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "first", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "second", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sum each element ` x ` in list ` first ` with element ` y ` at the same index in list ` second ` ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "12345", "type": "string", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ab", "type": "string", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list from two strings ` 12345 ` and ` ab ` with values as each character concatenated"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<!\\d)\\d{5}(?!\\d)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regex matching 5-digit substrings not enclosed with digits in ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "obj", "type": "identifier", "children": []}]}]}, {"value": "attr", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "obj", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list_of_objs", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display attribute ` attr ` for each object ` obj ` in list ` my_list_of_objs `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Mac[SEP]EOL[LINE]", "type": "string", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove newline in string ' Mac[SEP]EOL[LINE] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"numpy : check if array ' a ' contains all the numbers in array ' b ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete the last column of numpy array ` a ` and assign resulting array to ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append a list [ 8 , 7 ] to list ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^\\w'[SEP]]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "doesn't[SEP]this[SEP]mean[SEP]it[SEP]-technically-[SEP]works?", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all non -word , -whitespace , or -apostrophe characters from string ` doesn't[SEP]this[SEP]mean[SEP]it[SEP]-technically-[SEP]works? `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "=", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a dictionary containing each string in list ` my_list ` split by ' = ' as a key/value pairs"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pull a value with key ' name ' from a json object ` item `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "11", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert the zip of range ` (1, 5) ` and range ` (7, 11) ` into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "concatenate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"join numpy array ` b ` with numpy array ' a ' along axis 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{:>7s}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"right align string ` mystring ` with a width of 7"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"check if 3 is not in a list [ 2 , 3 , 4 ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-0b1110", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a binary ' -0b1110 ' to a float number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<=[a-z])([A-Z])", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "-\\1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"lower-case the string obtained by replacing the occurrences of regex pattern ' (?<=[a-z])([A-Z]) ' in string ` s ` with eplacement ' -\\1 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get items from list ` a ` that do n't appear in list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"getting the second to last element of list ` some_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "rename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "last", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"rename ` last ` row index label in dataframe ` df ` to ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "pivot_table", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "values", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "year", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "month", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "item", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"run a pivot with a multi-index ` year ` and ` month ` in a pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Book", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "pk", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pk", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "arg", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"update fields in django model ` Book ` with arguments in dictionary ` d ` where primary key is equal to ` pk `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "namelist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "endswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"list folders in zip file ' file ' that ends with ' / '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "old_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"copy list ` old_list ` as ` new_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fname", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "content", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "readlines", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"read file ` fname ` line by line into a list ` content `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "first", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "second", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"case insensitive comparison between strings ` first ` and ` second `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "command[SEP]-flags[SEP]arguments[SEP]&", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"run command[SEP]-flags[SEP]arguments[SEP]& ' command[SEP]-flags[SEP]arguments[SEP]& ' on command[SEP]-flags[SEP]arguments[SEP]& line tools as separate processes"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "key2", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key1", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key2", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list where each element is a dictionary with keys ' key1 ' and ' key2 ' and values corresponding to each value in the lists referenced by keys ' key1 ' and ' key2 ' in dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of tuples ` a ` by the sum of second and third element of each tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "drop", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reset index to default in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\d+", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u00ab([\\s\\S]*?)\u00bb", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all digits between two characters ` \u00ab ` and ` \u00bb ` in a string ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iterable", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a dictionary ` d ` from list ` iterable `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"return the decimal value for each hex character in data ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_css_selector", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".button.c_button.s_button", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python selenium click on button ' .button.c_button.s_button '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert dictionary of pairs ` d ` to a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list ' lst ' in descending order ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "I", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "<", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3s[SEP]U", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "&", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "you[SEP]luvz[SEP]me", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unescape special characters without splitting data in array of strings ` ['I ', u'<', '3s 3s[SEP]U ', u'&', ' you[SEP]luvz[SEP]me me'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "melt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "id_vars", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "farm", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "fruit", "type": "string", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "var_name", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "year", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "value_name", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"unpivot first 2 columns into new columns ' year ' and ' value ' from a pandas dataframe ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myVar", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "globals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"check if a global variable ` myVar ` exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a^", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a regular expression object with a pattern that will match nothing"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "agg", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sum", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "count", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "std", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"use multiple groupby and agg operations ` sum ` , ` count ` , ` std ` for pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dicts", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"merge dictionaries form array ` dicts ` in a single expression"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "test_string", "type": "identifier", "children": []}]}]}, {"value": "rfind", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([{", "type": "string", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the largest index of the last occurrence of characters ' ([{ ' in string ` test_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x_y", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x_y", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"how to sort a list according to another list ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}]}, {"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "20", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"list comprehension that produces integers between 11 and 19"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reverse sort items in dictionary ` mydict ` by value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "date_range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1/1/2014", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "periods", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "freq", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BM", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"select the last business day of the month for each month in 2014 in pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "rename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dir", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dir", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "!", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"rename file ` dir ` to ` dir ` + ' ! '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "loads", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert json array ` array ` to python object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\[(.*?)\\]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all substrings in ` mystring ` beginning and ending with square brackets"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "to_datetime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert the dataframe column ' col ' from string types to datetime types"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "reverse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse a list ` L `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chmod", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stat", "type": "identifier", "children": []}]}]}, {"value": "S_IRUSR", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stat", "type": "identifier", "children": []}]}]}, {"value": "S_IRGRP", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stat", "type": "identifier", "children": []}]}]}, {"value": "S_IROTH", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"changing permission of file ` path ` to ` stat.S_IRUSR | stat.S_IRGRP | stat.S_IROTH `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testfile", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "URLopener", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testfile", "type": "identifier", "children": []}]}]}, {"value": "retrieve", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://randomsite.com/file.gz", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "file.gz", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download \" http://randomsite.com/file.gz \" from http and save as \" file.gz \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get a list of pairs of key-value sorted by values in dictionary ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "MyModel", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "order_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "?", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "first", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a random record from model ' MyModel ' using django 's orm"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ComponentReport-DJI.xls", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "200", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read an excel file ' ComponentReport-DJI.xls '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"create a dataframe containing the multiplication of element-wise in dataframe ` df ` and dataframe ` df2 ` using index name and column labels of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "permutations", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate all permutations of a list ` [1, 2, 3] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "repeat", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all combination of n binary values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Entry", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Invert", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Q", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "id", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"filter model ' Entry ' where ' id ' is not equal to 3 in django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "default_data", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "item4", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "item5", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add key value pairs ' item4 ' , 4 and ' item5 ' , 5 to dictionary ` default_data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_dict", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a dictionary ` list_dict ` containing each tuple in list ` tuple_list ` as values and the tuple 's first element as the corresponding key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "OrderedDict", "type": "identifier", "children": []}]}]}, {"value": "fromkeys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aaabcabccd", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a list of all unique characters in string ' aaabcabccd '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unzip a list of tuples ` l ` into a list of lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort a multidimensional list ` a ` by second and third column"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "abcdabcva", "type": "string", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ab", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count number of occurrences of a substring ' ab ' in a string \" abcdabcva \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elem", "type": "identifier", "children": []}]}]}, {"value": "tag", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elem", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get all sub-elements of an element ` a ` in an elementtree"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello", "type": "string", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trimming a string \" Hello \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^A-Z]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove uppercased characters in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitXor", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"get the logical xor of two variables ` str1 ` and ` str2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "aeiouAEIOU", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"removing vowel characters ' aeiouAEIOU ' from string ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ebar", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "errorbar", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "yerr", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "err", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "ecolor", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "y", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"make a line plot with errorbars , ` ebar ` , from data ` x, y, err ` and set color of the errorbars to ` y ` ( yellow )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A_perc", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sum", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create new column ` A_perc ` in dataframe ` df ` with row values equal to the value in column ` A ` divided by the value in column ` sum `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "chain", "type": "identifier", "children": []}]}]}, {"value": "from_iterable", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list2d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a flat list from list of lists ` list2d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sentence", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\s+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "sentence", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "flags", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "UNICODE", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"remove all whitespaces in string ` sentence `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a2", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"switch positions of each two adjacent characters in string ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "two", "type": "string", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"from multiindexed dataframe ` data ` select columns ` a ` and ` c ` within each higher order column ` one ` and ` two `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "br", "type": "identifier", "children": []}]}]}, {"value": "form", "type": "identifier", "children": []}]}]}, {"value": "add_file", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "text/plain", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"upload file with python mechanize"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{http://www.w3.org/2002/07/owl#}Class", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all ` owl:Class ` tags by parsing xml with namespace"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "stdin", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read a single character from stdin"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "HOME", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"get value of environment variable \" HOME \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "woduplicates", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lseperatedOrblist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all duplicate items from a list ` lseperatedOrblist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Date", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "t", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "unique", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract unique dates from time series ' Date ' in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "quote_plus", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "string_of_characters_like_these:$#@=?%^Q^$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"urlencode a querystring ' string_of_characters_like_these:$#@=?%^Q^$ ' in python 2"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the greatest number in set ` (1, 2, 3) `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the number of values in list ` j ` that is greater than 5"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ForkedPdb", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "set_trace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"attach debugger pdb to class ` ForkedPdb `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlretrieve", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://randomsite.com/file.gz", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "file.gz", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download file from http url \" http://randomsite.com/file.gz \" and save as \" file.gz \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "scatter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "li", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a scatter plot using unpacked values of list ` li `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "blabla", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "example.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"search for string ' blabla ' in txt file ' example.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "sep", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove first directory from path ' /First/Second/Third/Fourth/Fifth '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "astr", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get the last element in list ` astr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "testdata", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"uniqueness for list of lists ` testdata `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a pandas data frame with column ` a ` in ascending and ` b ` in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "exit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"terminate the program"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "include", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sms.urls", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"configure url in django properly"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "time", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current time"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myString", "type": "identifier", "children": []}]}]}, {"value": "lstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"left trimming \" [LINE] \" from string ` myString `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "str", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"append string ' str ' at the beginning of each value in column ' col ' of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a new string including all but the last character of string ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pandas", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "drop_duplicates", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "drop", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"concatenate dataframe ` df1 ` with ` df2 ` whilst removing duplicates"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0x%X", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"use upper case letters to print hex value ` value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "property", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "default[SEP]value", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the value of attribute ' property ' of object ` a ` with value ' value '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fd", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "O_WRONLY", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "O_CREAT", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "O_EXCL", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create file ' x ' if file ' x ' does not exist"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "longlongTESTstringTEST", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "TEST", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "?", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace only first occurence of string ` TEST ` from a string ` longlongTESTstringTEST `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "mike", "type": "string", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "bob", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"order a list of lists ` [[1, 'mike'], [1, 'bob']] ` by the first value of individual list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pyplot", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "color", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "#112233", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"plot using the color code ` #112233 ` in matplotlib pyplot"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "dot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the dot product of two one dimensional numpy arrays"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"delete third row in a numpy array ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "updated", "type": "string", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "None", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"update all values associated with key ` i ` to string ' updated ' if value ` j ` is not equal to ' None ' in dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u2022", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "*", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace unicode character ' \u2022 ' in string ' str ' with ' * '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "z", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "z", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get all combination of 3 binary values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ast", "type": "identifier", "children": []}]}]}, {"value": "literal_eval", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(1,2,3,4)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"converting string ' (1,2,3,4) ' to a tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_dirs", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get last element of string splitted by ' \\ ' from list of strings ` list_dirs `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\.(?=[^[SEP].])", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "para", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace periods ` . ` that are not followed by periods or spaces with a period and a space ` . `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "img", "type": "identifier", "children": []}]}]}, {"value": "transpose", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a 3d array ` img ` of dimensions 4x2x3 to a 2d array of dimensions 3x8"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "out", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "asking", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "!", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove the punctuation ' ! ' , ' . ' , ' : ' from a string ` asking `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of tuples ` my_list ` by second parameter in the tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tags", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"jinja join elements of array ` tags ` with space string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "text[SEP]to[SEP]write[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"writing string ' text[SEP]to[SEP]write[LINE] ' text[SEP]to[SEP]write[LINE] file ` f `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"zip lists ` [1, 2], [3, 4], [5, 6] ` in a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "splitext", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/home/user/somefile.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".jpg", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace extension ' .txt ' in basename ' /home/user/somefile.txt ' with extension ' .jpg '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a string of numbers separated by comma which is divisible by ` 4 ` with remainder ` 1 ` or ` 2 ` ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dt", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "combine", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "today", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add 1 hour and 2 minutes to time object ` t `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input_string", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the count of a word ' Hello ' in a string ` input_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".//a[starts-with(text(),\"TEXT[SEP]A\")]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the ` a ` tag in html ` root ` which starts with the text ` TEXT A ` and assign it to ` e `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"rearrange tuple of tuples ` t `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "((.+?)\\2+)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "44442(2)2(2)44", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"use regex pattern ' ((.+?)\\2+) ' to split string ' 44442(2)2(2)44 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "T", "type": "identifier", "children": []}]}]}]}]}]}	"create a pandas data frame from list of nested dictionaries ` my_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "quote_plus", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a[SEP]b", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"url encoding in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"check if tuple ( 2 , 3 ) is not in a list [ ( 2 , 3 ) , ( 5 , 6 ) , ( 9 , 1 ) ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "f", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "var", "type": "identifier", "children": []}]}]}]}]}]}	"add variable ` var ` to key ' f ' of first element in json data ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"drop rows whose index value in list ` [1, 3] ` in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "loads", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "POST", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mydata", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "{}", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a default empty json object if no json is available in request parameter ` mydata `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "io", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "data.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "encoding", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-16-le", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"open a text file ` data.txt ` in io module with encoding ` utf-16-le `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "names", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cursor", "type": "identifier", "children": []}]}]}, {"value": "description", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sqlite get a list of column names from cursor object ` cursor `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"for each index ` x ` from 0 to 3 , append the element at index ` x ` of list ` b ` to the list at index ` x ` of list a ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urlparse", "type": "identifier", "children": []}]}]}, {"value": "urldefrag", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www.address.com/something#something", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove the fragment identifier ` #something ` from a url ` http://www.address.com/something#something `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "state", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the middle two characters of a string ' state ' in a pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pygame", "type": "identifier", "children": []}]}]}, {"value": "display", "type": "identifier", "children": []}]}]}, {"value": "set_mode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pygame", "type": "identifier", "children": []}]}]}, {"value": "FULLSCREEN", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set the resolution of a monitor as ` FULLSCREEN ` in pygame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"iterate over dictionary ` d ` in ascending order of values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sleep", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0.1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a 0.1 seconds time delay"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "January[SEP]11,[SEP]2010", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%B[SEP]%d,[SEP]%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%A", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert date string ' January[SEP]11,[SEP]2010 ' into day of week"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "shutdown", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/r", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/t", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "900", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"restart a computer after ` 900 ` seconds using subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Andr\u00c3\u00a9", "type": "string", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a unicode ' Andr\u00c3\u00a9 ' to a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert rows in pandas data frame ` df ` into list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mystr", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string ' mystr ' to numpy array of integer values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "D", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "D", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"creating a list of dictionaries [ { ' A ' : 1 , ' C ' : 4 , ' B ' : 2 , ' D ' : 4 } , { ' A ' : 1 , ' C ' : 4 , ' B ' : 1 , ' D ' : 5 } ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Test(.*)print", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "testStr", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "DOTALL", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"search for regex pattern ' Test(.*)print ' in string ` testStr ` including new line character ' [LINE] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "k", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "y", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"merge pandas dataframe ` x ` with columns ' a ' and ' b ' and dataframe ` y ` with column ' y '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sdfasdf", "type": "string", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "df", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' df ' in string ' sdfasdf '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "dtypes", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "object", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"find rows with non zero values in a subset of columns where ` df.dtypes ` is not equal to ` object ` in pandas dataframe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M:%S", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"formate current date and time to a string using pattern ' %Y-%m-%d[SEP]%H:%M:%S '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}]}]}, {"value": "Str", "type": "expr", "children": [{"value": "map", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"repeat every character for 7 times in string ' map '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_dict", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all values of a dictionary ` your_dict ` are zero ` 0 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterating key and items over dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%s[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a file ' filename ' with each tuple in the list ` mylist ` written to a line"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "configure", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "background", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "black", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"change background color in tkinter"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print string ` t ` with proper unicode representations"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "sample", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "50", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate six unique random numbers in the range of 1 to 49 ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the minimum value in a numpy array ` arr ` excluding 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if list ` a ` is empty"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "monthly_mean", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "index", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"plot data of column ' index ' versus column ' A ' of dataframe ` monthly_mean ` after resetting its index"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "count_nonzero", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Invert", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "isnan", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of non-nan elements in a numpy ndarray matrix ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert generator object to a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "abspath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "amodule", "type": "identifier", "children": []}]}]}, {"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the path of the python module ` amodule `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "next", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_css_selector", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "li.next>a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find button that is in li class ` next ` and assign it to variable ` next `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"get the maximum 2 values per row in array ` A `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\$([^$]*)\\$", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all characters between two ` $ ` characters in string ` string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "abs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"find maximum with lookahead = 4 in a list ` arr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "url", "type": "identifier", "children": []}]}]}]}]}]}	"get current requested url"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "insert", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "77", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert 77 to index 2 of list ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d[SEP]%H:%M:%S", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "gmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current time in pretty format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "scipy", "type": "identifier", "children": []}]}]}, {"value": "misc", "type": "identifier", "children": []}]}]}, {"value": "imsave", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "outfile.jpg", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "image_array", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"save a numpy array ` image_array ` as an image ' outfile.jpg '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get keys with same value in dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Country", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Item_Code", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Y1961", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Y1962", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Y1963", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get sum of values of columns ' Y1961 ' , ' Y1962 ' , ' Y1963 ' after group by on columns \" Country \" and \" Item_code \" in dataframe ` df ` ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "size", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"create a new 2 dimensional array containing two random rows from array ` A `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"remove all instances of [ 1 , 1 ] from list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "newstr", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "oldstr", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "M", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to delete a character from a string using python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "difflib", "type": "identifier", "children": []}]}]}, {"value": "SequenceMatcher", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file1", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file2", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"compare contents at filehandles ` file1 ` and ` file2 ` using difflib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\b(?:b+a)+b+\\b", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all substrings in string ` mystring ` composed only of letters ` a ` and ` b ` where each ` a ` is directly preceded and succeeded by ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "food_colors", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count all elements in a nested dictionary ` food_colors `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parser", "type": "identifier", "children": []}]}]}, {"value": "ParseFile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sample.xml", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse a file ` sample.xml ` using expat parsing in python 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello[SEP]{user[name]}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "arg", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "user", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Markus", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"print a dictionary ` {'user': {'name': 'Markus'}} ` with string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "quote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace special characters in utf-8 encoded string ` s ` using the % xx escape"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ch", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ch", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "unicodedata", "type": "identifier", "children": []}]}]}, {"value": "category", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ch", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"removing control characters from a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "issubset", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"test if either of strings ` a ` or ` b ` are members of the set of strings , ` ['b', 'a', 'foo', 'bar'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "exec", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test2.py", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "test2.py", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "exec", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"call a python script \" test2.py \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "123", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round 123 to 100"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "xpath", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"clicking a link using selenium using python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"make all keys lowercase in dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\w", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "abcdefg", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' abcdefg ' into a list of characters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "records", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create list of dictionaries from pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "match", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[a-zA-Z][\\w-]*$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "!A_B", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex ' [a-zA-Z][\\w-]*$ ' on string ' !A_B '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"strip and split each line ` line ` on white spaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mykey1", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"removing key values pairs from a list of dictionaries"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%l:%M%p[SEP]%z[SEP]on[SEP]%b[SEP]%d,[SEP]%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display current time in readable format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_cmd", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute os command ` my_cmd `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"determine the byte length of a utf-8 encoded string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "chapter3", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change current working directory to directory ' chapter3 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"check if string ` one ` exists in the values of dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Article", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "annotate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "like_count", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "likes", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "order_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-like_count", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort objects in ` Articles ` in descending order of counts of ` likes `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pandas", "type": "identifier", "children": []}]}]}, {"value": "set_option", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "display.max_columns", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"output data of the first 7 columns of pandas dataframe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "males", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Gender", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Male", "type": "string", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Year", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2014", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"create dataframe ` males ` containing data of dataframe ` df ` where column ` Gender ` is equal to ' Male ' and column ` Year ` is equal to 2014"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_func", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "params", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unpack the arguments out of list ` params ` to function ` some_func `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tup", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tup", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get first element of each tuple in list ` A `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "significantDigit", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number ` value ` up to ` significantDigit ` decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "glob", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "*", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list all files in a current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\$(.*?)\\$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "$sin[SEP](x)$[SEP]is[SEP]an[SEP]function[SEP]of[SEP]x", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"getting the string between 2 ' $ ' characters in ' $sin[SEP](x)$[SEP]is[SEP]an[SEP]function[SEP]of[SEP]x '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"python getting a list of value from list of dict"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"initialize a list of empty lists ` a ` of size 3"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^a]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "abcd", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all the matches from a string ` abcd ` if it begins with a character ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "example.yaml", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stream", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Try", "type": "stmt", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yaml", "type": "identifier", "children": []}]}]}, {"value": "load", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stream", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "handlers", "type": "excepthandler", "children": [{"value": "ExceptHandler", "type": "excepthandler", "children": [{"value": "type", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yaml", "type": "identifier", "children": []}]}]}, {"value": "YAMLError", "type": "identifier", "children": []}]}]}, {"value": "exc", "type": "identifier", "children": []}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "exc", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}, {"value": "finalbody", "type": "stmt", "children": []}]}]}]}]}]}	"parse a yaml file \" example.yaml \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a 1d ` A ` array to a 2d array ` B `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "gb", "type": "identifier", "children": []}]}]}, {"value": "groups", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get data of column ' A ' and column ' B ' in dataframe ` df ` where column ' A ' is equal to ' foo '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` s ` by letter ' s '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_css_selector", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".button[SEP].c_button[SEP].s_button", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python selenium click on button"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "items", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "container", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "attribute", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get a list of items in the list ` container ` with attribute equal to ` value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if string ` foo ` is utf-8 encoded"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "exit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"terminate the script using status value 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get index of numpy array ` a ` with another numpy array ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ls", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "stdout", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "PIPE", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "stderr", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "STDOUT", "type": "identifier", "children": []}]}]}]}]}]}]}]}, {"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "stdout", "type": "identifier", "children": []}]}]}, {"value": "readlines", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "end", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "retval", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "wait", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calling an external command \" ls \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "remove", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete file ` filename `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "networkx", "type": "identifier", "children": []}]}]}, {"value": "draw_networkx_labels", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "G", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "pos", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "labels", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"draw node labels ` labels ` on networkx graph ` G ` at position ` pos `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"subtract the mean of each row in dataframe ` df ` from the corresponding row 's elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a random integer between ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "k_v", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k_v", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sorting a defaultdict ` d ` by value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.8e}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "flt", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "flt", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert list of sublists ` lst ` of floats to a list of sublists ` str_list ` of strings of integers in scientific notation with 8 decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "wi", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "wi", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "wordids", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert integer elements in list ` wordids ` to strings"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of the row names from index of a pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "response", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "put", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "data", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "headers", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "headers", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"execute a put request to the url ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"counting the number of true booleans in a python list ` [True, True, False, False, False, True] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pandas", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "R_Number", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C_Number", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Avg", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Std", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"construct pandas dataframe from a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "execute_script", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "window.scrollTo(0,[SEP]document.body.scrollHeight);", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"scroll a to the bottom of a web page using selenium webdriver"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "lowercase", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "length", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a random string of length ` length `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"make a flat list from list of lists ` sublist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "today", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "utcnow", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"return a datetime object with the current utc date"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pattern", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of characters in string ` x ` matching regex pattern ` pattern `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "LtE", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "columnX", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "columnX", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "LtE", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"select all rows in dataframe ` df ` where the values of column ' columnX ' is bigger than or equal to ` x ` and smaller than or equal to ` y `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{1}[SEP]{ham}[SEP]{0}[SEP]{foo}[SEP]{1}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "20", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "foo", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "ham", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "spam", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"replace placeholders in string ' {1}[SEP]{ham}[SEP]{0}[SEP]{foo}[SEP]{1} ' with arguments ` (10, 20, foo='bar', ham='spam') `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"find the mean of elements in list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list ` y ` of the first element of every tuple in list ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort dictionary ` d ` by value in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dparser", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "monkey[SEP]20/01/1980[SEP]love[SEP]banana", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "fuzzy", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"extract date from a string ' monkey[SEP]20/01/1980[SEP]love[SEP]banana '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python sum of ascii values of all characters in a string ` string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"join elements of each tuple in list ` a ` into one string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sorting while preserving order in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"converting hex string ` s ` to its integer representations"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a dictionary ` y ` by value then by key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlopen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www.stackoverflow.com", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "getcode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check the status code of url \" http://www.stackoverflow.com \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string2", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "string1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"insert string ` string1 ` after each character of ` string2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test.sh[SEP]otherfunc", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"call a function ` test.sh[SEP]otherfunc ` inside a bash script ` test.sh[SEP]otherfunc ` using subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create a list of tuples which contains number 9 and the number before it , for each occurrence of 9 in the list ' myList '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "fillna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace all the nan values with 0 in a pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dfs", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_excel", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "sheetname", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"read excel file ` file_name ` using pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"slicing a list into a list of sub-lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buckets", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of substrings consisting of the first 5 characters of every string in list ` buckets `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "li", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ar", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get a list of items form nested list ` li ` where third element of each item contains string ' ar '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^$", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "include", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sms.urls", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"confirm urls in django properly"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "100110", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create an array containing the conversion of string ' 100110 ' into separate elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Date", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get values from a dictionary ` my_dict ` whose key contains the string ` Date `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "123", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a list containing digits of number 123 as its elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "03:55", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%H:%M", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "time", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert string ' 03:55 ' into datetime.time object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l1", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l2", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get a list comparing two lists of tuples ` l1 ` and ` l2 ` if any first value in ` l1 ` matches with first value in ` l2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "linspace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "num", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create numpy array of ` 5 ` numbers starting from ` 1 ` with interval of ` 3 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "TIME_ZONE", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Europe/Istanbul", "type": "string", "children": []}]}]}]}]}]}	"set time zone ` Europe/Istanbul ` in django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "argsort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "unique", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort the values of the dataframe ` df ` and align the columns accordingly based on the obtained indices after np.argsort ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "comma.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "quotechar", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "'", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"read pandas data frame csv ` comma.csv ` with extra commas in column specifying string delimiter ` ' `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "list2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "pair", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sort two lists ` list1 ` and ` list2 ` together using lambda function"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"return list ` result ` of sum of elements of each list ` b ` in list of lists ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"python how to get every first element in 2 dimensional list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"remove duplicate dict in list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "DateStr", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "DateObj", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "dt", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%d%m%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert column of date objects ' DateObj ' in pandas dataframe ` df ` to strings in new column ' DateStr '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<=.)(?=.)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate ' - ' in between characters of string ` str `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "session", "type": "identifier", "children": []}]}]}, {"value": "query", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Task", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Task", "type": "identifier", "children": []}]}]}, {"value": "time_spent", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "hours", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"query all data from table ` Task ` where the value of column ` time_spent ` is bigger than 3 hours"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` lst ` based on each element 's number of occurrences"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[_%^$]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\\\\\g<0>", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"place '  ' infront of each non-letter char in string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "copy", "type": "identifier", "children": []}]}]}, {"value": "deepcopy", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "old_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"deep copy list ` old_list ` as ` new_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tf", "type": "identifier", "children": []}]}]}, {"value": "Session", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "run", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tf", "type": "identifier", "children": []}]}]}, {"value": "constant", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a tensor with list of constants ` [1, 2, 3] ` into a numpy array in tensorflow"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "some_command[SEP]<[SEP]input_file[SEP]|[SEP]another_command[SEP]>[SEP]output_file", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calling an external command \" some_command[SEP]<[SEP]input_file[SEP]|[SEP]another_command[SEP]>[SEP]output_file \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.2f", "type": "string", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unpack each value in list ` x ` to its placeholder ' % ' in string ' %.2f '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a string of integers ` x ` separated by spaces to a list of integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stream", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "some_command[SEP]with[SEP]args", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calling an external command \" args \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "slice", "type": "identifier", "children": []}]}]}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "3:8", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"django jinja slice list ` mylist ` by ' 3:8 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "8", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete all occureces of ` 8 ` in each string ` s ` in list ` lst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "shutil", "type": "identifier", "children": []}]}]}, {"value": "copy2", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/dir/file.ext", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/new/dir", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"copy file ' /dir/file.ext ' to ' /new/dir '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%m/%d/%Y", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "gmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python get time stamp on file ` file ` in ' %m/%d/%Y ' format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dictA", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "duck", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get a list of all keys from dictionary ` dictA ` where the number of occurrences of value ` duck ` in that key is more than ` 1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number ` x ` to nearest integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "first", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "second", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"case insensitive string comparison between ` first ` and ` second `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "relpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/usr/var/log/", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/usr/var", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get relative path of path ' /usr/var ' regarding path ' /usr/var/log/ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hello{0}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"prepend string ' hello ' to all items in list ' a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "xs", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}, {"value": "arg", "type": "arg", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cmp", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort list ` xs ` in ascending order of length of elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "exists", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/etc", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether a path \" /etc \" exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "my.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "my_column", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "float64", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "na_values", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "n/a", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"read csv file ' my.csv ' into a dataframe ` df ` with datatype of float for column ' my_column ' considering character ' n/a ' as nan value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "super", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ChildClass", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "__init__", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "args", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "arg", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "kwargs", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"call base class 's __init__ method from the child class ` ChildClass `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tag_weight", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort dictionary ` tag_weight ` in reverse order by values cast to integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "student_tuples", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "t", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort list ` student_tuples ` by second element of each tuple in ascending and third element of each tuple in descending"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "apply_along_axis", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "linalg", "type": "identifier", "children": []}]}]}, {"value": "norm", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"apply ` numpy.linalg.norm ` to each row of a matrix ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\.[^.]+$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove the last dot and all text beyond it in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "isnull", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the number of nan values in each column of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "needle", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "haystack", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if string ` needle ` is in ` haystack `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.8e}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "flt", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "flt", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sublist", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert list ` lst ` of tuples of floats to list ` str_list ` of tuples of strings of floats in scientific notation with eight decimal point precision"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "keys", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "stack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "unstack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a pandas dataframe of values from a dictionary ` d ` which contains dictionaries of dictionaries"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a flat list into a list of tuples of every two items in the list , in order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(d(d)d)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "aaa[SEP]bbb[SEP]ccc[SEP]ddd[SEP]eee[SEP]fff", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regex search and split string ' aaa[SEP]bbb[SEP]ccc[SEP]ddd[SEP]eee[SEP]fff ' by delimiter ' (d(d)d) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"obtain the current day of the week in a 3 letter format from a datetime object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "8/19/2014", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Jun", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Fly", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "98765", "type": "string", "children": []}]}]}]}]}]}]}]}	"add row ` ['8/19/2014', 'Jun', 'Fly', '98765'] ` to dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_function", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "arg", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"pass dictionary items ` data ` as keyword arguments in function ` my_function `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "beginning", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "beginning", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "LENGTH", "type": "identifier", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"select a substring of ` s ` beginning at ` beginning ` of length ` LENGTH `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "i", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get index of the biggest 2 values of a list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "hours", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "minutes", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"substract 1 hour and 10 minutes from current time"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "diag", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "rot90", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the opposite diagonal of a numpy array ` array `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "reindex", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Z", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reorder indexed rows ` ['Z', 'C', 'A'] ` based on a list in pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "substring", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "substring", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "substring_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if any element of list ` substring_list ` are in string ` string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "csvwriter", "type": "identifier", "children": []}]}]}, {"value": "writerow", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write a list of strings ` row ` to csv object ` csvwriter `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "MyModel", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "order_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "?", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get two random records from model ' MyModel ' in django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a multidimensional array ` a ` by column with index 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x[SEP]=[SEP]{}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a utf-8 string literal representation of byte string ` x[SEP]=[SEP]{} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "doc", "type": "identifier", "children": []}]}]}, {"value": "xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "//a[starts-with(text(),'some[SEP]text')]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all ` a ` tags where the text starts with value ` some text ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"fastest way to sort each row in a pandas dataframe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\t+", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yas", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` yas ` based on tab ' \t '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"check if 7 is in ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of lists ` s ` by second and third element in each list ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"move last item of array ` a ` to the first position"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get element at index 0 of first row and element at index 1 of second row in array ` A `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "used\u200b", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u200b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "*", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replacing ' \u200b ' with ' * ' in a string using regular expressions"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` my_list ` in alphabetical order based on the values associated with key ' name ' of each dictionary in the list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "get_dummies", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "Series", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "stack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert a column of list in series ` s ` to dummies"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get pandas groupby object with sum over the rows with same column names within dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "chain", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result_list", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the union of values in list of lists ` result_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a[SEP]b", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "isalpha", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if string ' a[SEP]b ' only contains letters and spaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "in1d", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"align values in array ` b ` to the order of corresponding values in array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "destroy", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how do i get rid of python tkinter root window ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract first column from a multi-dimensional array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "prod_type", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "responsive", "type": "string", "children": []}]}]}]}]}]}	"replace each value in column ' prod_type ' of dataframe ` df ` with string ' responsive '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "loadtxt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test.csv", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "delimiter", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "skiprows", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert csv file ' test.csv ' into two-dimensional matrix"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yourdata", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "d", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": []}, {"value": "values", "type": "expr", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "subkey", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort list of nested dictionaries ` yourdata ` in reverse based on values associated with each dictionary ' s key ' subkey '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100000000000", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "999999999999", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a 12-digit random number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "today", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "365", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "isoformat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calculate the date six months from the current date"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"drop all columns in dataframe ` df ` that holds a maximum value bigger than 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"replace ` 0 ` with ` 2 ` in the list ` [0, 1, 0, 3] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "count", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Name", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "City", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "size", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a pandas ` df1 ` groupby object to dataframe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list containing the subtraction of each item in list ` L ` from the item prior to it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "My[SEP]Key", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "My[SEP]Value", "type": "string", "children": []}]}]}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert each key , value pair in a dictionary ` {'My Key': 'My Value'} ` to lowercase"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "legend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "frameon", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"remove frame of legend in plot ` plt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "alist", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get the last element in list ` alist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "li", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if list ` li ` is empty"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__builtins__", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "range", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"lookup an attribute in any scope by name ' range '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "archive", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pdffile", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "basename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pdffile", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"zip file ` pdffile ` using its basename as directory name"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "11", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "14", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' s ' in string ` str ` starting from index 11 and ending at index 14"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str1", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenating values in ` list1 ` to a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{}{}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "adict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert dictionary ` adict ` into string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert unicode string ` s ` into string literals"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change string ` s ` to upper case"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort a set ` s ` by numerical value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "xxx.mp4", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write the content of file ` xxx.mp4 ` to file ` f `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "loads", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{\"foo\":[SEP]42,[SEP]\"bar\":[SEP]\"baz\"}", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"extract data field ' bar ' from json object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum each value in a list ` l ` of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7.005", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 7.005 up to 2 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^\\x00-\\x7F]+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace non-ascii characters in string ` text ` with a single space"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ">q", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert bytes string ` s ` to an unsigned integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reset the indexes of a pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "nan", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace ' - ' in pandas dataframe ` df ` with ` np.nan `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "subFolders", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "files", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "walk", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rootdir", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"recursively go through all subdirectories and files in ` rootdir `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "TimeGrouper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "freq", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "M", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"group a pandas data frame by monthly frequenct ` M ` using groupby"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a dictionary from string ` e ` separated by ` - ` and ` , `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all the indexes in a numpy 2d array where the value is 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode url-encoded string ` some_string ` to its character equivalents"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort a dictionary ` data ` by its values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list of integers into a single integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "textfile", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "apple", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"filter lines from a text file ' textfile ' which contain a word ' apple '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "direct_output", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "check_output", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ls", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"store the output of command ' ls ' in variable ` direct_output `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a_dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "item", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a python dictionary ` a_dict ` by element ` 1 ` of the value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Invert", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "duplicated", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"drop duplicate indexes in a pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract elements at indices ( 1 , 2 , 5 ) from a list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"check whether elements in list ` a ` appear only once"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Exception", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "I[SEP]know[SEP]Python!", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cause", "type": "expr", "children": []}]}]}]}	"throw an exception \" I[SEP]know[SEP]Python! \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parser", "type": "identifier", "children": []}]}]}, {"value": "add_argument", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "--conf", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "nargs", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "action", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "append", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"create variable key/value pairs with argparse"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "decimal", "type": "identifier", "children": []}]}]}, {"value": "Decimal", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randrange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10000", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}]}]}]}]}]}	"generate random decimal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\W)\\1+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"coalesce non-word-characters in string ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dparser", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "monkey[SEP]2010-07-32[SEP]love[SEP]banana", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "fuzzy", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"extract date from a string ' monkey[SEP]2010-07-32[SEP]love[SEP]banana '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "my.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "na_values", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "n/a", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"convert nan values to \u2018 n/a \u2019 while reading rows from a csv ` read_csv ` with pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "pack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<I", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1633837924", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a binary value ' 1633837924 ' to string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hash", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pformat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hash", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pformat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"generate unique equal hash for equal dictionaries ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "rename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "src", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "dst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"rename file from ` src ` to ` dst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"substitute multiple whitespace with single whitespace in string ` mystring `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the value with the maximum length in each column in array ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "div", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"normalize a pandas dataframe ` df ` by row"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "This[SEP]is[SEP]a[SEP]string", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split This[SEP]is[SEP]a[SEP]string \" This[SEP]is[SEP]a[SEP]string \" into words that do not contain whitespaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-(?!aa|bb)([^-]+)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regular expression matching all but ' aa ' and ' bb '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort a list ` L ` by number after second ' . '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_f", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_f", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_f", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove empty strings from list ` str_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "H-e-l-l-o-[SEP]-W-o-r-l-d", "type": "string", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"select alternate characters of \" H-e-l-l-o-[SEP]-W-o-r-l-d \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "einsum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ji,i->j", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"multiply array ` a ` and array ` b ` respective elements then sum each row of the new array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "letter", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "number", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterating key and items over dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "fd9b", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert unicode codepoint to utf8 hex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:,.2f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "24322.34", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert float 24322.34 to comma-separated string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mynewlist", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myset", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove duplicates from list ` myset `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sorting a list of dictionary ` a ` by values in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col_name_1", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col_name_2", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "style", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "o", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"how to plot two columns of a pandas data frame using points ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove elements in list ` b ` from list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get keys and items of dictionary ` d ` as a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"join items of each tuple in list of tuples ` a ` into a list of strings"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dogtail", "type": "identifier", "children": []}]}]}, {"value": "rawinput", "type": "identifier", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"control the keyboard and mouse with dogtail in linux"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "isnan", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace nan values in array ` a ` with zeros"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst2", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get tuples from lists ` lst ` and ` lst2 ` using list comprehension in python 2"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2015/01/01[SEP]12:12am", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y/%m/%d[SEP]%I:%M%p", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse string ' 2015/01/01[SEP]12:12am ' to datetime object using format ' %Y/%m/%d[SEP]%I:%M%p '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"retrieve all items in an numpy array ' x ' except the item of the index 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "importlib", "type": "identifier", "children": []}]}]}, {"value": "import_module", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".c", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a.b", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"import a nested module ` c.py ` within ` b ` within ` a ` with importlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"swap values in a tuple/list in list ` mylist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "xaxis", "type": "identifier", "children": []}]}]}, {"value": "set_ticks_position", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "top", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"move x-axis of the pyplot object ` ax ` to the top of a plot in matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the number of values in list ` j ` that is greater than 5"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` a ` in ascending order based on its elements ' float values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ";", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace ` ; ` with ` : ` in a string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "colour", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "size", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "kind", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"plot categorical data in series ` df ` with kind ` bar ` using pandas and matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.2f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print float ` a ` with two decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dictionary", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"iterate over a python dictionary , ordered by values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "chain", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` a ` from being consecutive sequences of tuples into a single sequence of elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/usr/bin/perl", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "./uireplace.pl", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"invoke perl script ' ./uireplace.pl ' using perl interpeter ' /usr/bin/perl ' and send argument ` var ` to it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "type", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "log2", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "v", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"apply function ` log2 ` to the grouped values by ' type ' in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"remove first word in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "next", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"retrieve an element from a set ` s ` without removing it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "a", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"can i sort text by its numeric value in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ignore_index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"duplicate data in pandas dataframe ` x ` for 5 times"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "City", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ascii", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ignore", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode value of key ` City ` in dictionary ` data ` as ` ascii ` , ignoring non-ascii characters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(.*)</div>", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1</bad>", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace the last occurence of an expression ' </div> ' with ' </bad> ' in a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode url ` url ` with utf8 and print it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_series", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_function", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "args", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "extra_kw", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"python pandas : apply a function with arguments to a series"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "t", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"swap values in a tuple/list inside a list ` mylist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "canvas", "type": "identifier", "children": []}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "all", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"clear tkinter canvas ` canvas `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yourdata", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "e", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "subkey", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort list of nested dictionaries ` yourdata ` in reverse order of ' key ' and ' subkey '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\\\", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string literal ` s ` with values ` \\ ` to raw string literal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "User", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "X", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "transform", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}	"get data from dataframe ` df ` where column ' X ' is equal to 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "quote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://spam.com/go/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace special characters in url ' http://spam.com/go/ ' using the ' %xx ' escape"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "concat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "distancesDF", "type": "identifier", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datesDF", "type": "identifier", "children": []}]}]}, {"value": "dates", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"merge a pandas data frame ` distancesDF ` and column ` dates ` in pandas data frame ` datesDF ` into single"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get biggest 3 values from each column of the pandas dataframe ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "last[SEP]modified:[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "ctime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get modified time of file ` file `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Sample", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "date__year", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2011", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "date__month", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "01", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"filter objects month wise in django model ` Sample ` for year ` 2011 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Andr\u00c3\u00a9", "type": "string", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format a string ` u'Andr\u00c3\u00a9' ` that has unicode characters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"how to sort a dictionary in python by value when the value is a list and i want to sort it by the first index of that list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Apple", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "American", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"access value associated with key ' American ' of key ' Apple ' from dictionary ` dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "example", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "example", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"truncate ` [LINE] ` from each string in a list of string ` example `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sdfasdf", "type": "string", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cc", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' cc ' in string ' sdfasdf '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "somedirectory", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list all files of a directory \" somedirectory \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listA", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listB", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list duplicated elements in two lists ` listA ` and ` listB `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"delete an element 0 from a dictionary ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "post_response", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "post", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "url", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://httpbin.org/post", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "json", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "post_data", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"make an http post request with data ` post_data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "((\\w)\\2*)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` s ` into strings of repeating elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "results", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "year", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` results ` by keys value ' year '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "insert", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert string ` foo ` at position ` 0 ` of list ` list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "12345678.46", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert '  ' between every three digit before ' . ' and replace ' , ' with ' . ' in 12345678.46"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort_values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "by", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Date", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"sort pandas dataframe by date"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "frame_1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "frame_2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "left_on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "county_ID", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "right_on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "countyid", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"join pandas data frame ` frame_1 ` and ` frame_2 ` with left join by ` county_ID ` and right join by ` countyid `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "Col1", "type": "identifier", "children": []}]}]}, {"value": "isin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "men", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rocks", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "mountains", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get rows of dataframe ` df ` where column ` Col1 ` has values ` ['men', 'rocks', 'mountains'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}]}]}]}	"get all environment variables"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fh1", "type": "identifier", "children": []}]}]}, {"value": "seek", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"move the cursor of file pointer ` fh1 ` at the end of the file ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change directory to the directory of a python script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dt", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%m/%d/%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format datetime in ` dt ` as string in format ` '%m/%d/%Y `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"python getting a list of value from list of dict"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BBB", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rgbstr", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex triplet string ` rgbstr ` to rgb tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"delete all values in a list ` mylist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"select all rows from pandas dataframe ' df ' where the value in column ' A ' is greater than 1 or less than -1 in column ' B ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create a list containing elements of list ` a ` if the sum of the element is greater than 10"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<L", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "y\u00cc\u00a6\u00bb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert string of bytes ` y\u00cc\u00a6\u00bb ` into an int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "alpha", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "img", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get alpha value ` alpha ` of a png image ` img `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "combinations", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate the combinations of 3 from a set ` {1, 2, 3, 4} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random_choice", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "choices", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a random item from list ` choices `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unpack keys and values of a dictionary ` d ` into two lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "header", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"exclude column names when writing dataframe ` df ` to a csv file ` filename.csv `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "it", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "it", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "it", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pair each element in list ` it ` 3 times into a tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace comma in string ` s ` with empty string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode url ` url ` from utf-16 code to utf-8 code"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "t", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "minute", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"group dataframe ` df ` based on minute interval"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\(\\w+\\)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all data inside parenthesis in string ` item `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\b(this|string)\\b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "<markup>\\1</markup>", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "this[SEP]is[SEP]my[SEP]string", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match this[SEP]is[SEP]my[SEP]string ' this[SEP]is[SEP]my[SEP]string ' with regex ' \\b(this|string)\\b ' then replace it with regex ' <markup>\\1</markup> '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_string", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove leading and trailing zeros in the string ' your_Strip '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"zip a list of tuples ` [(1, 4), (2, 5), (3, 6)] ` into a list of tuples according to original tuple index"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "makeitastring", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenating values in list ` L ` to a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "insert", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "libs", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert directory ' libs ' at the 0th index of current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "levels", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": []}, {"value": "values", "type": "expr", "children": []}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": []}, {"value": "values", "type": "expr", "children": []}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": []}, {"value": "values", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` levels ` containing 3 empty dictionaries"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert ` i ` to string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"strip a string ` line ` of all carriage returns and newlines"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a list ' a ' to a dictionary where each even element represents the key to the dictionary , and the following odd element is the value"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2011,[SEP]4,[SEP]0", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y,[SEP]%U,[SEP]%w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"derive the week start for the given week number and year \u2018 2011 , 4 , 2011,[SEP]4,[SEP]0 \u2019"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trim characters ' \t[LINE] ' in ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Sample", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "date__range", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2011-01-01", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "2011-01-31", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"filter the objects in django model ' Sample ' between date range ` 2011-01-01 ` and ` 2011-01-31 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "browser", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_class_name", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "section-select-all", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"click on the text button ' section-select-all ' using selenium python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "repeat", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dim", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of all integer points in a ` dim ` dimensional hypercube with coordinates from ` -x ` to ` y ` for all dimensions"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort dictionary ` x ` by value in ascending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "year", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "month", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "day", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort a structured numpy array ' df ' on multiple columns ' year ' , ' month ' and ' day ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "M", "type": "identifier", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get a sum of 4d array ` M `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get a request parameter ` a ` in jinja2"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of values for key \" key \" from a list of dictionaries in ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "commonprefix", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/the/dir/", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "realpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/the/dir/", "type": "string", "children": []}]}]}]}]}]}]}]}	"check if file ` filename ` is descendant of directory ' /the/dir/ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "combine", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dateobject", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "time", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert date object ` dateobject ` into a datetime object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "split_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "the_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "the_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of strings ` split_text ` with fixed chunk size ` n ` from a string ` the_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a_string", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"reverse a string ` a_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "feature3", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Feature3", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "dic", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract dictionary values by key ' Feature3 ' from data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "the_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list of strings ` the_list ` by integer suffix before \" _ \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort_values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort dataframe ` df ` based on column ' b ' in ascending and column ' c ' in descending"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myDict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "42", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove all items from a dictionary ` myDict ` whose values are ` 42 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ab", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}]}]}]}	"append to file ' test1 ' content ' koko '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_tuples", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "tup", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tup", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sorting a list of tuples ` list_of_tuples ` by second key"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "23", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python : convert a string to an integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "ctime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getctime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get creation time of file ` file `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "flatten", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"flatten a dataframe df to a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myString", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "string_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode escape sequences in string ` myString `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of lists ` L ` by index 2 of the inner list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2013-1-25", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%m/%d/%y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to convert a date string ' 2013-1-25 ' in format ' %Y-%m-%d ' to different format ' %m/%d/%y '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "abspath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get full path of current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yourdata", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"reverse list ` yourdata `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "Or", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "0", "type": "string", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` s ` into a list of strings based on ' , ' then replace empty strings with zero"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test[SEP]string[LINE]", "type": "string", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove trailing newline in string \" test[SEP]string[LINE] \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"delete an item with key ` key ` from ` mydict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cur", "type": "identifier", "children": []}]}]}, {"value": "mogrify", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "SELECT[SEP]*[SEP]FROM[SEP]table[SEP]WHERE[SEP]column[SEP]IN[SEP]%s;", "type": "string", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pass a list of parameters ` ( ( 1 , 2 , 3 ) , ) to sql queue ' SELECT[SEP]*[SEP]FROM[SEP]table[SEP]WHERE[SEP]column[SEP]IN[SEP]%s; '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"check if 3 is not in the list [ 4,5,6 ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^(.+?)((.+)\\3+)$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "42344343434", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"find recurring patterns in a string ' 42344343434 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "MyModel", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "extra", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "select", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "length", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Length(name)", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "order_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "length", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort query set by number of characters in a field ` length ` in django model ` MyModel `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "page_source", "type": "identifier", "children": []}]}]}]}]}]}	"selenium get the entire ` driver ` page text"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\s{2,}", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "|", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"substitute two or more whitespace characters with character ' | ' in string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "writer", "type": "identifier", "children": []}]}]}, {"value": "writeheader", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add field names as headers in csv constructor ` writer `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "root", "type": "identifier", "children": []}]}]}, {"value": "xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".//a[text()=\"TEXT[SEP]A\"]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the element that holds string ' TEXT A ' in file ` root `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "last", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}	"assign the index of the last occurence of ` x ` in list ` s ` to the variable ` last `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "sqrt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "square", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"normalize the dataframe ` df ` along the rows"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "li", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` li ` in descending order based on the second element of each list inside list ` li `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "34.2424", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "64.2344", "type": "object", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "76.3534", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "45.2344", "type": "object", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concat each values in a tuple ` (34.2424, -64.2344, 76.3534, 45.2344) ` to get a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "12454v", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete letters from string ' 12454v '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "copy", "type": "identifier", "children": []}]}]}, {"value": "copy", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "old_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"copy list ` old_list ` as ` new_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "argwhere", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find rows of 2d array in 3d numpy array ' arr ' if the row has value ' [[0, 3], [3, 0]] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "IsNot", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print the number of occurences of not ` none ` in a list ` lst ` in python 2"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "unsorted_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "presorted_list", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list ` unsorted_list ` based on another sorted list ` presorted_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "This[SEP]is[SEP]a[SEP]string", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split This[SEP]is[SEP]a[SEP]string \" This[SEP]is[SEP]a[SEP]string     This[SEP]is[SEP]a[SEP]string     This[SEP]is[SEP]a[SEP]string \" into words that does not contain whitespaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "count", "type": "identifier", "children": []}]}]}, {"value": "setdefault", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set value for key ` a ` in dict ` count ` to ` 0 ` if key ` a ` does not exist or if value is ` none `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "platform", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the platform os name"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Season", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"update row values for a column ` Season ` using vectorized string operation in pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "endswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".com", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"remove a substring \" .com \" from the end of string ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "chain", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listone", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "listtwo", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterate items in lists ` listone ` and ` listtwo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum of all values in a python dict"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode string ` data ` using hex ' hex ' encoding"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "eval", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "print('Hello')", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"run the code contained in string \" print('Hello') \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"get the first and last 3 elements of list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "next", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "it", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list containing the ` n ` next values of generator ` it `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get keys and items of dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Z", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"custom sort an alphanumeric list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\.\\s", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\.\\s*$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regular expression in python sentence extractor"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "seq", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if list ` seq ` is empty"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "workbook", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "xlsxwriter", "type": "identifier", "children": []}]}]}, {"value": "Workbook", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "app/smth1/smth2/Expenses01.xlsx", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"save xlsxwriter file in ' app/smth1/smth2/Expenses01.xlsx ' path and assign to variable ` workbook `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "D", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "D", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"creating a list of dictionaries in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "xs", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort list ` xs ` based on the length of its elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"pandas subtract a row from dataframe ` df2 ` from dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"find indices of elements equal to zero from numpy array ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate all permutations of list ` [1, 2, 3] ` and list ` [4, 5, 6] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list with the sum of respective elements of the tuples of list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list of characters ` ['a', 'b', 'c', 'd'] ` into a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "FunctionDef", "type": "stmt", "children": [{"value": "bufcount", "type": "identifier", "children": []}, {"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "filename", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lines", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buf_size", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1024", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1024", "type": "object", "children": []}]}]}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "read_f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buf", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "read_f", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buf_size", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "While", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buf", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "AugAssign", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lines", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buf", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buf", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "read_f", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "buf_size", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}, {"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lines", "type": "identifier", "children": []}]}]}]}]}, {"value": "decorator_list", "type": "expr", "children": []}, {"value": "returns", "type": "expr", "children": []}]}]}]}	"get line count of file ` filename `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "01/12/2011", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d/%m/%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%s", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert string ' 01/12/2011 ' to an integer timestamp"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "getenv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "KEY_THAT_MIGHT_EXIST", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "default_value", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get value of the environment variable ' KEY_THAT_MIGHT_EXIST ' with default value ` default_value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "isnan", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "prod", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"calculate ratio of sparsity in a numpy array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode string ` s ` to utf-8 code"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}	"store integer 3 , 4 , 1 and 2 in a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "globals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "importlib", "type": "identifier", "children": []}]}]}, {"value": "import_module", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "some.package", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "__dict__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"import all classes from module ` some.package `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split list ` l ` into ` n ` sized lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "slice", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list ` slice ` of array slices of the first two rows and columns from array ` arr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "splitlines", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"read the first line of a string ` my_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Invert", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "mask", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get the non-masked values of array ` m `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "old_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"make a copy of list ` old_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "proc", "type": "identifier", "children": []}]}]}, {"value": "communicate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get output of script ` proc `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "walk", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "directory", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of all subdirectories in the directory ` directory `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "tcsh[SEP]your_own_script", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute external commands/script ` tcsh[SEP]your_own_script ` with csh instead of bash"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hand", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a dictionary from a dictionary ` hand ` where the values are present"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if string ` my_string ` is empty"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hashlib", "type": "identifier", "children": []}]}]}, {"value": "md5", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "full_path", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "hexdigest", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate md5 checksum of file in the path ` full_path ` in hashlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if all lists in list ` L ` have three elements of integer 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "u", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "v", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort dictionary ` u ` in ascending order based on second elements of its values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "calendar", "type": "identifier", "children": []}]}]}, {"value": "monthrange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2008", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get last day of the second month in 2002"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "column_name", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"delete a column ` column_name ` without having to reassign from pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thisismylist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list where each element is a value of the key ' Name ' for each dictionary ` d ` in the list ` thisismylist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "echo[SEP]Hello[SEP]World", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "stdout", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "PIPE", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "stdout", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calling an external command \" echo[SEP]Hello[SEP]World \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "start[SEP]command[SEP]-flags[SEP]arguments", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"subprocess run start[SEP]command[SEP]-flags[SEP]arguments ' start[SEP]command[SEP]-flags[SEP]arguments ' through the shell"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "insert", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/path/to/application/app/folder", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Import", "type": "stmt", "children": [{"value": "names", "type": "alias", "children": [{"value": "alias", "type": "alias", "children": [{"value": "file", "type": "identifier", "children": []}, {"value": "asname", "type": "identifier", "children": []}]}]}]}]}]}	"importing file ` file ` from folder ' /path/to/application/app/folder '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "strings", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "str", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".*%(.).*", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` strings ` in alphabetical order based on the letter after percent character ` % ` in each element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hashlib", "type": "identifier", "children": []}]}]}, {"value": "md5", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "thecakeisalie", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "hexdigest", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a md5 hash from string ` thecakeisalie `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ctypes", "type": "identifier", "children": []}]}]}, {"value": "windll", "type": "identifier", "children": []}]}]}, {"value": "user32", "type": "identifier", "children": []}]}]}, {"value": "MessageBoxW", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Error", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Error", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"throw an error window in python in windows"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "implicitly_wait", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "60", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"selenium wait for driver ` driver ` 60 seconds before throwing a nosuchelementexceptions exception"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "DEBUSSY", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}]}]}]}]}	"set environment variable ' DEBUSSY ' equal to 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "//div[@id='a']//a[@class='click']", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to select element with selenium python xpath"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "fromfile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "float32", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"construct an array with data type float32 ` a ` from data in binary file ' filename '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d2", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d1", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d2", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"divide the values with same keys of two dictionary ` d1 ` and ` d2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pandas : how can i use the apply ( ) function for a single column ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0b0010101010", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert binary string ' 0b0010101010 ' to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode unicode string ` s ` into a readable unicode literal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1.005", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 1.005 up to 2 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data_df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "grade", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data_df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "grade", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change data type of data in column ' grade ' of dataframe ` data_df ` into float and then to int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "focus[SEP]object[SEP]class:", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "window2", "type": "identifier", "children": []}]}]}, {"value": "focus_get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "__class__", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the widget which has currently the focus[SEP]object[SEP]class: in tkinter instance ` window2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u0440\u0430\u0437[SEP]\u0434\u0432\u0430[SEP]\u0442\u0440\u0438", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split unicode string \" \u00d1\u0080\u00d0\u00b0\u00d0\u00b7 \u00d0\u00b4\u00d0\u00b2\u00d0\u00b0 \u00d1\u0082\u00d1\u0080\u00d0\u00b8 \" into words"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_tuples", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"group a list ` list_of_tuples ` of tuples by values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "pop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key", "type": "string", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete an item with key \" key \" from ` mydict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parent_dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "BoolOp", "type": "expr", "children": [{"value": "op", "type": "boolop", "children": [{"value": "And", "type": "boolop", "children": []}]}, {"value": "values", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"fetch all elements in a dictionary ' parent_dict ' where the key is between the range of 2 to 4"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "11111111", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert binary string ' 11111111 ' to integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\xc3\\x85\u3042", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert and escape string \" \\xc3\\x85\u00e3\u0081\u0082 \" to utf-8 code"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "exit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"quit program"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "letter", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "number", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterating key and items over dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "treeview", "type": "identifier", "children": []}]}]}, {"value": "connect", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "size-allocate", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "treeview_changed", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a auto scrolled window to the end of the list in gtk"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterate over a dictionary ` foo ` in sorted order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "res_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rows", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list ` res_list ` of the first elements of each tuple in a list of tuples ` rows `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".{,16}\\b", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` text ` into chunks of 16 characters each"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "slice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string_slice", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ":", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a slice object using string ` string_slice `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "programs", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "new[SEP]york", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create a list of values from the dictionary ` programs ` that have a key with a case insensitive match to ' new[SEP]york '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "python[SEP]myscript.py", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"spawn a process to run python[SEP]myscript.py script ` python[SEP]myscript.py ` in c++"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fn", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "my_file", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a relative path of file ' my_file ' into variable ` fn `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "repeat", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all combination of 3 binary values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "xyz", "type": "string", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove white spaces from the end of string \" xyz \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove square bracket ' [] ' from pandas dataframe ` df ` column ' value '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^((.*?cat.*?){1})cat", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1Bull", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find and replace 2nd occurrence of word ' cat ' by ' Bull ' in a sentence ' s '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "success", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the sum of values associated with the key \u2018 success \u2019 for a list of dictionaries ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"calculate the sum of the squares of each value in list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([0-9]+|[A-Z])", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "20M10000N80M", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"separate numbers and characters in string ' 20M10000N80M '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "PplNum", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "RoomNum", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cumcount", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}	"identify duplicated rows in columns ' PplNum ' and ' RoomNum ' with additional column in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u00c2\u00a3", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add unicode string ' 1 ' to utf-8 decoded string ' \u00c2\u00a3 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<=[a-z])[LINE]?[LINE]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "textblock", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove line breaks from string ` textblock ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "select", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_table", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "func", "type": "identifier", "children": []}]}]}, {"value": "current_date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sqlalchemy select records of columns of table ` my_table ` in addition to current date column"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "I[SEP]have:[SEP]{0.price}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "card", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a string ` card ` with string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum of squares values in a list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the sum of the products of each pair of corresponding elements in lists ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "base64", "type": "identifier", "children": []}]}]}, {"value": "urlsafe_b64decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "uenc", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ascii", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"django urlsafe base64 decode string ` uenc ` with decryption"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myVar", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "globals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if a global variable ' myVar ' exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "combinations", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"getting every possible combination of two elements in a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "--bo", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set color marker styles ` --bo ` in matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "month", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set dataframe ` df ` index using column ' month '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "anniversary_score", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` your_list ` by the ` anniversary_score ` attribute of each object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "setsockopt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "SOL_SOCKET", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "SO_REUSEADDR", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"enable the so_reuseaddr socket option in socket object ` s ` to fix the error ` only one usage of each socket address is normally permitted `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "sleep", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delay for \" 5 \" seconds"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lines", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "readlines", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"read file ' filename ' line by line into a list ` lines `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fig", "type": "identifier", "children": []}]}]}, {"value": "add_subplot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"return a subplot axes positioned by the grid definition ` 1,1,1 ` using matpotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "loads", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert json array ` array ` to python object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "pluto", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"extract dictionary ` d ` from list ` a ` where the value associated with the key ' name ' of dictionary ` d ` is equal to ' pluto '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "User", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "order_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-pet__age", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"django get first 10 records of model ` User ` ordered by criteria ' age ' of model ' pet '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list3", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "list2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"append the sum of each tuple pair in the grouped list ` list1 ` and list ` list2 ` elements to list ` list3 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Pow", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the sum of values to the power of their indices in a list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thelist", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"writing items in list ` thelist ` to file ` thefile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "loadtxt", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "somefile.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "delimiter", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"create 2d numpy array from the data provided in ' somefile.csv ' with each row in the file having same number of values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{}[SEP]%s[SEP]{}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python , format string \" {}[SEP]%s[SEP]{} \" to have ' foo ' and ' bar ' in the first and second positions"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "request", "type": "identifier", "children": []}]}]}, {"value": "urlretrieve", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://example.com/file.ext", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/path/to/dir/filename.ext", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"download to a directory ' /path/to/dir/filename.ext ' from source ' http://example.com/file.ext '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` Hello ` into a string of letters seperated by ` , `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d2", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d1", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d1", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d2", "type": "identifier", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"divide the value for each key ` k ` in dict ` d2 ` by the value for the same key ` k ` in dict ` d1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "rsplit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get everything after last slash in a url stored in variable ' url '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "abc(de)fg(123)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "abcdefg123[SEP]and[SEP]again[SEP]abcdefg123", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex ' abc(de)fg(123) ' on string ' abcdefg123[SEP]and[SEP]again[SEP]abcdefg123 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "factorize", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "float", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"factorize all string values in dataframe ` s ` into floats"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "search", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if any of the items in ` search ` appear in ` string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "expanduser", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "~user", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the real user home directory using python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace occurrences of two whitespaces or more with one whitespace '  ' in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` x ` into a flat list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.2f", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print float ` a ` with two decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "writer", "type": "identifier", "children": []}]}]}, {"value": "writerow", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to write a unicode csv in python 2.7"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "xaxis", "type": "identifier", "children": []}]}]}, {"value": "tick_top", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"move x-axis to the top of a plot ` ax `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Book", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "create", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "arg", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"update the fields in django model ` Book ` using dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"compare if each value in list ` a ` is less than respective index value in list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "commonprefix", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/usr/var", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/usr/var2/log", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the common prefix from comparing two absolute paths ' /usr/var ' and ' /usr/var2/log '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "linsolve", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Matrix", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "z", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sympy solve matrix of linear equations ` (([1, 1, 1, 1], [1, 1, 2, 3])) ` with variables ` (x, y, z) `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Delete", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "index", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"remove the element in list ` a ` at index ` index `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "savefig", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename.png", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dpi", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "300", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"save matplotlib graph to image file ` filename.png ` at a resolution of ` 300 dpi `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find_all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "div", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "class_", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "comment-", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"find all ` div ` tags whose classes has the value ` comment- ` in a beautiful soup object ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Name", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Destination", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert pandas group by object to multi-indexed dataframe with indices ' Name ' and ' Destination '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]\\s*[LINE]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match blank lines in ` s ` with regular expressions"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "SetComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "LoD", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a set containing all keys ' names from dictionary ` LoD `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "math", "type": "identifier", "children": []}]}]}, {"value": "cos", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "math", "type": "identifier", "children": []}]}]}, {"value": "radians", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert radians 1 to degrees"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\u003Cp\\u003E", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode-escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"un-escaping characters in a string with python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "product", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "repeat", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"create a list containing a four elements long tuples of permutations of binary values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterating over a dictionary ` d ` using for loops"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` lst ` in descending order based on the second item of each tuple in it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "P", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert ascii value ' P ' to binary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort string ` s ` in lexicographic order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate random integers between 0 and 9"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "headers", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "your-header-name", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"get http header of the key ' your-header-name ' in flask"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}]}]}]}	"get the dimensions of numpy array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "check_output", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "echo[SEP]\"foo\"", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"get the output of a subprocess command ` echo[SEP]\"foo\" ` in command line"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listofzeros", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"create a list ` listofzeros ` of ` n ` zeros"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0x{0:08X}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3652458", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert 3652458 to string represent a 32bit hex number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Test", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "actions__contains", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "fixed_key_1", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo2", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"filter a json from a key-value pair as ` {'fixed_key_1': 'foo2'} ` in django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "created:[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "ctime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getctime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the creation time of file ` file `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Date", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "DateValue", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"converting dictionary ` d ` into a dataframe ` pd ` with keys as data for column ' Date ' and the corresponding values as data for column ' DateValue '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "chain", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list2d", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a flat list from list of lists ` list2d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cwd", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "getcwd", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "the_list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "item", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` the_list ` by the length of string followed by alphabetical order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "sleep", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "60", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a 60 seconds time delay"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "query", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "index[SEP]<[SEP]@start_remove[SEP]or[SEP]index[SEP]>[SEP]@end_remove", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"drop rows of dataframe ` df ` whose index[SEP]<[SEP]@start_remove[SEP]or[SEP]index[SEP]>[SEP]@end_remove is smaller than the value of ` start_remove ` index[SEP]<[SEP]@start_remove[SEP]or[SEP]index[SEP]>[SEP]@end_remove bigger than the value of ` end_remove `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "identifier", "children": []}]}]}, {"value": "findAll", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "text", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Python[SEP]Jobs", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"beautifulsoup find string ' Python[SEP]Jobs ' in html body ` body `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?:^|_)", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "par", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\d+\\.\\d*)", "type": "string", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "dir", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find float number proceeding sub-string ` par ` in string ` dir `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace backslashes in string ` result ` with empty string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "i", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the indexes of the largest ` 2 ` values from a list of integers ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bin", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert decimal ` 8 ` to binary list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "sample", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get ` 3 ` unique items from a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile.csv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "sep", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "header", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"read csv file ' myfile.csv ' into array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "@", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"split string ` s ` by ' @ ' and get the first element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "in.", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "in.", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace string ' in. ' with ' in. ' in dataframe ` df ` column ' a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "just_date", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "dates", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "dt", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}]}]}]}	"get date from dataframe ` df ` column ' dates ' to column ' just_date '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}]}]}	"creating an empty list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitXor", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"create a set that is the exclusive or of [ 1 , 2 , 3 ] and [ 3 , 4 , 5 ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "files", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_number", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"sort list ` files ` based on variable ` file_number `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "42[SEP]0", "type": "string", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to split a string into integers in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dirname", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "dirnames", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "filenames", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "walk", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subdirname", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dirnames", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dirname", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "subdirname", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}, {"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filenames", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"list all files in directory \" . \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "colour", "type": "identifier", "children": []}]}]}, {"value": "value_counts", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "kind", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"plot a bar graph from the column ' color ' in the dataframe ' df '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\d|\\d,\\d\\)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "6,7)", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all digits in string ' 6,7) ' and put them to a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get value of first index of each element in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "things", "type": "identifier", "children": []}]}]}, {"value": "keys", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "things", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "weight", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"get a list of keys of dictionary ` things ` sorted by the value of nested dictionary key ' weight '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "time", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current time"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]um{{{0:.2g}}}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1000000000.0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format number 1000000000.0 using latex notation"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get modification time of file ` path `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if string ` b ` is a number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print list ` t ` into a table-like shape"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "executable", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the path of python executable under windows"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse a string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}]}]}]}	"set the value of cell ` ['x']['C'] ` equal to 10 in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?<=[\\.\\?!])", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` text ` with comma , question mark or exclamation by non-consuming regex using look-behind"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Bob[SEP]has[SEP]a[SEP]cat", "type": "string", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trimming Bob[SEP]has[SEP]a[SEP]cat string \" Bob[SEP]has[SEP]a[SEP]cat \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "insert", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "./path/to/your/modules/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert directory ' ./path/to/your/modules/ ' to current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "endswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "suffix", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}, {"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "suffix", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"remove a substring ` suffix ` from the end of string ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "firstChild", "type": "identifier", "children": []}]}]}, {"value": "nodeValue", "type": "identifier", "children": []}]}]}]}]}]}	"get value of first child of xml node ` name `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "fillna", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"replace nan values in a pandas data frame with the average of columns"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "terminate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"terminate process ` p `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".com", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove a substring \" .com \" from the end of string ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "gca", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "invert_yaxis", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse y-axis in pyplot"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "https://kennethreitz.com", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "verify", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"disable the certificate check in https requests for url ` https://kennethreitz.com `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "img", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Image", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "picture.jpg", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "img", "type": "identifier", "children": []}]}]}, {"value": "show", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open image ' picture.jpg '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getmtime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get modification time of file ` filename `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.2f[SEP]kg[SEP]=[SEP]%.2f[SEP]lb[SEP]=[SEP]%.2f[SEP]gal[SEP]=[SEP]%.2f[SEP]l", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "var1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var2", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var3", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var4", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format all floating variables ` var1 ` , ` var2 ` , ` var3 ` , ` var1 ` to print to two decimal places ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\d+(?=[^[]+$)", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all digits in a string ` s ` after a ' [ ' character"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "d", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "weight", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "factor", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"ordering a list of dictionaries ` mylist ` by elements ' weight ' and ' factor '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check if a given key ` key ` exists in dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "start", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "m", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "finditer", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?=tt)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ttt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"find indexes of all occurrences of a substring ` tt ` in a string ` ttt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "hand", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"remove false entries from a dictionary ` hand `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_tuples", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"to convert a list of tuples ` list_of_tuples ` into list of lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "help", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "modules", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of locally installed python modules"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "info", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Log[SEP]message", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "extra", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "app_name", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myapp", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"log info Log[SEP]message ' Log[SEP]message ' with attributes ` {'app_name': 'myapp'} `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "outfile", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itemlist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"writing items in list ` itemlist ` to file ` outfile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "globals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "vars", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "args", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"update the ` globals() ` dictionary with the contents of the ` vars(args) ` dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "to_datetime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "ID", "type": "identifier", "children": []}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a dataframe ` df ` 's column ` ID ` into datetime , after removing the first and last 3 letters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "db", "type": "identifier", "children": []}]}]}, {"value": "collection", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": []}, {"value": "values", "type": "expr", "children": []}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_id", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all records from collection ` collection ` without extracting mongo id ` _id `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "from_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "c:/~/trainSetRel3.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "sep", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"load a tsv file ` c:/~/trainSetRel3.txt ` into a pandas data frame"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"merge a list of dictionaries in list ` L ` into a single dict"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isinstance", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "el", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "el", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if any values in a list ` input_list ` is a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append the first element of array ` a ` to array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse a list ` array `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "rmdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete an empty directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "dict3", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "spam", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ham", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}	"create a dictionary ` {'spam': 5, 'ham': 6} ` into another dictionary ` d ` field ' dict3 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"check if all values in the columns of a numpy matrix ` a ` are same"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str_date", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%m/%d/%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "isoformat", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format a date object ` str_data ` into iso fomrat"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\(+as[SEP].*?\\)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all instances of parenthesesis containing text beginning with ` as ` from string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "attrgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "anniversary_score", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list ` your_list ` of class objects by their values for the attribute ` anniversary_score `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "realpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the canonical path of file ` path `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "meta", "type": "string", "children": []}]}, {"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "City", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "content", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"beautifulsoup get value associated with attribute ' content ' where attribute ' name ' is equal to ' City ' in tag ' meta ' in html parsed string ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "g", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"remove adjacent duplicate elements from a list ` [1, 2, 2, 3, 2, 2, 4] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "colorbar", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "im", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ax", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"add a colorbar to plot ` plt ` using image ` im ` on axes ` ax `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print the truth value of ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"function to get the size of object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"summing the second item in a list of lists of lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "to_datetime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "format", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%d%b%Y", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"convert date strings in pandas dataframe column ` df['date'] ` to pandas timestamps using the format ' %d%b%Y '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-16-le", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print line ` line ` from text file with ' utf-16-le ' format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "$^", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regular expression match nothing"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"gets the ` n ` th-to-last element in list ` some_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "TASKKILL[SEP]/F[SEP]/IM[SEP]firefox.exe", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute os command '' TASKKILL[SEP]/F[SEP]/IM[SEP]firefox.exe ''"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "con", "type": "identifier", "children": []}]}]}, {"value": "commit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"mysql commit current transaction"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum the product of elements of two lists named ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}]}]}	"creating an empty list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_nums", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sum a list of numbers ` list_of_nums `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key_columns", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "size", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count number of rows in a group ` key_columns ` in pandas groupby object ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a dictionary with keys from one list ` keys ` and values from other list ` data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse a utf-8 string ' a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "rfind", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"remove first and last lines of string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "workbook", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "xlsxwriter", "type": "identifier", "children": []}]}]}, {"value": "Workbook", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C:/Users/Steven/Documents/demo.xlsx", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"save xlsxwriter file to ' C:/Users/Steven/Documents/demo.xlsx ' path"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "pivot_table", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "columns", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "time", "type": "identifier", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "values", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Close", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"transform time series ` df ` into a pivot table aggregated by column ' Close ' using column ` df.index.date ` as index and values of column ` df.index.time ` as columns"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "count", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "conv", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print variable ` count ` and variable ` conv ` with space string '  ' in between"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "User", "type": "identifier", "children": []}]}]}, {"value": "_fields", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "required", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"get a list of all fields in class ` User ` that are marked ` required `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a list from a pandas dataframe ` df ` with the column name and column values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dateutil", "type": "identifier", "children": []}]}]}, {"value": "parser", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2013/09/11[SEP]00:17[SEP]+0900", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set utc offset by 9 hrs ahead for date ' 2013/09/11[SEP]00:17[SEP]+0900 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "figure", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "figsize", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"change figure size to 3 by 4 in matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Total[SEP]score[SEP]for", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "name", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "is", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "score", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print string including multiple variables ` name ` and ` Total[SEP]score[SEP]for `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "food_colors", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get total number of values in a nested dictionary ` food_colors `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listofdict", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list of dictionaries ` listofdict into a dictionary of dictionaries"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list ` s ` by first and second attributes"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "AugAssign", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "results", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "each", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "each", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "listdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "folder", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "each", "type": "identifier", "children": []}]}]}, {"value": "endswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".c", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"find all files with extension ' .c ' in directory ` folder `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "switch_to_frame", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "frameName", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"selenium webdriver switch to frame ' frameName '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list of tuples to multiple lists in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "updated", "type": "string", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "None", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"filter a dictionary ` d ` to remove keys with value ' None ' and replace other values with ' updated '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%0a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unquote a urlencoded unicode string ' %0a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "it", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"iterate over a dictionary ` d ` in sorted order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "iloc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "8", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get mean of columns ` 2, 5, 6, 7, 8 ` for all rows in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "match", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[a-zA-Z][\\w-]*\\Z", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "A[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex ' [a-zA-Z][\\w-]*\\Z ' on string ' A[LINE] '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_b", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create a list ` result ` containing elements form list ` list_a ` if first element of list ` list_a ` is in list ` list_b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "item", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of dictionary values by ' date ' in reverse order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "somekey", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "someotherkey", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "somekeyggg", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if dictionary ` d ` contains all keys in list ` ['somekey', 'someotherkey', 'somekeyggg'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find_all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "div", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "class_", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "crBlock", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"using beautifulsoup to select div blocks within html ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "screencapture[SEP]screen.png", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"take screenshot ' screencapture[SEP]screen.png ' on mac os x"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "head", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "status_code", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "200", "type": "object", "children": []}]}]}]}]}]}]}]}	"check the status code of url ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "rfind", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "&", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"cut a string using delimiter ' & '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split strings in list ` l ` on the first occurring tab ` \t ` and enter only the first resulting substring in a new list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "concatenate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ravel", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate a list of numpy arrays ` input_list ` together into a flattened list of values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"check if elements in list ` my_list ` are coherent in order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "setdefaultencoding", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set the default encoding to ' utf-8 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%m-%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list of date strings ' d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydic", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "o", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "name", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"update the dictionary ` mydic ` with dynamic keys ` i ` and values with key ' name ' from dictionary ` o `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "somestring", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace carriage return in string ` somestring ` with empty string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "g", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "g", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "itertools", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "test", "type": "identifier", "children": []}]}, {"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "partition", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"how to group similar items in a list ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extend dictionary ` a ` with key/value pairs of dictionary ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "disable", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "CRITICAL", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"disable logging while running unit tests in python django"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "e", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sum elements of tuple ` b ` to their respective elements of each tuple in list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hello[SEP]{name},[SEP]how[SEP]are[SEP]you[SEP]{name},[SEP]welcome[SEP]{name}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "name", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "john", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"format string ` hello[SEP]{name},[SEP]how[SEP]are[SEP]you[SEP]{name},[SEP]welcome[SEP]{name} ` to be interspersed by ` name ` three times , specifying the value as ` john ` only once"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort dict by value python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "copyfile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "src", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "dst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"copy a file from ` src ` to ` dst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "G", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the first element of each tuple from a list of tuples ` G `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"filter dictionary ` d ` to have items with value greater than 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "key1", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}	"lookup dictionary key ` key1 ` in django template ` json `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\.com$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove a substring \" .com \" from the end of string ` url `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"check if key ' a ' in ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "dstack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "meshgrid", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"cartesian product of ` x ` and ` y ` array points into single array of 2d points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello,[SEP]{0},[SEP]how[SEP]do[SEP]you[SEP]do?", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Enter[SEP]name[SEP]here:", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get user input using message ' Enter[SEP]name[SEP]here: ' and insert it to the first placeholder in string ' Hello,[SEP]{0},[SEP]how[SEP]do[SEP]you[SEP]do? '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "socket", "type": "identifier", "children": []}]}]}, {"value": "inet_ntoa", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "pack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "!L", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2130706433", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a number 2130706433 to ip string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "set_title", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "$%s[SEP]\\times[SEP]10^{%s}$", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "3.5", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "+20", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format float ` 3.5e+20 ` to ` $3.5 $%s[SEP]\\times[SEP]10^{%s}$ 10^{20}$ ` and set as title of matplotlib plot ` ax `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "img", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Image", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "picture.jpg", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Img", "type": "identifier", "children": []}]}]}, {"value": "show", "type": "identifier", "children": []}]}]}]}]}]}	"open image \" picture.jpg \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?m)^[^\\S[LINE]]+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a[LINE][SEP]b[LINE][SEP]c[LINE]d[SEP]e", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace white spaces in string ' a[LINE][SEP]b[LINE][SEP]c[LINE]d[SEP]e  a[LINE][SEP]b[LINE][SEP]c[LINE]d[SEP]e ' with empty string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.3f", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3.1415", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"printing numbers rounding up to third decimal place"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\d+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract digits in a simple way from a python string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\W+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Words,[SEP]words,[SEP]words.", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' Words,[SEP]words,[SEP]words. ' on punctuation"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pid", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "getpid", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "py", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "psutil", "type": "identifier", "children": []}]}]}, {"value": "Process", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pid", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "memoryUse", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "py", "type": "identifier", "children": []}]}]}, {"value": "memory_info", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2.0", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Pow", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "30", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get current ram usage of current program"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a list of all values in column ` a ` in pandas data frame ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "FloorDiv", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list of integers from 1 to 5 with each value duplicated"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2011221", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y%W%w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert string ' 2011221 ' into a datetime object using format ' %Y%W%w '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "k", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort keys of dictionary ' d ' based on their values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current date and time"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "loads", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "sample.json", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8-sig", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"load json file ' sample.json ' with utf-8 bom header"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "HOME", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"access environment variable \" HOME \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "stackoverflow", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "google", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "issubset", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sites", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if key ' stackoverflow ' and key ' google ' are presented in dictionary ` sites `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "translate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "maketrans", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "!@#$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove characters in ' !@#$ ' from a string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "BrandName", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ABC", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "AB", "type": "string", "children": []}]}]}]}, {"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replacing ' ABC ' and ' AB ' values in column ' BrandName ' of dataframe ` df ` with ' A '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split string with comma ( , ) and remove whitespace from a string ' my_string '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "einsum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ij,kj->jik", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"outer product of each column of a 2d ` X ` array to form a 3d array ` X `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"make a row-by-row copy ` y ` of array ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the list with the highest sum value in list ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "result", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "db", "type": "identifier", "children": []}]}]}, {"value": "engine", "type": "identifier", "children": []}]}]}, {"value": "execute", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<sql[SEP]here>", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute raw sql queue ' <sql[SEP]here> ' in database ` db ` in sqlalchemy-flask app"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\bis\\b", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "your_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python regular expression match whole word"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"zip keys with individual values in lists ` k ` and ` v `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "setp", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "legend", "type": "identifier", "children": []}]}]}, {"value": "get_title", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "fontsize", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "xx-small", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"set font size of axis legend of plot ` plt ` to ' xx-small '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sorting a list of tuples ` lst ` by the sum of the second elements onwards , and third element of the tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Company", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "date", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "inplace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"set multi index on columns ' Company ' and ' date ' of data frame ` df ` in pandas ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",[SEP],", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mytuple", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print each first value from a list of tuples ` mytuple ` with string formatting"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "shutil", "type": "identifier", "children": []}]}]}, {"value": "rmtree", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ignore_errors", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "onerror", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"recursively delete all contents in directory ` path `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` str1 ` on one or more spaces with a regular expression"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "deadbeef", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string ' deadbeef ' to decimal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "col1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"drop a single subcolumn ' a ' in column ' col1 ' from a dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "newcontents", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "contents", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "e", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace character ' a ' with character ' e ' and character ' s ' with character ' 3 ' in file ` contents `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "here[SEP]is[SEP]your[SEP]checkmark:", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u2713", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print ' here[SEP]is[SEP]your[SEP]checkmark: ' plus unicode character u ' \u2713 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "permutations", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a list of all unique pairs of integers in ` range(9) `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "l+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "l", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "lollll", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write a regex statement to match ' lol ' to ' lolllll ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cleaned_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "IsNot", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thing", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"delete an item ` thing ` in a list ` some_list ` if it exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_function", "type": "identifier", "children": []}]}]}, {"value": "__name__", "type": "identifier", "children": []}]}]}]}]}]}	"how to get a function name as a string in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenate key/value pairs in dictionary ` a ` with string ' , ' into a single string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "strings", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "str", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".*%", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of strings ` strings ` based on regex match"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "mktime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d/%m/%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "timetuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert date string ` s ` in format pattern ' %d/%m/%Y ' into a timestamp"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort dictionary ` d ` by value in ascending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hello[SEP]world", "type": "string", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"reverse a string ' hello[SEP]world '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{}_{}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a string with string formatting from dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fn", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"delete all elements from a list ` x ` if a function ` fn ` taking value as parameter returns ` 0 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "idx", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "agg", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mean", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "std", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"apply functions ` mean ` and ` std ` to each column in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "version", "type": "identifier", "children": []}]}]}]}]}]}	"check python version"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "sort_values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ascending", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}, {"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort dataframe ` df ` based on column ' a ' in ascending and column ' b ' in descending"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "User", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "filter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "userprofile__level__gte", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"filter ` Users ` by field ` userprofile ` with level greater than or equal to ` 0 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a hex string ` x ` to string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "k", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort a dictionary ` d ` by length of its values and print as string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^((?:(?!cat).)*cat(?:(?!cat).)*)cat", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1Bull", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find and replace 2nd occurrence of word ' cat ' by ' Bull ' in a sentence ' s '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "setStyleSheet", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "QPushButton[SEP]{background-color:[SEP]#A3C1DA;[SEP]color:[SEP]red;}", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set text color as ` red ` and background color as ` #A3C1DA ` in qpushbutton"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "5+6", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a list with the characters of a string ` 5+6 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "dir[SEP]c:\\", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute a command in the command prompt to list directory contents of the c drive ` c : \\\\ '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"check if 3 is inside list ` [1, 2, 3] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "app", "type": "identifier", "children": []}]}]}, {"value": "run", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "host", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "192.168.0.58", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "port", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "9000", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "debug", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"run app ` app ` on host ' 192.168.0.58 ' and port 9000 in flask"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "keys", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"combine two sequences into a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cp1252", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cp1252", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"normalize string ` str ` from ' cp1252 ' code to ' utf-8 ' code"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "getctime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path_to_file", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the creation time of file ` path_to_file `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www.google.com.br", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"navigate to webpage given by url ` http://www.python.org ` using selenium"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}]}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"filter duplicate entries w.r.t . value in ' id ' from a list of dictionaries ' L '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plt", "type": "identifier", "children": []}]}]}, {"value": "savefig", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "test.png", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "bbox_inches", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "tight", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"remove white space padding around a saved image ` test.png ` in matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_name", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<check_box_name>", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "is_selected", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if a checkbox is checked in selenium python webdriver"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ";[SEP]|,", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` str ` with delimiter ' ;[SEP]|, ' or delimiter ' , '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "B", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create a numpy array containing elements of array ` A ` as pointed to by index in array ` B `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert hex string ` s ` to decimal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "the_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "k", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "_", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list of strings in list ` the_list ` by integer suffix"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "environ", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print all environment variables"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "grouper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"slice list ` [1, 2, 3, 4, 5, 6, 7] ` into lists of two elements each"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert utf-8 string ` s ` to lowercase"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "func", "type": "identifier", "children": []}]}]}, {"value": "__name__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the name of function ` func ` as a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all items from a dictionary ` d ` where the values are less than ` 1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\p{P}+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"substitute occurrences of unicode regex pattern u ' \\p{P}+ ' with empty string '  ' in string ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "isfile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/does/not/exist", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether a file \" /does/not/exist \" exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "unique", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"return values for column ` C ` after group by on column ` A ` and ` B ` in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ftp", "type": "identifier", "children": []}]}]}, {"value": "retrbinary", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "RETR[SEP]%s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to download a file via ftp with python ftplib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Exception", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "I[SEP]know[SEP]python!", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cause", "type": "expr", "children": []}]}]}]}	"manually throw an exception \" I[SEP]know[SEP]python! \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u0001ABC", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print string \" ABC \" as hex literal"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "mktime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dt", "type": "identifier", "children": []}]}]}, {"value": "timetuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dt", "type": "identifier", "children": []}]}]}, {"value": "microsecond", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1000000.0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"convert a datetime object ` dt ` to microtime"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "matching", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_list", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "abc", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get a list of items from the list ` some_list ` that contain string ' abc '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "realpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get canonical path of the filename ` path `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json_data", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "loads", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"load a json data ` json_string ` into variable ` json_data `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "timestamp", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dt", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1970", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "total_seconds", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert datetime.date ` dt ` to utc timestamp"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort a list of strings ` list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\[([^\\[\\]]+)\\]", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a string ` a ` of letters embedded in squared brackets into embedded lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse string ` a ` to float"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "BeautifulSoup", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "response", "type": "identifier", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse utf-8 encoded html response ` response ` to beautifulsoup object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "findAll", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "id", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "para$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"beautifulsoup find a tag whose id ends with string ' para '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "importlib", "type": "identifier", "children": []}]}]}, {"value": "import_module", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a.b.c", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"import a module ' a.b.c ' with importlib.import_module in python 2"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}	"check if all elements in list ` mylist ` are the same"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert generator object to a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p1", "type": "identifier", "children": []}]}]}, {"value": "communicate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get output from process ` p1 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the ascii value of a character ' a ' as an int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"creating an empty list ` l `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "to_dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert pandas dataframe ` df ` with fields ' id ' , ' value ' to dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "session", "type": "identifier", "children": []}]}]}, {"value": "query", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Tag", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "distinct", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Tag", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Tag", "type": "identifier", "children": []}]}]}, {"value": "name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "count", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sqlalchemy count the number of rows with distinct values in column ` name ` of table ` Tag `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"lowercase a python dataframe string in column ' x ' if it has missing values in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listy", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` listy ` containing 3 empty lists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "row", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "C", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"use operations like max/min within a row to a dataframe ' d ' in pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\w+(?:-\\w+)+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python regex for hyphenated words in ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "strg", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "2", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "3", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "4", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "5", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "6", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "7", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "8", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "9", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if string ` strg ` starts with any of the elements in list ( ' 0 ' , ' 1 ' , ' 2 ' , ' 3 ' , ' 4 ' , ' 5 ' , ' 6 ' , ' 7 ' , ' 8 ' , ' 9 ' )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "api\\('(.*?)'", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "api('randomkey123xyz987',[SEP]'key',[SEP]'text')", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get a string ` randomkey123xyz987 ` between two substrings in a string ` api('randomkey123xyz987',[SEP]'key',[SEP]'text') ` using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "fromstring", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u0000\u0000\u0080?\u0000\u0000\u0000@\u0000\u0000@@\u0000\u0000\u0080@", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "dtype", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ">f4", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"convert binary string to numpy array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "li1", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "startswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b.", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"what is the best way to sort list with custom sorting parameters in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.2f", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print float ` a ` with two decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "D", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Light", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"find all the items from a dictionary ` D ` if the key contains the string ` Light `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` list_ ` based on first element of each tuple and by the length of the second element of each tuple"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Tue,[SEP]22[SEP]Nov[SEP]2011[SEP]06:00:00[SEP]GMT", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%a,[SEP]%d[SEP]%b[SEP]%Y[SEP]%H:%M:%S[SEP]%Z", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert js date object ' Tue,[SEP]22[SEP]Nov[SEP]2011[SEP]06:00:00[SEP]GMT ' to python datetime"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse a string ` a ` by 2 characters at a time"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mixed", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"normalize line ends in a string ' mixed '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}]}]}	"empty a list ` lst `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "root", "type": "identifier", "children": []}]}]}, {"value": "destroy", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"close the window in tkinter"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "#(\\w+)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "http://example.org/#comments", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pars a string ' http://example.org/#comments ' to extract hashtags into an array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "N", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the dimensions of array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "yourdatetime", "type": "identifier", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "today", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"check if date ` yourdatetime ` is equal to today 's date"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "some_string", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"reverse a string ` some_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[\\$,]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "regex", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "astype", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove dollar sign ' $ ' from second to last column data in dataframe ' df ' and convert the data into floats"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\*+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "*", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace repeated instances of \" * \" with a single instance of \" * \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "car", "type": "identifier", "children": []}]}]}, {"value": "date_of_manufacture", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"get the date object ` date_of_manufacture ` of object ` car ` in string format ' %Y-%m-%d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "ma", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "tile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "mask", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Invert", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cond", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "argmax", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"find the index of the maximum value in the array ` arr ` where the boolean condition in array ` cond ` is true"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "now", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%H:%M:%S", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"display current time"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rows", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the first element of each tuple in a list ` rows `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "stru", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a ` utf-8 ` encoded string ` stru ` into a list of characters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tuple", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"input a tuple of integers from user"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "scatter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "s", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "500", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "color", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "green", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "marker", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "h", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"matplotlib change marker size to 500"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` lst ` with positives coming before negatives with values sorted respectively"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "einsum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "...j,...j->...", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "vf", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "vf", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the magnitude ( length ) squared of a vector ` vf ` field"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hello[SEP]there[SEP]%(5)s", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "5", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "you", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"format string with dict ` {'5': 'you'} ` with integer keys"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"creating a 5x6 matrix filled with ` None ` and save it as ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "vstack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "meshgrid", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x_p", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y_p", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "z_p", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "T", "type": "identifier", "children": []}]}]}]}]}]}	"creating a numpy array of 3d coordinates from three 1d arrays ` x_p ` , ` y_p ` and ` z_p `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "abs", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myNumber", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get number in list ` myList ` closest in value to number ` myNumber `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "index", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert dataframe ` df ` to list of dictionaries including the index values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"iterating over a dictionary ` d ` using for loops"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^(.+)(?:[LINE]|[LINE]?)((?:(?:[LINE]|[LINE]?).+)+)", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "MULTILINE", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a regular expression that matches the pattern ' ^(.+)(?:[LINE]|[LINE]?)((?:(?:[LINE]|[LINE]?).+)+) ' over multiple lines of text"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\"Hello,[LINE]world!\"", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "string_escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"un-escape a backslash-escaped string in ` Hello,[LINE]world! `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string ` s ` containing hex bytes to a hex string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/path/to/main_folder", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append a path ` /path/to/main_folder ` in system path"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "finditer", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[A-Za-z']+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split string ` string ` on whitespaces using a generator"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Name:[SEP]{0[person.name]}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "person.name", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Joe", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"python : dots in the name of variable in a format string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\xc3\\x85\u3042", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode string \" \\xc3\\x85\u00e3\u0081\u0082 \" to bytes"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "math", "type": "identifier", "children": []}]}]}, {"value": "isnan", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "inf", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get a minimum value from a list of tuples ` list ` with values of type ` string ` and ` float ` with nan"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "s", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"check if string ' x ' is in list ` [ ' x ' , 'd ' , ' a ' , 's ' , 'd ' , 's ' ] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "in1d", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "nonzero", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get the indices in array ` b ` of each element appearing in array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"zip lists in a list [ [ 1 , 2 ] , [ 3 , 4 ] , [ 5 , 6 ] ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"merge two lists ` a ` and ` b ` into a single list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "d", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get unique values from the list ` ['a', 'b', 'c', 'd'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_string", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get digits in string ` my_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "var1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "var2", "type": "identifier", "children": []}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Enter[SEP]two[SEP]numbers[SEP]here:", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"assign values to Enter[SEP]two[SEP]numbers[SEP]here: variables , ` var1 ` and ` var2 ` from user input response to ` 'Enter Enter[SEP]two[SEP]numbers[SEP]here: ` split on whitespace"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "str", "type": "identifier", "children": []}]}]}, {"value": "contains", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if character ' - ' exists in a dataframe ` df ` cell ' a '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mv[SEP]/home/somedir/subdir/*[SEP]somedir/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"how to use the mv[SEP]/home/somedir/subdir/*[SEP]somedir/ command in python with subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tex", "type": "identifier", "children": []}]}]}, {"value": "delete", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "1.0", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "END", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"clear the textbox ` text ` in tkinter"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thelist", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thefile", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%s[LINE]", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"writing items in list ` thelist ` to file ` thefile `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "json", "type": "identifier", "children": []}]}]}, {"value": "dumps", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "your_data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "ensure_ascii", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"convert python dictionary ` your_data ` to json array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ignore", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf-8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete every non ` utf-8 ` characters from a string ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "plot", "type": "identifier", "children": []}]}]}, {"value": "legend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "loc", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "prop", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "size", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"change legend font size with matplotlib.pyplot to 6"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(ddd)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "aaa[SEP]bbb[SEP]ccc[SEP]ddd[SEP]eee[SEP]fff", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"search and split string ' aaa[SEP]bbb[SEP]ccc[SEP]ddd[SEP]eee[SEP]fff ' by delimiter ' (ddd) '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "text", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "My[SEP]keywords", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "parent", "type": "identifier", "children": []}]}]}, {"value": "text", "type": "identifier", "children": []}]}]}]}]}]}	"get the context of a search by keyword ' keywords ' in beautifulsoup ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "locale", "type": "identifier", "children": []}]}]}, {"value": "setlocale", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "locale", "type": "identifier", "children": []}]}]}, {"value": "LC_ALL", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "en_US", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "locale", "type": "identifier", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%d", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1255000", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "grouping", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"print number 1255000 as thousands separators"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iterable", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a dictionary ` d ` from list of key value pairs ` iterable `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "user", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "models", "type": "identifier", "children": []}]}]}, {"value": "ForeignKey", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "User", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "unique", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"django create a foreign key column ` user ` and link it to table ' User '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Word[SEP]to[SEP]Split", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` Word[SEP]to[SEP]Split ` into a list of characters"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change a string of integers ` x ` separated by spaces to a list of int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "World", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' World ' in ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bash", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "-c", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": ".[SEP]foo.sh;[SEP]go", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"can a python script execute a function inside a bash script ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "wait", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"wait for shell command ` p ` evoked by subprocess.popen to complete"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "ix", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "A", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "Str", "type": "expr", "children": [{"value": "B", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "nan", "type": "identifier", "children": []}]}]}]}]}]}	"set the value in column ' B ' to nan if the corresponding value in column ' A ' is equal to 0 in pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get line count of file ' myfile.txt '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "info", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date={}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "date", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"log message of level ' info ' with value of ` date ` in the message"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "iloc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "r_", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "15", "type": "object", "children": []}]}]}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "17", "type": "object", "children": []}]}]}]}, {"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "50", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"select multiple ranges of columns 1-10 , 15 , 17 , and 50-100 in pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ex", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "agg", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "get_level_values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "nunique", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count unique index values in column ' A ' in pandas dataframe ` ex `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list_of_lists", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert a list of lists ` list_of_lists ` into a list of strings keeping empty sub-lists as empty string '  '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "updated", "type": "string", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Is", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"filter a dictionary ` d ` to remove keys with value none and replace other values with ' updated '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "grep[SEP]-r[SEP]PASSED[SEP]*.log[SEP]|[SEP]sort[SEP]-u[SEP]|[SEP]wc[SEP]-l", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"execute shell command ' grep[SEP]-r[SEP]PASSED[SEP]*.log[SEP]|[SEP]sort[SEP]-u[SEP]|[SEP]wc[SEP]-l ' with a grep[SEP]-r[SEP]PASSED[SEP]*.log[SEP]|[SEP]sort[SEP]-u[SEP]|[SEP]wc[SEP]-l pipe in it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "chdir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".\\chapter3", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"change current working directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "getcwd", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the path of the current python module"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ValueError", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "A[SEP]very[SEP]specific[SEP]bad[SEP]thing[SEP]happened", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cause", "type": "expr", "children": []}]}]}]}	"throw a value error with message ' A[SEP]very[SEP]specific[SEP]bad[SEP]thing[SEP]happened ' , ' foo ' , ' bar ' , ' baz '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chosen_value", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of pairs in dictionary ` d ` whose value equal to ` chosen_value `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ord", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\u3042", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the ascii value of a character u ' \u00e3\u0081\u0082 ' as an int"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "M\\N{AMPERSAND}M\\N{APOSTROPHE}s", "type": "string", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "unicode-escape", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"produce a string that is suitable as unicode literal from string ' M\\N{AMPERSAND}M\\N{APOSTROPHE}s '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "webbrowser", "type": "identifier", "children": []}]}]}, {"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://somesite.com/adminpanel/index.php", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open the login site ' http://somesite.com/adminpanel/index.php ' in the browser"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Starred", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split dictionary of lists into list of dictionaries"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listD", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "listD", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get only first element in each of the innermost of the multidimensional list ` listD `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "total", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` s ` into float values and write sum to ` total `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.2f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "13.95", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"limit float 13.949999999999999 to two decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Import", "type": "stmt", "children": [{"value": "names", "type": "alias", "children": [{"value": "alias", "type": "alias", "children": [{"value": "platform", "type": "identifier", "children": []}, {"value": "asname", "type": "identifier", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "platform", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get os name"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "apply", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "isnull", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Gt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of rows with missing values in a pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "globals", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create dictionary from list of variables ' foo ' and ' bar ' already defined"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^(.+)[LINE]((?:[LINE].+)+)", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "MULTILINE", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"regular expression \" ^(.+)[LINE]((?:[LINE].+)+) \" matching a multiline block of text"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hello", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string into a list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"merge lists ` a ` and ` a ` into a list of tuples"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "read_json", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "elevations", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read json ` elevations ` to pandas dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "_data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reshape", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "size", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "T", "type": "identifier", "children": []}]}]}]}]}]}	"convert matlab engine array ` x ` to a numpy ndarray"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse string ` s ` to int when string contains a number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "//option[@value='", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "state", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "']", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "click", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find a tag ` option ` whose ` value ` attribute is ` state ` in selenium"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "2009/05/13[SEP]19:19:30[SEP]-0400", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y/%m/%d[SEP]%H:%M:%S[SEP]%z", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse date string ' 2009/05/13[SEP]19:19:30[SEP]-0400 ' using format ' %Y/%m/%d[SEP]%H:%M:%S[SEP]%z '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "isfile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/etc/password.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether a file \" /etc/password.txt \" exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2010", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "31", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "relativedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "months", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "UAdd", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get the date 2 months from today"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Y", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "X", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sorting list ' X ' based on values from another list ' Y '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "connection", "type": "identifier", "children": []}]}]}, {"value": "send", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "HTTP/1.0[SEP]200[SEP]established[LINE][LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"send data ' HTTP/1.0[SEP]200[SEP]established[LINE][LINE] OK[LINE][LINE] ' to socket ` connection `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^a-zA-Z]*", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "your[SEP]string", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract only alphabetic characters from a your[SEP]string ` your[SEP]string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "row", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "A", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get all the second values from a list of lists ` A `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a*?bc*?", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "aabcc", "type": "string", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "DOTALL", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match regex pattern ' a*?bc*? ' on string ' aabcc ' with dotall enabled"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".{20}(.mkv)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "unique12345678901234567890.mkv", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove 20 symbols in front of ' . ' in string ' unique12345678901234567890.mkv '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "match", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(.*?[.?!](?:\\s+.*?[.?!]){0,1})", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "phrase", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "group", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"extract first two substrings in string ` phrase ` that end in ` . ` , ` ? ` or ` ! `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "f", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "pack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "f", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0.00582811585976", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert double 0.00582811585976 to float"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "parent_dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Lt", "type": "cmpop", "children": []}, {"value": "Lt", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"fetch all elements in a dictionary ` parent_dict ` , falling between two keys 2 and 4"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "success", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"count the number of true values associated with key ' success ' in dictionary ` d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "br", "type": "identifier", "children": []}]}]}, {"value": "select_form", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "nr", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"select a first form with no name in mechanize"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "one", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "two", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "two", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "c", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"select only specific columns ' a ' and ' c ' from a dataframe ' data ' with multiindex columns"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of sub string ' a ' in string ` str `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pair", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list by appending components from list ` a ` and reversed list ` b ` interchangeably"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "isdigit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"function to check if a string is a number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split string ` s ` to list conversion by ' , '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert dictionary ` dict ` into a flat list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` l ` to dictionary having each two adjacent elements as key/value pair"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "final_choices", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "another_choice", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_choices", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"add a tuple with value ` another_choice ` to a tuple ` my_choices `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "input", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of of elements resulting from splitting user input by commas and stripping white space from each resulting string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dir", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all object attributes of an object"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[\u0000-\u007f]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\u00a3\u20ac\u00a3\u20ac", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"strip all non-ascii characters from a unicode string , ` \u00a3\u20ac\u00a3\u20ac `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "shape", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get second array column length of array ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "alist", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "foo", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort list ` alist ` in ascending order based on each of its elements ' attribute ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "isfile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/etc", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether a file \" /etc \" exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "9", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "12", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"generate a random 12-digit number"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dic", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Fisher", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort dictionary of dictionaries ` dic ` according to the key ' Fisher '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "nodes", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Node", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "cols", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rows", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a 2d array of ` Node ` objects with dimensions ` cols ` columns and ` rows ` rows"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"concatenating values in list ` L ` to a string , separate by space"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "f", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "words.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rU", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open the file ' words.txt ' in ' rU ' mode"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "i", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of dictionaries ` a ` by dictionary values in descending order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "6.005", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 6.005 up to 2 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "filename", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "w", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "close", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"erase the contents of a file ` filename `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "randomList", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "random", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "_", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create list ` randomList ` with 10 random floating point numbers between 0.0 and 1.0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "items", "type": "identifier", "children": []}]}]}, {"value": "__len__", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the size of object ` items `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "extend", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "self", "type": "identifier", "children": []}]}]}, {"value": "myList", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"fill list ` myList ` with 4 0 's"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello[LINE]", "type": "string", "children": []}]}]}, {"value": "strip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"trimming a string \" Hello[LINE] \" by space"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Value[SEP]is[SEP]\"", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "value", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\"", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print variable ` value ` without spaces"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "apple", "type": "identifier", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "iso-8859-1", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert string ` apple ` from iso-8859-1/latin1 to utf-8"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "ex\u00e1mple", "type": "string", "children": []}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print unicode string ` ex\u00e1mple ` in uppercase"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sys", "type": "identifier", "children": []}]}]}, {"value": "exit", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"exit script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"convert values in dictionary ` d ` into integers"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "pivot_table", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "rows", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "X", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "cols", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "X2", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"produce a pivot table as dataframe using column ' Y ' in datafram ` df ` to form the axes of the resulting dataframe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "\\d+", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "string1", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get multiple integer values from a string ' string1 '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split 1d array ` a ` into 2d array at the last element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dateobj", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datestr", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%Y-%m-%d", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"parse string ` datestr ` into a datetime object using format pattern ' %Y-%m-%d '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "findall", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(?=(a.*?a))", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a[SEP]1[SEP]a[SEP]2[SEP]a[SEP]3[SEP]a[SEP]4[SEP]a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all matching patterns ' a.*?a ' from a[SEP]1[SEP]a[SEP]2[SEP]a[SEP]3[SEP]a[SEP]4[SEP]a string ' a[SEP]1[SEP]a[SEP]2[SEP]a[SEP]3[SEP]a[SEP]4[SEP]a ' ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "match", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[:;][)(](?![)(])", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"match the pattern ' [:;][)(](?![)(]) ' to the string ` str `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[[SEP].]", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a[SEP]b.c", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ' a[SEP]b.c ' on space \"  \" and dot character \" . \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Profile", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "p", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "p", "type": "identifier", "children": []}]}]}, {"value": "reputation", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort objects in model ` Profile ` based on theirs ` reputation ` attribute"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "insert", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"insert a list ` k ` at the front of list ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Content", "type": "identifier", "children": []}]}]}, {"value": "objects", "type": "identifier", "children": []}]}]}, {"value": "all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "order_by", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "?", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "100", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"in django , select 100 random records from the database ` Content.objects `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "w", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "w", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "Not", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "search", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[aeiou]{2}", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "w", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"create a list containing words that contain vowel letter followed by the same vowel in file ' file.text '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "translate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "value", "type": "singleton", "children": []}]}, {"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string", "type": "identifier", "children": []}]}]}, {"value": "punctuation", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"strip punctuation from string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([aeiou]):(([aeiou][^aeiou]*){3})$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1\\2", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "word", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove colon character surrounded by vowels letters in string ` word `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "DataFrame", "type": "identifier", "children": []}]}]}, {"value": "from_dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "nvalues", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "y3", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create a pandas dataframe ` df ` from elements of a dictionary ` nvalues `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current time in string format"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "key1", "type": "string", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"check if key ' key1 ' in ` dict `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "full_path", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "realpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "__file__", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the full path of current directory"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s1", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pd", "type": "identifier", "children": []}]}]}, {"value": "merge", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "df2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "how", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "inner", "type": "string", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "on", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "user_id", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"join data of dataframe ` df1 ` with data in dataframe ` df2 ` based on similar values of column ' user_id ' in both dataframes"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"list of lists into numpy array"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_file", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Path", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/path/to/file", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_file", "type": "identifier", "children": []}]}]}, {"value": "is_file", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"check whether file \" /path/to/file \" exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "intersection", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"compare two lists in python ` a ` and ` b ` and return matches"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "rename", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Joe[SEP]Blow", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "Blow,[SEP]Joe", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"rename a folder ` Joe[SEP]Blow ` to ` Blow,[SEP]Joe Joe[SEP]Blow `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "=", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert string ` x'  to dictionary splitted by ` = ` using list comprehension"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "type", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}]}]}]}]}]}	"check if ` x ` is an integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "frozenset", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"remove duplicates from a list of sets ' L '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "car", "type": "identifier", "children": []}]}]}, {"value": "date_of_manufacture", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"jinja parse datetime object ` car.date_of_manufacture ` to use format pattern ` datetime `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "psutil", "type": "identifier", "children": []}]}]}, {"value": "cpu_percent", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "psutil", "type": "identifier", "children": []}]}]}, {"value": "virtual_memory", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get current cpu and ram usage"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "struct", "type": "identifier", "children": []}]}]}, {"value": "unpack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "h", "type": "string", "children": []}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pS", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"unpack first and second bytes of byte string ` pS ` into integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "encode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"encode string ` data ` as ` hex `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "count", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "n", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "l1", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "l2", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"update a list ` l1 ` dictionaries with a key ` count ` and value from list ` l2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "new_list", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "old_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"copy list ` old_list ` as ` new_list `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "unsorted", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "element", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "element", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"sort a list of tuples ' unsorted ' based on two elements , second and third"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "clear", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"clear the terminal screen in linux"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "first_name", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "request", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "firstname", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"flask get value of request variable ' firstname '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/bin/bash[SEP]-c[SEP]\"echo[SEP]hello[SEP]world\"", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"run a command ` echo /bin/bash[SEP]-c[SEP]\"echo[SEP]hello[SEP]world\" world ` in bash instead of shell"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "update", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append values ` [3, 4] ` to a set ` a `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "year", "type": "identifier", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"group dataframe ` data ` entries by year value of the date in column ' date '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "In", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "true", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "t", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "y", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "yes", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "yeah", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "yup", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "certainly", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "uh-huh", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"convert string to boolean from defined set of strings"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "link", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove dictionary from list ` a ` if the value associated with its key ' link ' is in list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "User", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "X", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "transform", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"get data of dataframe ` df ` where the sum of column ' X ' grouped by column ' User ' is equal to 0"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "logging", "type": "identifier", "children": []}]}]}, {"value": "info", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "date=%s", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "date", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert the argument ` date ` with string formatting in logging"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "abspath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "existGDBPath", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get absolute folder path and filename for file ` existGDBPath `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of tuples with multiple iterators using list comprehension"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myDict", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "DictComp", "type": "expr", "children": [{"value": "key", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "key", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myDict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "val", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "42", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"remove items from dictionary ` myDict ` if the item 's value ` val ` is equal to 42"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "indices", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_list", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "whatever", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"how to find all occurrences of an element in a list ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "br", "type": "identifier", "children": []}]}]}, {"value": "addheaders", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Cookie", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "cookiename=cookie[SEP]value", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"add header ` ('Cookie', 'cookiename=cookie value') ` to mechanize browser ` br `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "x", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"append array of strings ` ['x', 'x', 'x'] ` into one string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "L", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a list ` L ` of ascii values to a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "urllib", "type": "identifier", "children": []}]}]}, {"value": "parse", "type": "identifier", "children": []}]}]}, {"value": "unquote", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "url", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "utf8", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"decode a urllib escaped url string ` url ` with ` utf8 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "437c2123", "type": "string", "children": []}]}]}, {"value": "decode", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "hex", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a hex string ` 437c2123 ` according to ascii value ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mylist", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "weight", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "factor", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort a list of dictionaries ` mylist ` by keys \" weight \" and \" factor \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"split a string ` s ` at line breaks ` [LINE] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\d+)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\"\\1\"", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "This[SEP]is[SEP]number[SEP]1[SEP]and[SEP]this[SEP]is[SEP]number[SEP]22", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"enclose numbers in quotes in a string ` This[SEP]is[SEP]number[SEP]1[SEP]and[SEP]this[SEP]is[SEP]number[SEP]22 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "u", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "u", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a list of integers from 0 to ` 5 ` where each second element is a duplicate of the previous element"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "xor", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "bool", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get logical xor of ` a ` and ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "dirname", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the directory name of ` path `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zipped", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "t", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"how do i sort a zipped list in python ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get the first row , second column ; second row , first column , and first row third column values of numpy array ` arr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "exists", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/does/not/exist", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether a path \" /does/not/exist \" exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "taskkill[SEP]/im[SEP]make.exe", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"kill a process ` taskkill[SEP]/im[SEP]make.exe ` from python script on windows"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get an element at index ` [1,1] ` in a numpy array ` arr `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "words", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"return a random word from a word list ' words '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "FloorDiv", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get average for every three columns in ` df ` dataframe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}]}]}	"change the case of the first letter in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "IfExp", "type": "expr", "children": [{"value": "test", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "randint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "upper", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "orelse", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"randomly switch letters ' cases in string ` s `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file", "type": "identifier", "children": []}]}]}, {"value": "write", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "My[SEP]String[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"write a string ` My[SEP]String[LINE] String ` to a file ` file ` including new line character"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "data", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` data ` into a string of its elements"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "users", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "order", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "id", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"sort a python list of dictionaries ` users ` by a given list ` order ` of ids ' id ' with the desired order"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_elements_by_xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "//*[contains(text(),[SEP]'My[SEP]Button')]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how do i find an element that contains specific text in selenium webdriver ( python ) ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "index", "type": "identifier", "children": []}]}]}, {"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "endswith", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "0630", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"filter dataframe ` df ` by sub-level index ' 0630 ' in pandas"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "iter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mydict", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "tup", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tup", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "reverse", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "step", "type": "expr", "children": []}]}]}]}]}]}]}]}	"sort dictionary ` mydict ` in descending order based on the sum of each value in it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "argsort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort array ` arr ` in ascending order by values of the 3rd column"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "tolist", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert numpy array into python list structure"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "//li/label/input[contains(..,'polishpottery')]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"selecting element \" //li/label/input \" followed by text \" polishpottery \" with selenium webdriver ` driver `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_datetime", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%B[SEP]%d,[SEP]%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a datetime object ` my_datetime ` into readable format ` %B[SEP]%d,[SEP]%Y `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "output", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "Popen", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mycmd", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "myarg", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "stdout", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "PIPE", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "communicate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"how to get output of exe in python script ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ",", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print a string ` s ` by splitting with comma ` , `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "timedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "days", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "hours", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"add one day and three hours to the present time from datetime.now ( )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Sub", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_text", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "?", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"count the number of trailing question marks in string ` my_text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"loop through 0 to 10 with step 2"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "random", "type": "identifier", "children": []}]}]}, {"value": "choice", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"select a random element from array ` [1, 2, 3] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "stock", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "same1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "same2", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "positions", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "reset_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"summing across rows of pandas dataframe"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "-", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "NaN", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace value ' - ' in any column of pandas dataframe to \" NaN \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "year", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "month", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "item", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "unstack", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"convert dataframe ` df ` to a pivot table using column ' year ' , ' month ' , and ' item ' as indexes"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "isnull", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "any", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check if datafram ` df ` has any nan vlaues"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tst2", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "str", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert tuple ` tst ` to string ` tst2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Exception", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "This[SEP]is[SEP]the[SEP]exception[SEP]you[SEP]expect[SEP]to[SEP]handle", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cause", "type": "expr", "children": []}]}]}]}	"throw an This[SEP]is[SEP]the[SEP]exception[SEP]you[SEP]expect[SEP]to[SEP]handle with message ' This[SEP]is[SEP]the[SEP]exception[SEP]you[SEP]expect[SEP]to[SEP]handle '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotIn", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}]}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "7", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}, {"value": "Str", "type": "expr", "children": [{"value": "hi", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"check if tuple ( 2 , 3 ) is not in a list [ ( 2 , 7 ) , ( 7 , 3 ) , \" hi \" ]"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert string ` s ` to lowercase"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"skip the newline while printing ` line `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Raise", "type": "stmt", "children": [{"value": "exc", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ValueError", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "represents[SEP]a[SEP]hidden[SEP]bug,[SEP]do[SEP]not[SEP]catch[SEP]this", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "cause", "type": "expr", "children": []}]}]}]}	"throw represents[SEP]a[SEP]hidden[SEP]bug,[SEP]do[SEP]not[SEP]catch[SEP]this valueerror with message ' represents[SEP]a[SEP]hidden[SEP]bug,[SEP]do[SEP]not[SEP]catch[SEP]this '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "response", "type": "identifier", "children": []}]}]}, {"value": "headers", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "WWW-Authenticate", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Basic[SEP]realm=\"test\"", "type": "string", "children": []}]}]}]}]}]}	"add header ' WWWAuthenticate ' in a flask app with value ' Basic[SEP]realm=\"test\" '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "array", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "arange", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}, {"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "np", "type": "identifier", "children": []}]}]}, {"value": "ones", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "min", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"get a numpy array that contains the element wise minimum of three 3x1 arrays"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "now", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "date", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert datetime object to date object in python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "ix", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "ExtSlice", "type": "slice", "children": [{"value": "dims", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": []}]}, {"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "38.15", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}]}]}]}	"return the column for value 38.15 in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thread", "type": "identifier", "children": []}]}]}, {"value": "start_new_thread", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myfunction", "type": "identifier", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "MyStringHere", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"start a new thread for ` myfunction ` with parameters ' MyStringHere ' and 1"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0:.2f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"print float ` a ` with two decimal points"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "datetime", "type": "identifier", "children": []}]}]}, {"value": "strptime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "16Sep2012", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "%d%b%Y", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"create datetime object from \" 16sep2012 \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "time", "type": "identifier", "children": []}]}]}, {"value": "sleep", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0.1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"make a 0.1 seconds time delay"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reversed", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"reverse string ' foo '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[^0-9a-zA-Z]+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "*", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "h^&ell`.,|o[SEP]w]{+orld", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"replace all non-alphanumeric characters in a string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "td", "type": "identifier", "children": []}]}]}, {"value": "findNext", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "text", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "td", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tr", "type": "identifier", "children": []}]}]}, {"value": "findAll", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "td", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tr", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rows", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"extract table data from table ` rows ` using beautifulsoup"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "logical_not", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "isnan", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"remove nan values from array ` x `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".*I", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "I", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "stri", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all characters from string ` stri ` upto character ' I '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "six_months", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "date", "type": "identifier", "children": []}]}]}, {"value": "today", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "relativedelta", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "months", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "UAdd", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "6", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get the date 6 months from today"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo[SEP]bar[SEP]bar[SEP]bar", "type": "string", "children": []}]}]}, {"value": "replace", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "XXX", "type": "string", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "find", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find the index of the second occurrence of the substring ` foo[SEP]bar[SEP]bar[SEP]bar ` in string ` foo[SEP]bar[SEP]bar[SEP]bar `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "enumerate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "bar", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "baz", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "foo", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"finding the index of an item ' foo ' given a list ` [ ' foo ' , 'bar ' , 'baz ' ] ` containing it"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Set", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "my_variable", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "forceescape", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitOr", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "linebreaks", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"apply jinja2 filters ` forceescape ` and ` linebreaks ` on variable ` my_variable `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "level", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "as_index", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}, {"value": "nth", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"select the first row grouped per level 0 of dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split string ` a ` using new-line character ' [LINE] ' as separator"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dictionary", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "operator", "type": "identifier", "children": []}]}]}, {"value": "itemgetter", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"sort dictionary ` dictionary ` in ascending order by its values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "getattr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "test", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "a_string", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"access the class variable ` a_string ` from a class object ` test `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sentence", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sentence", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove all whitespaces in a string ` sentence `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x_file", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "direct", "type": "identifier", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "5_1.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"open file ' 5_1.txt ' in directory ` direct `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "sort", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "arr", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"sort rows of numpy matrix ` arr ` in ascending order according to all column values"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}, {"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "k", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get a list of the keys in each dictionary in a dictionary of dictionaries ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "b", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "NotEq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find out the number of non-matched elements at the same index of list ` a ` and list ` b `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "loc", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Value", "type": "string", "children": []}]}]}]}]}]}]}, {"value": "idxmax", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"return rows of data associated with the maximum value of column ' Value ' in dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pat", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"validate ip address using regex"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "driver", "type": "identifier", "children": []}]}]}, {"value": "find_element_by_xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "//p[@id,[SEP]'one']/following-sibling::p", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find next sibling element in python selenium ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "pprint", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "o", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"pretty-print ordered dictionary ` o `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find_all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "href", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "compile", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "http://www\\.iwashere\\.com/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}]}]}	"find all anchor tags in html ` soup ` whose url begins with ` http://www.iwashere.com `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "c", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "t", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "zip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "conversions", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "trials", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"divide the members of a list ` conversions ` by the corresponding members of another list ` trials `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"append 3 lists in one list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Name", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Age", "type": "string", "children": []}]}]}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "thisismylist", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"create a list of tuples with the values of keys ' Name ' and ' Age ' from each dictionary ` d ` in the list ` thisismylist `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "(\\bget\\b)", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1@", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "text", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"add character ' @ ' after word ' get ' in string ` text `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "foo", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove multiple spaces in a string ` foo `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "2.0005", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 2.0005 up to 3 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "quadmesh", "type": "identifier", "children": []}]}]}, {"value": "set_clim", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "vmin", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "vmax", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "15", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"set colorbar range from ` 0 ` to ` 15 ` for pyplot object ` quadmesh ` in matplotlib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "groupby", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "cluster", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "mean", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"do group by on ` cluster ` column in ` df ` and get its mean"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "round", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "8.005", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"round number 8.005 up to 2 decimal places"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_pickle", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_name", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"store data frame ` df ` to file ` file_name ` using pandas , python"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "If", "type": "stmt", "children": [{"value": "test", "type": "expr", "children": [{"value": "Compare", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string1", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ops", "type": "cmpop", "children": [{"value": "Eq", "type": "cmpop", "children": []}]}, {"value": "comparators", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "string2", "type": "identifier", "children": []}]}]}, {"value": "lower", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Pass", "type": "stmt", "children": []}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}	"case insensitive string comparison between ` string1 ` and ` string2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "shutdown", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "/a", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"abort a computer shutdown using subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "txt", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file.txt", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "read", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"read the contents of the file ' file.txt ' into ` txt `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "{0}\\w{{2}}b{1}\\w{{2}}quarter", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "b", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format parameters ' b ' and ' a ' into plcaeholders in string \" {0}\\w{{2}}b{1}\\w{{2}}quarter \""
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "where", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "mask", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get all indexes of boolean numpy array where boolean value ` mask ` is true"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Total[SEP]cost[SEP]is:[SEP]${:,.2f}", "type": "string", "children": []}]}]}, {"value": "format", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "TotalAmount", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"format floating point number ` TotalAmount ` to be rounded off to two decimal places and have a comma thousands ' seperator"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "fig", "type": "identifier", "children": []}]}]}, {"value": "subplots_adjust", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "wspace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}, {"value": "keyword", "type": "keyword", "children": [{"value": "hspace", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"remove the space between subplots in matplotlib.pyplot"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "BitAnd", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "set", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d1", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d2", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get set intersection between dictionaries ` d1 ` and ` d2 `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "to_csv", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "filename", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "date_format", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%Y%m%d", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"write dataframe ` df ` to csv file ` filename ` with dates formatted as yearmonthday ` %Y%m%d `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "ImportFrom", "type": "stmt", "children": [{"value": "functools", "type": "identifier", "children": []}, {"value": "names", "type": "alias", "children": [{"value": "alias", "type": "alias", "children": [{"value": "reduce", "type": "identifier", "children": []}, {"value": "asname", "type": "identifier", "children": []}]}]}, {"value": "0", "type": "int", "children": []}]}, {"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "reduce", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}, {"value": "arg", "type": "arg", "children": [{"value": "y", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "10", "type": "object", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mult", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "y", "type": "identifier", "children": []}]}]}]}]}]}, {"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "2", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "4", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "5", "type": "object", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"merge a list of integers ` [1, 2, 3, 4, 5] ` into a single integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "print", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "salary", "type": "string", "children": []}]}]}]}]}]}, {"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}]}]}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "bonus", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get the maximum of ' salary ' and ' bonus ' values in a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "([a-z])\\1+", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "\\1", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "ffffffbbbbbbbqqq", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove duplicate characters from string ' ffffffbbbbbbbqqq '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "tree", "type": "identifier", "children": []}]}]}, {"value": "xpath", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ".//a[text()='Example']", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}, {"value": "tag", "type": "identifier", "children": []}]}]}]}]}]}	"match contents of an element to ' Example ' in xpath ( lxml )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Hello[LINE][LINE][LINE]", "type": "string", "children": []}]}]}, {"value": "rstrip", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "[LINE]", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove newline in string \" Hello[LINE][LINE][LINE] \" on the right side"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}]}, {"value": "join", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "chr", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "myintegers", "type": "identifier", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert list ` myintegers ` into a unicode string"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "today", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%B", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"get month name from a datetime object ` today `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ftp", "type": "identifier", "children": []}]}]}, {"value": "storbinary", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "STOR[SEP]myfile.txt", "type": "string", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "myfile.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "rb", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"upload binary file ` STOR[SEP]myfile.txt ` with ftplib"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "$\\d+\\W+|\\b\\d+\\b|\\W+\\d+$", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"delete all digits in string ` s ` that are not directly attached to a word character"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "drop", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "df", "type": "identifier", "children": []}]}]}, {"value": "columns", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}, {"value": "Num", "type": "expr", "children": [{"value": "3", "type": "object", "children": []}]}]}]}]}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"delete 1st , 2nd and 4th columns from dataframe ` df `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "re", "type": "identifier", "children": []}]}]}, {"value": "sub", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<[^>]*>", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "", "type": "string", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "mystring", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"remove tags from a string ` mystring `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Div", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Tuple", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}, {"value": "Name", "type": "expr", "children": [{"value": "j", "type": "identifier", "children": []}]}]}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "list", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "d", "type": "identifier", "children": []}]}]}, {"value": "items", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"get the average of a list values for each key in dictionary ` d ` )"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "system", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "source[SEP].bashrc;[SEP]shopt[SEP]-s[SEP]expand_aliases;[SEP]nuke[SEP]-x[SEP]scriptPath", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"execute command ' source[SEP].bashrc;[SEP]shopt[SEP]-s[SEP]expand_aliases;[SEP]nuke[SEP]-x[SEP]scriptPath ' from python script"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "floats", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "map", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "float", "type": "identifier", "children": []}]}, {"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"converting string lists ` s ` to float list"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "os", "type": "identifier", "children": []}]}]}, {"value": "path", "type": "identifier", "children": []}]}]}, {"value": "exists", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "file_path", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"check whether file ` file_path ` exists"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "FunctionDef", "type": "stmt", "children": [{"value": "reversed_string", "type": "identifier", "children": []}, {"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "a_string", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Return", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "a_string", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Slice", "type": "slice", "children": [{"value": "lower", "type": "expr", "children": []}, {"value": "upper", "type": "expr", "children": []}, {"value": "step", "type": "expr", "children": [{"value": "UnaryOp", "type": "expr", "children": [{"value": "op", "type": "unaryop", "children": [{"value": "USub", "type": "unaryop", "children": []}]}, {"value": "operand", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "1", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}]}, {"value": "decorator_list", "type": "expr", "children": []}, {"value": "returns", "type": "expr", "children": []}]}]}]}	"reverse a string ` a_string `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "rdata", "type": "identifier", "children": []}]}]}, {"value": "set_index", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "race_date", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "track_code", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "race_number", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"set columns ` ['race_date', 'track_code', 'race_number'] ` as indexes in dataframe ` rdata `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "identifier", "children": []}]}]}, {"value": "findAll", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "text", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Python", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"searche in html string for elements that have text ' Python '"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "max", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "lst", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "key", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Lambda", "type": "expr", "children": [{"value": "args", "type": "arguments", "children": [{"value": "arguments", "type": "arguments", "children": [{"value": "args", "type": "arg", "children": [{"value": "arg", "type": "arg", "children": [{"value": "x", "type": "identifier", "children": []}, {"value": "annotation", "type": "expr", "children": []}]}]}, {"value": "vararg", "type": "arg", "children": []}, {"value": "kwonlyargs", "type": "arg", "children": []}, {"value": "kw_defaults", "type": "expr", "children": []}, {"value": "kwarg", "type": "arg", "children": []}, {"value": "defaults", "type": "expr", "children": []}]}]}, {"value": "body", "type": "expr", "children": [{"value": "Subscript", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "x", "type": "identifier", "children": []}]}]}, {"value": "slice", "type": "slice", "children": [{"value": "Index", "type": "slice", "children": [{"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "score", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}	"get an item from a list of dictionary ` lst ` which has maximum value in the key ` score ` using lambda function"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "r", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "<MY_URI>", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "headers", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Dict", "type": "expr", "children": [{"value": "keys", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "Authorization", "type": "string", "children": []}]}]}, {"value": "values", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "TOK:<MY_TOKEN>", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}]}]}	"request uri ' <MY_URI> ' and pass authorization token ' TOK:<MY_TOKEN> ' to the header"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "int", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "Decimal", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"convert a string ` s ` containing a decimal to an integer"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "soup", "type": "identifier", "children": []}]}]}, {"value": "find_all", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "a", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "div", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"find all the tags ` a ` and ` div ` from beautiful soup object ` soup `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "ListComp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%.2d", "type": "string", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Mod", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "i", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "range", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "16", "type": "object", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}]}]}]}	"generate list of numbers in specific format using string formatting precision ."
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "numpy", "type": "identifier", "children": []}]}]}, {"value": "concatenate", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "LIST", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "axis", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Num", "type": "expr", "children": [{"value": "0", "type": "object", "children": []}]}]}]}]}]}]}]}]}]}	"concatenate sequence of numpy arrays ` LIST ` into a one dimensional array along the first axis"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sorted", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "14:10:01", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "03:12:08", "type": "string", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"sort list ` ['14:10:01', '03:12:08'] `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "upload_url", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "blobstore", "type": "identifier", "children": []}]}]}, {"value": "create_upload_url", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "/upload", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "gs_bucket_name", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "my_bucket", "type": "string", "children": []}]}]}]}]}]}]}]}]}]}	"upload uploaded file from path ' /upload ' to google cloud storage ' my_bucket ' bucket"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "requests", "type": "identifier", "children": []}]}]}, {"value": "get", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "https://www.reporo.com/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "verify", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "False", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"request url ' https://www.reporo.com/ ' without verifying ssl certificates"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "With", "type": "stmt", "children": [{"value": "items", "type": "withitem", "children": [{"value": "withitem", "type": "withitem", "children": [{"value": "context_expr", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "open", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "file.txt", "type": "string", "children": []}]}, {"value": "Str", "type": "expr", "children": [{"value": "r", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "optional_vars", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ins", "type": "identifier", "children": []}]}]}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Assign", "type": "stmt", "children": [{"value": "targets", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "value", "type": "expr", "children": [{"value": "List", "type": "expr", "children": [{"value": "elts", "type": "expr", "children": []}]}]}]}, {"value": "For", "type": "stmt", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ins", "type": "identifier", "children": []}]}]}, {"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "array", "type": "identifier", "children": []}]}]}, {"value": "append", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "line", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}, {"value": "orelse", "type": "stmt", "children": []}]}]}]}]}]}	"read file \" file.txt \" line by line into a list ` array `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "subprocess", "type": "identifier", "children": []}]}]}, {"value": "call", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "mv[SEP]/home/somedir/subdir/*[SEP]somedir/", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": [{"value": "keyword", "type": "keyword", "children": [{"value": "shell", "type": "identifier", "children": []}, {"value": "value", "type": "expr", "children": [{"value": "NameConstant", "type": "expr", "children": [{"value": "True", "type": "singleton", "children": []}]}]}]}]}]}]}]}]}]}	"execute a mv[SEP]/home/somedir/subdir/*[SEP]somedir/ command ` mv[SEP]/home/somedir/subdir/*[SEP]somedir/ ` in subprocess"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "today", "type": "identifier", "children": []}]}]}, {"value": "strftime", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "%B", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to get month name of datetime ` today `"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "ax", "type": "identifier", "children": []}]}]}, {"value": "xaxis", "type": "identifier", "children": []}]}]}, {"value": "set_ticks_position", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "top", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"how to plot with x-axis at the top of the figure ?"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": "=", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "item", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "s", "type": "identifier", "children": []}]}]}, {"value": "split", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Str", "type": "expr", "children": [{"value": ";", "type": "string", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}	"split a string ` s ` by ' ; ' and convert to a dictionary"
{"value": "Module", "type": "mod", "children": [{"value": "body", "type": "stmt", "children": [{"value": "Expr", "type": "stmt", "children": [{"value": "value", "type": "expr", "children": [{"value": "BinOp", "type": "expr", "children": [{"value": "left", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict_test", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "op", "type": "operator", "children": [{"value": "Add", "type": "operator", "children": []}]}, {"value": "right", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "sum", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "GeneratorExp", "type": "expr", "children": [{"value": "elt", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "len", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "generators", "type": "comprehension", "children": [{"value": "comprehension", "type": "comprehension", "children": [{"value": "target", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "v", "type": "identifier", "children": []}]}]}, {"value": "iter", "type": "expr", "children": [{"value": "Call", "type": "expr", "children": [{"value": "func", "type": "expr", "children": [{"value": "Attribute", "type": "expr", "children": [{"value": "value", "type": "expr", "children": [{"value": "Name", "type": "expr", "children": [{"value": "dict_test", "type": "identifier", "children": []}]}]}, {"value": "values", "type": "identifier", "children": []}]}]}, {"value": "args", "type": "expr", "children": []}, {"value": "keywords", "type": "keyword", "children": []}]}]}, {"value": "ifs", "type": "expr", "children": []}]}]}]}]}, {"value": "keywords", "type": "keyword", "children": []}]}]}]}]}]}]}]}	"get the number of all keys in the nested dictionary ` dict_list `"
