Predict: get a string ` kill ` to a string ` kill `
Gold: send a signal ` signal.SIGUSR1 ` to the current process
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["Attribute"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["value"], ["<unk>"], ["Name"], ["Attribute"], ["Name"], ["os"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> send a <unk> ` <unk> ` to the current process <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: send a <unk> ` <unk> ` to the current process <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` utf-8 ` to a string ` bytes `
Gold: decode a hex string ' 4a4b4c ' to utf-8 .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["decode"], ["utf-8"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> decode a hex string ' <unk> ' to utf-8 . <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: decode a hex string ' <unk> ' to utf-8 . <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` myList `
Gold: check if all elements in list ` myList ` are identical
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["all"], ["elt"], ["generators"], ["Compare"], ["comprehension"], ["left"], ["ops"], ["comparators"], ["target"], ["iter"], ["ifs"], ["Name"], ["Eq"], ["Subscript"], ["Name"], ["Name"], ["x"], ["value"], ["slice"], ["x"], ["myList"], ["Name"], ["Index"], ["myList"], ["value"], ["Num"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if all elements in list ` myList ` are identical <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if all elements in list ` myList ` are identical <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` Python ` in a string ` Python `
Gold: format number of spaces between strings ` Python ` , ` %*s : %*s ` and ` Very Good ` to be ` 20 `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["BinOp"], ["print"], ["left"], ["op"], ["right"], ["Str"], ["Mod"], ["Tuple"], ["<unk>"], ["elts"], ["Num"], ["Str"], ["Num"], ["Str"], ["20"], ["Python"], ["20"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> format number of spaces between strings ` <unk> ` , ` <unk> ` and ` <unk> ` to be ` 20 `
Seq Out: format number of spaces between strings ` <unk> ` , ` <unk> ` and ` <unk> ` to be ` 20 ` <eos>

Predict: get a string ` d ` to a string ` d `
Gold: how to convert a string from cp-1251 to utf-8 ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["encode"], ["utf8"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["decode"], ["<unk>"], ["Name"], ["d"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how to convert a string from <unk> to utf-8 ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how to convert a string from <unk> to utf-8 ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` res ` in a list ` res `
Gold: get rid of none values in dictionary ` kwargs `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["DictComp"], ["<unk>"], ["key"], ["value"], ["generators"], ["Name"], ["Name"], ["comprehension"], ["k"], ["v"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Call"], ["Name"], ["IsNot"], ["NameConstant"], ["k"], ["v"], ["list"], ["func"], ["args"], ["keywords"], ["v"], ["value"], ["Attribute"], ["value"], ["items"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get <unk> of none values in dictionary ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get <unk> of none values in dictionary ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` res `
Gold: get rid of none values in dictionary ` kwargs `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["dict"], ["elt"], ["generators"], ["Tuple"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Tuple"], ["Call"], ["Compare"], ["k"], ["v"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Attribute"], ["Name"], ["IsNot"], ["NameConstant"], ["k"], ["v"], ["value"], ["items"], ["v"], ["value"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get <unk> of none values in dictionary ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get <unk> of none values in dictionary ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` ps -ef | grep something | wc -l ` to a string ` ps -ef | grep something | wc -l `
Gold: capture final output of a chain of system commands ` ps -ef | grep something | wc -l `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["value"], ["check_output"], ["<unk>"], ["shell"], ["value"], ["Name"], ["NameConstant"], ["subprocess"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> <unk> output of a <unk> of system <unk> ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> <unk> output of a <unk> of system <unk> ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a ` to a string ` b `
Gold: concatenate a list of strings ` ['a', 'b', 'c'] `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["join"], ["elts"], ["Str"], ["Str"], ["Str"], ["Str"], ["<pad>"], ["a"], ["b"], ["c"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> concatenate a list of strings ` ['a', 'b', <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: concatenate a list of strings ` ['a', 'b', <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s2 ` to a string ` s2 `
Gold: find intersection data between series ` s1 ` and series ` s2 `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["Series"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Call"], ["pd"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["intersection"], ["func"], ["args"], ["keywords"], ["Call"], ["Name"], ["Name"], ["func"], ["args"], ["keywords"], ["set"], ["s2"], ["Name"], ["Name"], ["set"], ["s1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find <unk> data between series ` <unk> ` and series ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find <unk> data between series ` <unk> ` and series ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` HTTP/1.0 200 OK[LINE] ` to a string ` HTTP/1.0 200 OK[LINE] `
Gold: sending http headers to ` client `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["send"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> http <unk> to ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> http <unk> to ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` date ` to a string ` %Y-%m-%d `
Gold: format a datetime string ` when ` to extract date only
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["date"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Str"], ["value"], ["strptime"], ["<unk>"], ["%Y-%m-%d"], ["Attribute"], ["value"], ["datetime"], ["Name"], ["datetime"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> format a datetime string ` when ` to extract date only <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: format a datetime string ` when ` to extract date only <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` inputString ` to a string ` inputString `
Gold: split a multi-line string ` inputString ` into separate strings
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["split"], ["[LINE]"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a <unk> string ` <unk> ` into separate strings <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a <unk> string ` <unk> ` into separate strings <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a [LINE] b [LINE] c ` to a string ` a [LINE] b [LINE] c `
Gold: split a [LINE] b [LINE] c multi-line string ` a [LINE] b [LINE] c ` by new line character ` a [LINE] b [LINE] c `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["split"], ["[LINE]"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split <unk> <unk> string ` <unk> ` by new line character ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split <unk> <unk> string ` <unk> ` by new line character ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` : `
Gold: concatenate elements of list ` b ` by a colon " : "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["GeneratorExp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["Call"], ["comprehension"], [":"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["str"], ["x"], ["x"], ["b"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> concatenate elements of list ` b ` by a <unk> " : " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: concatenate elements of list ` b ` by a <unk> " : " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` Entry `
Gold: get the first object from a queryset in django model ` Entry `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["get"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Slice"], ["func"], ["args"], ["keywords"], ["lower"], ["upper"], ["step"], ["Attribute"], ["Num"], ["value"], ["filter"], ["1"], ["Attribute"], ["value"], ["objects"], ["Name"], ["Entry"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the first object from a queryset in django model ` Entry ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the first object from a queryset in django model ` Entry ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a `
Gold: calculate sum over all rows of 2d numpy array
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sum"], ["axis"], ["value"], ["Name"], ["Num"], ["a"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> calculate sum over all rows of 2d numpy array <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: calculate sum over all rows of 2d numpy array <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` simplefilter ` to a string ` simplefilter `
Gold: enable warnings using action ' always '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> <unk> using <unk> ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> <unk> using <unk> ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` l ` to a string ` l `
Gold: concatenate items of list ` l ` with a space ' '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["join"], ["func"], ["args"], ["keywords"], ["Str"], ["Name"], ["Name"], ["Name"], ["<pad>"], ["map"], ["str"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> concatenate items of list ` l ` with a space ' ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: concatenate items of list ` l ` with a space ' ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` python.exe ` to a string ` python.exe `
Gold: run script ' hello.py ' with argument ' htmlfilename.htm ' on terminal using python executable
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["call"], ["elts"], ["Name"], ["Str"], ["Str"], ["Str"], ["subprocess"], ["<unk>"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> run script ' <unk> ' with argument ' <unk> ' on terminal using python <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: run script ' <unk> ' with argument ' <unk> ' on terminal using python <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` time ` to a string ` 30/03/09 16:31:32.123 `
Gold: how can i parse a time string containing milliseconds in it with python ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["strptime"], ["<unk>"], ["<unk>"], ["Name"], ["time"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how can i parse a time string containing <unk> in it with python ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how can i parse a time string containing <unk> in it with python ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a string ` my_string `
Gold: convert a string ` my_string ` with dot and comma into a float number ` my_float `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["float"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], [","], ["<pad>"], ["Name"], ["my_string"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a string ` my_string ` with dot and comma into a float number ` <unk> ` <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a string ` my_string ` with dot and comma into a float number ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` , ` to a string ` , `
Gold: convert a string ` 123,456.908 ` with dot and comma into a floating number
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["float"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], [","], ["<pad>"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a string ` <unk> ` with dot and comma into a floating number <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a string ` <unk> ` with dot and comma into a floating number <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` /path/to/whatever ` to a string ` /path/to/whatever `
Gold: set pythonpath in python script .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["append"], ["<unk>"], ["Attribute"], ["value"], ["path"], ["Name"], ["sys"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> set <unk> in python script . <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: set <unk> in python script . <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` (\W+) ` to a string ` (\W+) `
Gold: split string ' Words, words, words. ' using a regex ' (\W+) '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["split"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ' <unk> ' using a regex ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ' <unk> ' using a regex ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` file ` to a string ` file `
Gold: open a file ` Output.txt ` in append mode
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["file"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Str"], ["open"], ["<unk>"], ["a"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> open a file ` <unk> ` in append mode <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: open a file ` <unk> ` in append mode <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` http://www.example.com/songs/mp3.mp3 ` to a string ` http://www.example.com/songs/mp3.mp3 `
Gold: download a file " http://www.example.com/songs/mp3.mp3 " over http and save to " mp3.mp3 "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["urlretrieve"], ["<unk>"], ["<unk>"], ["Attribute"], ["value"], ["request"], ["Name"], ["urllib"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> download a file " <unk> " over http and save to " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: download a file " <unk> " over http and save to " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a status value of a list ` file_name ` in a list ` file_name
Gold: download a file ` url ` over http and save to ` file_name `
Tree: [["Module"], ["body"], ["Assign"], ["Assign"], ["Assign"], ["Assign"], ["Expr"], ["Assign"], ["Assign"], ["<unk>"], ["Expr"], ["targets"], ["value"], ["targets"], ["value"], ["targets"], ["value"], ["targets"], ["value"], ["value"], ["targets"], ["value"], ["targets"], ["value"], ["test"], ["body"], ["orelse"], ["value"], ["Name"], ["Call"], ["Name"], ["Call"], ["Name"], ["Call"], ["Name"], ["Call"], ["Call"], ["Name"], ["Num"], ["Name"], ["Num"], ["NameConstant"], ["Assign"], ["If"], ["AugAssign"], ["Expr"], ["Assign"], ["Assign"], ["Expr"], ["Call"], ["u"], ["func"], ["args"], ["keywords"], ["f"], ["func"], ["args"], ["keywords"], ["meta"], ["func"], ["args"], ["keywords"], ["<unk>"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["<unk>"], ["0"], ["<unk>"], ["<unk>"], ["True"], ["targets"], ["value"], ["test"], ["body"], ["orelse"], ["target"], ["op"], ["value"], ["value"], ["targets"], ["value"], ["targets"], ["value"], ["value"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["Name"], ["Str"], ["Attribute"], ["Name"], ["Subscript"], ["Name"], ["BinOp"], ["Name"], ["Call"], ["UnaryOp"], ["<unk>"], ["Name"], ["Add"], ["Call"], ["Call"], ["Name"], ["BinOp"], ["Name"], ["BinOp"], ["Call"], ["Attribute"], ["value"], ["urlopen"], ["url"], ["open"], ["file_name"], ["wb"], ["value"], ["info"], ["int"], ["value"], ["slice"], ["print"], ["left"], ["op"], ["right"], ["<unk>"], ["func"], ["args"], ["keywords"], ["op"], ["operand"], ["<unk>"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["status"], ["left"], ["op"], ["right"], ["status"], ["left"], ["op"], ["right"], ["func"], ["args"], ["keywords"], ["value"], ["close"], ["Attribute"], ["Name"], ["Call"], ["Index"], ["Str"], ["Mod"], ["Tuple"], ["Attribute"], ["Name"], ["Not"], ["Name"], ["Name"], ["Name"], ["Attribute"], ["Name"], ["Str"], ["Mod"], ["Tuple"], ["Name"], ["Add"], ["BinOp"], ["Name"], ["Name"], ["keyword"], ["Name"], ["value"], ["request"], ["u"], ["func"], ["args"], ["keywords"], ["value"], ["<unk>"], ["elts"], ["value"], ["read"], ["<unk>"], ["<unk>"], ["len"], ["<unk>"], ["value"], ["write"], ["<unk>"], ["<unk>"], ["elts"], ["status"], ["left"], ["op"], ["right"], ["print"], ["status"], ["<unk>"], ["value"], ["f"], ["Name"], ["Attribute"], ["Str"], ["Num"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["BinOp"], ["Call"], ["Mult"], ["BinOp"], ["Str"], ["urllib"], ["value"], ["<unk>"], ["<unk>"], ["0"], ["file_name"], ["<unk>"], ["u"], ["f"], ["<unk>"], ["left"], ["op"], ["right"], ["func"], ["args"], ["keywords"], ["left"], ["op"], ["right"], ["<pad>"], ["Name"], ["BinOp"], ["Div"], ["Name"], ["Name"], ["Num"], ["Call"], ["Add"], ["Num"], ["meta"], ["left"], ["op"], ["right"], ["<unk>"], ["chr"], ["8"], ["func"], ["args"], ["keywords"], ["1"], ["Name"], ["Mult"], ["Num"], ["Name"], ["Name"], ["<unk>"], ["<unk>"], ["len"], ["status"], ["<pad>"]]
Seq In: <sos> download a file ` url ` over http and save to ` file_name ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: download a file ` url ` over http and save to ` file_name ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` html ` in a list ` html `
Gold: download a file ' http://www.example.com/ ' over http
Tree: [["Module"], ["body"], ["Assign"], ["Assign"], ["targets"], ["value"], ["targets"], ["value"], ["Name"], ["Call"], ["Name"], ["Call"], ["response"], ["func"], ["args"], ["keywords"], ["html"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Attribute"], ["value"], ["urlopen"], ["<unk>"], ["value"], ["read"], ["Attribute"], ["Name"], ["value"], ["request"], ["response"], ["Name"], ["urllib"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> download a file ' <unk> ' over http <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: download a file ' <unk> ' over http <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` url `
Gold: download a file ` url ` over http
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["r"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["get"], ["url"], ["Name"], ["requests"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> download a file ` url ` over http <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: download a file ` url ` over http <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` url `
Gold: download a file ` url ` over http and save to " 10MB "
Tree: [["Module"], ["body"], ["Assign"], ["With"], ["targets"], ["value"], ["items"], ["body"], ["Name"], ["Call"], ["withitem"], ["For"], ["response"], ["func"], ["args"], ["keywords"], ["context_expr"], ["optional_vars"], ["target"], ["iter"], ["body"], ["orelse"], ["Attribute"], ["Name"], ["keyword"], ["Call"], ["Name"], ["Name"], ["Call"], ["Expr"], ["value"], ["get"], ["url"], ["stream"], ["value"], ["func"], ["args"], ["keywords"], ["<unk>"], ["data"], ["func"], ["args"], ["keywords"], ["value"], ["Name"], ["NameConstant"], ["Name"], ["Str"], ["Str"], ["Name"], ["Call"], ["Call"], ["requests"], ["True"], ["open"], ["<unk>"], ["wb"], ["<unk>"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["Name"], ["value"], ["<unk>"], ["value"], ["write"], ["data"], ["Name"], ["Name"], ["response"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> download a file ` url ` over http and save to " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: download a file ` url ` over http and save to " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` version ` to a string ` version `
Gold: argparse add argument with flag ' --version ' and version action of ' %(prog)s 2.0 ' to parser ` parser `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["keyword"], ["value"], ["add_argument"], ["<unk>"], ["<unk>"], ["value"], ["<unk>"], ["value"], ["Name"], ["Str"], ["Str"], ["parser"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> argparse add argument with <unk> ' <unk> ' and version <unk> of ' <unk> ' to <unk> ` <unk> ` <pad> <pad>
Seq Out: argparse add argument with <unk> ' <unk> ' and version <unk> of ' <unk> ' to <unk> ` <unk> ` <eos> <pad> <pad>

Predict: get a list of a list ` d ` to a list ` d `
Gold: remove key ' c ' from dictionary ` d `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["DictComp"], ["key"], ["value"], ["generators"], ["Name"], ["Subscript"], ["comprehension"], ["i"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["Name"], ["Index"], ["Name"], ["Name"], ["Compare"], ["d"], ["value"], ["i"], ["d"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["NotEq"], ["Str"], ["i"], ["i"], ["c"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove key ' c ' from dictionary ` d ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove key ' c ' from dictionary ` d ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` on ` to a list ` on `
Gold: create new dataframe object by merging columns " key " of dataframes ` split_df ` and ` csv_df ` and rename the columns from dataframes ` split_df ` and ` csv_df ` with suffix ` _left ` and ` _right ` respectively
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["keyword"], ["keyword"], ["value"], ["merge"], ["<unk>"], ["<unk>"], ["on"], ["value"], ["<unk>"], ["value"], ["Name"], ["List"], ["Tuple"], ["pd"], ["elts"], ["elts"], ["Str"], ["Str"], ["Str"], ["key"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create new dataframe object by <unk> columns " key " of dataframes ` <unk> ` and ` <unk> ` and rename the columns from dataframes ` <unk> ` and ` <unk> ` with suffix ` <unk> ` and ` <unk> ` <unk>
Seq Out: create new dataframe object by <unk> columns " key " of dataframes ` <unk> ` and ` <unk> ` and rename the columns from dataframes ` <unk> ` and ` <unk> ` with suffix ` <unk> ` and ` <unk> ` <unk> <eos>

Predict: get a string ` s ` to a string ` s `
Gold: split a string ` s ` by space with ` 4 ` splits
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Num"], ["value"], ["split"], ["<pad>"], ["4"], ["Name"], ["s"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a string ` s ` by space with ` 4 ` <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a string ` s ` by space with ` 4 ` <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` Enter your input: `
Gold: read keyboard-input
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["input"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> read <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: read <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` app `
Gold: enable debug mode on flask application ` app `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["run"], ["debug"], ["value"], ["Name"], ["NameConstant"], ["app"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> <unk> mode on flask application ` app ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> <unk> mode on flask application ` app ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` mylist ` in a list ` mylist `
Gold: python save list ` mylist ` to file object ' save.txt '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Call"], ["value"], ["<unk>"], ["mylist"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["Str"], ["<unk>"], ["open"], ["<unk>"], ["wb"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> python save list ` mylist ` to file object ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: python save list ` mylist ` to file object ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` P ` in a list ` P `
Gold: multiply a matrix ` P ` with a 3d tensor ` T ` in scipy
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["Num"], ["value"], ["<unk>"], ["0"], ["1"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["keyword"], ["value"], ["<unk>"], ["P"], ["T"], ["<unk>"], ["value"], ["Name"], ["List"], ["scipy"], ["elts"], ["Num"], ["Num"], ["1"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> multiply a matrix ` P ` with a 3d <unk> ` <unk> ` in <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: multiply a matrix ` P ` with a 3d <unk> ` <unk> ` in <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 3 `
Gold: create 3d array of zeroes of size ` (3,3,3) `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["value"], ["<unk>"], ["elts"], ["Name"], ["Num"], ["Num"], ["Num"], ["numpy"], ["3"], ["3"], ["3"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create 3d array of <unk> of size ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create 3d array of <unk> of size ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` content ` in a list ` content `
Gold: cut off the last word of a sentence ` content `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Subscript"], ["value"], ["join"], ["value"], ["slice"], ["Str"], ["Call"], ["Slice"], ["<pad>"], ["func"], ["args"], ["keywords"], ["lower"], ["upper"], ["step"], ["Attribute"], ["Str"], ["UnaryOp"], ["value"], ["split"], ["<pad>"], ["op"], ["operand"], ["Name"], ["USub"], ["Num"], ["content"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> cut off the last word of a sentence ` content ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: cut off the last word of a sentence ` content ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` asarray ` in a list ` x `
Gold: convert scalar ` x ` to array
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Subscript"], ["x"], ["value"], ["slice"], ["Call"], ["ExtSlice"], ["func"], ["args"], ["keywords"], ["dims"], ["Attribute"], ["Num"], ["UnaryOp"], ["Index"], ["Slice"], ["value"], ["reshape"], ["1"], ["op"], ["operand"], ["value"], ["lower"], ["upper"], ["step"], ["Call"], ["USub"], ["Num"], ["Num"], ["func"], ["args"], ["keywords"], ["1"], ["0"], ["Attribute"], ["Name"], ["value"], ["<unk>"], ["x"], ["Name"], ["np"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert scalar ` x ` to array <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert scalar ` x ` to array <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` L `
Gold: sum all elements of nested list ` L `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["sum"], ["elt"], ["generators"], ["IfExp"], ["comprehension"], ["test"], ["body"], ["orelse"], ["target"], ["iter"], ["ifs"], ["Call"], ["Call"], ["Name"], ["Name"], ["Name"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["i"], ["i"], ["L"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["i"], ["list"], ["sum"], ["i"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sum all elements of nested list ` L ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sum all elements of nested list ` L ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` !f ` to a list ` !f `
Gold: convert hex string ' 470FC614 ' to a float number
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Str"], ["Call"], ["Num"], ["value"], ["unpack"], ["<unk>"], ["func"], ["args"], ["keywords"], ["0"], ["Name"], ["Attribute"], ["Str"], ["struct"], ["value"], ["decode"], ["hex"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert hex string ' <unk> ' to a float number <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert hex string ' <unk> ' to a float number <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` my_dict `
Gold: multiple each value by ` 2 ` for all keys in a dictionary ` my_dict `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["GeneratorExp"], ["value"], ["update"], ["elt"], ["generators"], ["Name"], ["Tuple"], ["comprehension"], ["my_dict"], ["elts"], ["target"], ["iter"], ["ifs"], ["Name"], ["BinOp"], ["Tuple"], ["Call"], ["x"], ["left"], ["op"], ["right"], ["elts"], ["func"], ["args"], ["keywords"], ["Name"], ["Mult"], ["Num"], ["Name"], ["Name"], ["Name"], ["Call"], ["y"], ["2"], ["x"], ["y"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["items"], ["Name"], ["my_dict"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> multiple each value by ` 2 ` for all keys in a dictionary ` my_dict ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: multiple each value by ` 2 ` for all keys in a dictionary ` my_dict ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` sleep.sh `
Gold: running bash script ' sleep.sh '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["value"], ["call"], ["<unk>"], ["shell"], ["value"], ["Name"], ["NameConstant"], ["subprocess"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> running bash script ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: running bash script ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` l ` to a string ` l `
Gold: join elements of list ` l ` with a comma ` , `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["join"], ["l"], ["Str"], [","], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> join elements of list ` l ` with a comma ` , ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: join elements of list ` l ` with a comma ` , ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` myList ` to a string ` myList `
Gold: make a comma-separated string from a list ` myList `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["myList"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["join"], ["func"], ["args"], ["keywords"], ["Str"], ["Name"], ["Name"], ["Name"], [","], ["map"], ["str"], ["myList"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> make a comma-separated string from a list ` myList ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: make a comma-separated string from a list ` myList ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 10 `
Gold: reverse the list that contains 1 to 10
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["reversed"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Name"], ["Num"], ["range"], ["10"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> reverse the list that contains 1 to 10 <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: reverse the list that contains 1 to 10 <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` bag, ` to a string ` bag, `
Gold: remove substring ' lamp, bag, mirror ' from a string ' lamp, bag, mirror '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["<unk>"], ["<pad>"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove substring ' <unk> ' from a string ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove substring ' <unk> ' from a string ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` . ` in a list ` . `
Gold: reverse the order of words , delimited by ` . ` , in string ` s `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Subscript"], ["value"], ["join"], ["value"], ["slice"], ["Str"], ["Call"], ["Slice"], ["."], ["func"], ["args"], ["keywords"], ["lower"], ["upper"], ["step"], ["Attribute"], ["Str"], ["UnaryOp"], ["value"], ["split"], ["."], ["op"], ["operand"], ["Name"], ["USub"], ["Num"], ["s"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> reverse the order of words , delimited by ` . ` , in string ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: reverse the order of words , delimited by ` . ` , in string ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: convert epoch time represented as milliseconds ` s ` to string using format ' %Y-%m-%d %H:%M:%S.%f '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["strftime"], ["<unk>"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["fromtimestamp"], ["s"], ["Attribute"], ["value"], ["datetime"], ["Name"], ["datetime"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert <unk> time represented as <unk> ` s ` to string using format ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert <unk> time represented as <unk> ` s ` to string using format ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` %Y-%m-%d %H:%M:%S ` in a list ` %Y-%m-%d %H:%M:%S `
Gold: parse milliseconds epoch time ' 1236472051807 ' to format ' %Y-%m-%d %H:%M:%S '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Call"], ["value"], ["strftime"], ["%Y-%m-%d[SEP]%H:%M:%S"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["BinOp"], ["time"], ["value"], ["gmtime"], ["left"], ["op"], ["right"], ["Name"], ["Num"], ["Div"], ["Num"], ["time"], ["<unk>"], ["1000.0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> parse <unk> <unk> time ' <unk> ' to format ' %Y-%m-%d[SEP]%H:%M:%S ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: parse <unk> <unk> time ' <unk> ' to format ' %Y-%m-%d[SEP]%H:%M:%S ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` date ` to a string ` date `
Gold: get the date 7 days before the current date
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["date"], ["BinOp"], ["left"], ["op"], ["right"], ["Call"], ["Sub"], ["Call"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["keyword"], ["value"], ["now"], ["value"], ["timedelta"], ["days"], ["value"], ["Attribute"], ["Name"], ["Num"], ["value"], ["datetime"], ["datetime"], ["7"], ["Name"], ["datetime"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the date 7 <unk> before the current date <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the date 7 <unk> before the current date <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` data `
Gold: sum elements at index ` column ` of each list in list ` data `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["sum"], ["elt"], ["generators"], ["Subscript"], ["comprehension"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["Name"], ["Index"], ["Name"], ["Name"], ["row"], ["value"], ["row"], ["data"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sum elements at index ` column ` of each list in list ` data ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sum elements at index ` column ` of each list in list ` data ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` array `
Gold: sum columns of a list ` array `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["GeneratorExp"], ["Name"], ["Call"], ["sum"], ["elt"], ["generators"], ["i"], ["func"], ["args"], ["keywords"], ["Subscript"], ["comprehension"], ["Name"], ["Call"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["range"], ["func"], ["args"], ["keywords"], ["Name"], ["Index"], ["Name"], ["Name"], ["Name"], ["Subscript"], ["row"], ["value"], ["row"], ["array"], ["len"], ["value"], ["slice"], ["Name"], ["Name"], ["Index"], ["i"], ["array"], ["value"], ["Num"], ["0"], ["<pad>"]]
Seq In: <sos> sum columns of a list ` array ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sum columns of a list ` array ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` your string ` to a string ` your string `
Gold: encode binary your string ' your string ' to base64 code
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["Str"], ["base64"], ["<unk>"], ["your[SEP]string"], ["utf-8"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> encode binary your[SEP]string ' your[SEP]string ' to base64 code <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: encode binary your[SEP]string ' your[SEP]string ' to base64 code <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` dicts ` in a list ` dicts `
Gold: combine list of dictionaries ` dicts ` with the same keys in each list to a single dictionary
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["dict"], ["elt"], ["generators"], ["Tuple"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Name"], ["ListComp"], ["Name"], ["Subscript"], ["k"], ["elt"], ["generators"], ["k"], ["value"], ["slice"], ["Subscript"], ["comprehension"], ["Name"], ["Index"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["dicts"], ["value"], ["Name"], ["Index"], ["Name"], ["Name"], ["Num"], ["d"], ["value"], ["d"], ["dicts"], ["0"], ["Name"], ["k"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> combine list of dictionaries ` dicts ` with the same keys in each list to a single dictionary <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: combine list of dictionaries ` dicts ` with the same keys in each list to a single dictionary <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` dicts `
Gold: merge a nested dictionary ` dicts ` into a flat dictionary by concatenating nested values with the same key ` k `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["DictComp"], ["key"], ["value"], ["generators"], ["Name"], ["ListComp"], ["comprehension"], ["k"], ["elt"], ["generators"], ["target"], ["iter"], ["ifs"], ["Subscript"], ["comprehension"], ["Name"], ["Subscript"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["k"], ["value"], ["slice"], ["Name"], ["Index"], ["Name"], ["Name"], ["Name"], ["Index"], ["d"], ["value"], ["d"], ["dicts"], ["dicts"], ["value"], ["Name"], ["Num"], ["k"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> merge a nested dictionary ` dicts ` into a flat dictionary by concatenating nested values with the same key ` k ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: merge a nested dictionary ` dicts ` into a flat dictionary by concatenating nested values with the same key ` k ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` myParam ` in a list ` myParam `
Gold: how do i get the url parameter in a flask view
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Attribute"], ["Index"], ["value"], ["args"], ["value"], ["Name"], ["Str"], ["request"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how do i get the url parameter in a flask <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how do i get the url parameter in a flask <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` mylist `
Gold: identify duplicate values in list ` mylist `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["k"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Call"], ["Name"], ["Gt"], ["Num"], ["k"], ["v"], ["list"], ["func"], ["args"], ["keywords"], ["v"], ["1"], ["Attribute"], ["value"], ["items"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Counter"], ["mylist"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> duplicate values in list ` mylist ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> duplicate values in list ` mylist ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` path ` in a list ` path `
Gold: insert directory ' apps ' into directory ` __file__ `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["Call"], ["value"], ["insert"], ["1"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["Call"], ["Str"], ["value"], ["path"], ["value"], ["join"], ["func"], ["args"], ["keywords"], ["<unk>"], ["Name"], ["Attribute"], ["Attribute"], ["Name"], ["sys"], ["value"], ["path"], ["value"], ["dirname"], ["__file__"], ["Name"], ["Attribute"], ["os"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> insert directory ' <unk> ' into directory ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: insert directory ' <unk> ' into directory ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` path ` to a string ` path `
Gold: modify sys.path for python module ` subdir `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["append"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["Call"], ["Str"], ["value"], ["path"], ["value"], ["join"], ["func"], ["args"], ["keywords"], ["<unk>"], ["Name"], ["Attribute"], ["Attribute"], ["Name"], ["sys"], ["value"], ["path"], ["value"], ["dirname"], ["__file__"], ["Name"], ["Attribute"], ["os"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> <unk> for python module ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> <unk> for python module ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` db ` in a string ` db `
Gold: insert a ' None ' value into a sqlite3 table .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Tuple"], ["value"], ["execute"], ["<unk>"], ["elts"], ["Name"], ["NameConstant"], ["db"], ["value"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> insert a ' None ' value into a <unk> table . <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: insert a ' None ' value into a <unk> table . <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` image ` in a list ` image `
Gold: flatten list ` list_of_menuitems `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["comprehension"], ["<unk>"], ["target"], ["iter"], ["ifs"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["<unk>"], ["<unk>"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> flatten list ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: flatten list ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a `
Gold: append elements of a set ` b ` to a list ` a `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["extend"], ["b"], ["Name"], ["a"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append elements of a set ` b ` to a list ` a ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: append elements of a set ` b ` to a list ` a ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a ` <unk> ` '
Gold: append elements of a set to a list in python
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["extend"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["a"], ["list"], ["b"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append elements of a set to a list in python <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: append elements of a set to a list in python <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: write the data of dataframe ` df ` into text file ` np.txt `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Attribute"], ["keyword"], ["value"], ["<unk>"], ["<unk>"], ["value"], ["values"], ["<unk>"], ["value"], ["Name"], ["Name"], ["Str"], ["np"], ["df"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write the data of dataframe ` df ` into text file ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write the data of dataframe ` df ` into text file ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: write content of dataframe ` df ` into text file ' c:\data\pandas.txt '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["keyword"], ["keyword"], ["keyword"], ["value"], ["to_csv"], ["<unk>"], ["header"], ["value"], ["index"], ["value"], ["sep"], ["value"], ["<unk>"], ["value"], ["Name"], ["NameConstant"], ["NameConstant"], ["Str"], ["Str"], ["df"], ["value"], ["value"], ["<pad>"], ["a"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write content of dataframe ` df ` into text file ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write content of dataframe ` df ` into text file ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` - ` in a list ` - `
Gold: split a string ` x ` by last occurrence of character ` - `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Subscript"], ["print"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Str"], ["Num"], ["value"], ["<unk>"], ["-"], ["0"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a string ` x ` by last occurrence of character ` - ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a string ` x ` by last occurrence of character ` - ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` - ` in a list ` - `
Gold: get the last part of a string before the character ' - '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Subscript"], ["print"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Str"], ["Num"], ["Num"], ["value"], ["rsplit"], ["-"], ["1"], ["0"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the last part of a string before the character ' - ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the last part of a string before the character ' - ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` filename ` in a list ` filename `
Gold: upload file using ftp
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["BinOp"], ["Call"], ["value"], ["<unk>"], ["left"], ["op"], ["right"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Add"], ["Name"], ["Name"], ["Name"], ["Str"], ["ftp"], ["<unk>"], ["filename"], ["open"], ["filename"], ["r"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> upload file using <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: upload file using <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` execute_script ` to a string ` execute_script `
Gold: add one to the hidden web element with id ' XYZ ' with selenium python script
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["execute_script"], ["<unk>"], ["Name"], ["browser"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add one to the <unk> web element with id ' <unk> ' with selenium python script <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add one to the <unk> web element with id ' <unk> ' with selenium python script <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` 2 `
Gold: create array containing the maximum value of respective elements of array ` [2, 3, 4] ` and array ` [1, 5, 2] `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["List"], ["value"], ["<unk>"], ["elts"], ["elts"], ["Name"], ["Num"], ["Num"], ["Num"], ["Num"], ["Num"], ["Num"], ["np"], ["2"], ["3"], ["4"], ["1"], ["5"], ["2"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create array containing the maximum value of respective elements of array ` [2, 3, 4] ` and array ` [1, 5, 2] `
Seq Out: create array containing the maximum value of respective elements of array ` [2, 3, 4] ` and array ` [1, 5, 2] ` <eos>

Predict: get a list of a list ` l `
Gold: print a list ` l ` and move first 3 elements to the end of the list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["BinOp"], ["print"], ["left"], ["op"], ["right"], ["Subscript"], ["Add"], ["Subscript"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Slice"], ["Name"], ["Slice"], ["l"], ["lower"], ["upper"], ["step"], ["l"], ["lower"], ["upper"], ["step"], ["Num"], ["Num"], ["3"], ["3"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> print a list ` l ` and move first 3 elements to the end of the list <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: print a list ` l ` and move first 3 elements to the end of the list <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` . ` to a list ` . `
Gold: loop over files in directory ' . '
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["Call"], ["If"], ["fn"], ["func"], ["args"], ["keywords"], ["test"], ["body"], ["orelse"], ["Attribute"], ["Str"], ["Call"], ["Pass"], ["value"], ["listdir"], ["."], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Name"], ["os"], ["value"], ["isfile"], ["fn"], ["Attribute"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> over files in directory ' . ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> over files in directory ' . ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` root ` in a list ` root `
Gold: loop over files in directory ` source `
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Tuple"], ["Call"], ["For"], ["elts"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["Name"], ["Name"], ["Attribute"], ["Name"], ["Name"], ["Name"], ["Pass"], ["root"], ["<unk>"], ["filenames"], ["value"], ["walk"], ["<unk>"], ["f"], ["filenames"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> over files in directory ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> over files in directory ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` 1000 `
Gold: create a random list of integers
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["BinOp"], ["Name"], ["Call"], ["int"], ["left"], ["op"], ["right"], ["i"], ["func"], ["args"], ["keywords"], ["Num"], ["Mult"], ["Call"], ["Name"], ["Num"], ["1000"], ["func"], ["args"], ["keywords"], ["range"], ["10000"], ["Attribute"], ["value"], ["random"], ["Name"], ["random"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a random list of integers <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create a random list of integers <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` %H:%M:%S.%f ` to a string ` %H:%M:%S.%f `
Gold: using % f with strftime ( ) in python to get microseconds
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["strftime"], ["<unk>"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["now"], ["Attribute"], ["value"], ["datetime"], ["Name"], ["datetime"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> using % f with <unk> ( ) in python to get <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: using % f with <unk> ( ) in python to get <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` foo ` in a list ` foo `
Gold: google app engine execute gql query ' SELECT * FROM Schedule WHERE station = $1 ' with parameter ` foo.key() `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Call"], ["value"], ["<unk>"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["db"], ["value"], ["key"], ["Name"], ["foo"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> google app <unk> execute <unk> query ' <unk> ' with parameter ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: google app <unk> execute <unk> query ' <unk> ' with parameter ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: filter rows in pandas starting with alphabet ' f ' using regular expression .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["contains"], ["<unk>"], ["Attribute"], ["value"], ["str"], ["Attribute"], ["value"], ["b"], ["Name"], ["df"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> filter rows in pandas starting with alphabet ' f ' using regular expression . <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: filter rows in pandas starting with alphabet ' f ' using regular expression . <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` col `
Gold: print a 2 dimensional list ` tab ` as a table with delimiters
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["GeneratorExp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["Call"], ["comprehension"], ["[LINE]"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["GeneratorExp"], ["Name"], ["Name"], ["value"], ["join"], ["elt"], ["generators"], ["row"], ["<unk>"], ["Str"], ["Call"], ["comprehension"], ["<pad>"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["str"], ["col"], ["col"], ["row"], ["<pad>"]]
Seq In: <sos> print a 2 dimensional list ` tab ` as a table with <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: print a 2 dimensional list ` tab ` as a table with <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: pandas : delete rows in dataframe ` df ` based on multiple columns values
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["reset_index"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["keyword"], ["value"], ["drop"], ["<unk>"], ["<unk>"], ["value"], ["Call"], ["Str"], ["func"], ["args"], ["keywords"], ["ignore"], ["Attribute"], ["Call"], ["value"], ["set_index"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["df"], ["list"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> pandas : delete rows in dataframe ` df ` based on multiple columns values <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: pandas : delete rows in dataframe ` df ` based on multiple columns values <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` goals ` in a list ` goals `
Gold: format the variables ` self.goals ` and ` self.penalties ` using string formatting
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["Attribute"], ["value"], ["format"], ["value"], ["<unk>"], ["value"], ["<unk>"], ["Str"], ["Name"], ["Name"], ["<unk>"], ["self"], ["self"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> format the variables ` <unk> ` and ` <unk> ` using string formatting <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: format the variables ` <unk> ` and ` <unk> ` using string formatting <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` goals ` in a list ` goals `
Gold: format string " ({} goals, ${}) " with variables ` goals ` and ` penalties `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["Attribute"], ["value"], ["format"], ["value"], ["<unk>"], ["value"], ["<unk>"], ["Str"], ["Name"], ["Name"], ["<unk>"], ["self"], ["self"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> format string " <unk> " with variables ` <unk> ` and ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: format string " <unk> " with variables ` <unk> ` and ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` ({0.goals} goals, ${0.penalties}) ` to a string ` ({0.goals} goals, ${0.penalties}) `
Gold: format string " ({0.goals} goals, ${0.penalties}) "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["format"], ["self"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> format string " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: format string " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` L `
Gold: convert list of lists ` L ` to list of integers
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Name"], ["Name"], ["int"], ["func"], ["args"], ["keywords"], ["x"], ["L"], ["Attribute"], ["GeneratorExp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["Call"], ["comprehension"], ["<pad>"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["str"], ["d"], ["d"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert list of lists ` L ` to list of integers <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert list of lists ` L ` to list of integers <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` L `
Gold: combine elements of each list in list ` L ` into digits of a single integer
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["GeneratorExp"], ["Name"], ["Name"], ["value"], ["join"], ["elt"], ["generators"], ["x"], ["L"], ["Str"], ["Call"], ["comprehension"], ["<pad>"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["str"], ["d"], ["d"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> combine elements of each list in list ` L ` into digits of a single integer <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: combine elements of each list in list ` L ` into digits of a single integer <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` L `
Gold: convert a list of lists ` L ` to list of integers
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["L"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Name"], ["Name"], ["int"], ["func"], ["args"], ["keywords"], ["x"], ["L"], ["Attribute"], ["ListComp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["Call"], ["comprehension"], ["<pad>"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["str"], ["y"], ["y"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a list of lists ` L ` to list of integers <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a list of lists ` L ` to list of integers <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` lines ` to a string ` lines `
Gold: write the elements of list ` lines ` concatenated by special character ' [LINE] ' to file ` myfile `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["write"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Name"], ["myfile"], ["value"], ["join"], ["lines"], ["Str"], ["[LINE]"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write the elements of list ` lines ` <unk> by special character ' [LINE] ' to file ` <unk> ` <pad> <pad> <pad>
Seq Out: write the elements of list ` lines ` <unk> by special character ' [LINE] ' to file ` <unk> ` <eos> <pad> <pad> <pad>

Predict: get a list of a list of list ` X `
Gold: removing an element from a list based on a predicate ' X ' or ' N '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["List"], ["BoolOp"], ["x"], ["elts"], ["op"], ["values"], ["Str"], ["Str"], ["Str"], ["Str"], ["And"], ["Compare"], ["Compare"], ["<unk>"], ["<unk>"], ["<unk>"], ["<unk>"], ["left"], ["ops"], ["comparators"], ["left"], ["ops"], ["comparators"], ["Str"], ["NotIn"], ["Name"], ["Str"], ["NotIn"], ["Name"], ["X"], ["x"], ["N"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> removing an element from a list based on a predicate ' X ' or ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: removing an element from a list based on a predicate ' X ' or ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` text `
Gold: remove duplicate words from a string ` text ` using regex
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["text"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["value"], ["sub"], ["<unk>"], ["\\1"], ["text"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove duplicate words from a string ` text ` using regex <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove duplicate words from a string ` text ` using regex <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: count non zero values in each column in pandas data frame
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sum"], ["axis"], ["value"], ["Call"], ["Num"], ["func"], ["args"], ["keywords"], ["1"], ["Attribute"], ["Name"], ["value"], ["astype"], ["bool"], ["Name"], ["df"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count non zero values in each column in pandas data frame <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count non zero values in each column in pandas data frame <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` (?<!Distillr)\\AcroTray\.exe ` to a string ` (?<!Distillr)\\AcroTray\.exe `
Gold: search for string that matches regular expression pattern ' (?<!Distillr)\\AcroTray\.exe ' in string ' C:\SomeDir\AcroTray.exe '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["search"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> search for string that matches regular expression pattern ' <unk> ' in string ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: search for string that matches regular expression pattern ' <unk> ' in string ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` QH QD JC KD JS ` to a string ` QH QD JC KD JS `
Gold: split string ' QH QD JC KD JS ' into a list on white spaces
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["split"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ' <unk> ' into a list on white spaces <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ' <unk> ' into a list on white spaces <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` line ` to a string ` line `
Gold: search for occurrences of regex pattern ' >.*< ' in xml string ` line `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["value"], ["group"], ["0"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["search"], ["<unk>"], ["line"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> search for occurrences of regex pattern ' <unk> ' in xml string ` line ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: search for occurrences of regex pattern ' <unk> ' in xml string ` line ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` filename ` to a string ` filename `
Gold: erase all the contents of a file ` filename `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["close"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["open"], ["filename"], ["w"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> erase all the contents of a file ` filename ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: erase all the contents of a file ` filename ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` %Y-%m-%d %H:%M:%S.%f ` to a string ` %Y-%m-%d %H:%M:%S.%f `
Gold: convert a string into datetime using the format ' %Y-%m-%d %H:%M:%S.%f '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Str"], ["value"], ["strptime"], ["<unk>"], ["<unk>"], ["Attribute"], ["value"], ["datetime"], ["Name"], ["datetime"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a string into datetime using the format ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a string into datetime using the format ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` thelist `
Gold: find the index of a list with the first element equal to ' 332 ' within the list of lists ` thelist `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["index"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Name"], ["Subscript"], ["Eq"], ["Str"], ["index"], ["item"], ["enumerate"], ["thelist"], ["value"], ["slice"], ["<unk>"], ["Name"], ["Index"], ["item"], ["value"], ["Num"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find the index of a list with the first element equal to ' <unk> ' within the list of lists ` thelist ` <pad> <pad> <pad>
Seq Out: find the index of a list with the first element equal to ' <unk> ' within the list of lists ` thelist ` <eos> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` text `
Gold: lower a string ` text ` and remove non-alphanumeric characters aside from space
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["strip"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["lower"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["text"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> lower a string ` text ` and remove <unk> characters <unk> from space <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: lower a string ` text ` and remove <unk> characters <unk> from space <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` text `
Gold: remove all non-alphanumeric characters except space from a string ` text ` and lower it
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["strip"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["lower"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["text"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove all <unk> characters except space from a string ` text ` and lower it <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove all <unk> characters except space from a string ` text ` and lower it <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` label ` to a string ` label `
Gold: subscript text ' H20 ' with ' 2 ' as subscripted in matplotlib labels for arrays ' x ' and ' y ' .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["keyword"], ["value"], ["plot"], ["x"], ["y"], ["label"], ["value"], ["Name"], ["Str"], ["plt"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> text ' <unk> ' with ' 2 ' as <unk> in matplotlib labels for arrays ' x ' and ' y ' . <pad> <pad>
Seq Out: <unk> text ' <unk> ' with ' 2 ' as <unk> in matplotlib labels for arrays ' x ' and ' y ' . <eos> <pad> <pad>

Predict: get a string ` label ` to a string ` label `
Gold: subscript text ' H20 ' with ' 2 ' as subscripted in matplotlib labels for arrays ' x ' and ' y ' .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["keyword"], ["value"], ["plot"], ["x"], ["y"], ["label"], ["value"], ["Name"], ["Str"], ["plt"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> text ' <unk> ' with ' 2 ' as <unk> in matplotlib labels for arrays ' x ' and ' y ' . <pad> <pad>
Seq Out: <unk> text ' <unk> ' with ' 2 ' as <unk> in matplotlib labels for arrays ' x ' and ' y ' . <eos> <pad> <pad>

Predict: get a list of a list of a list ` mylist `
Gold: loop over a list ` mylist ` if sublists length equals 3
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Compare"], ["x"], ["mylist"], ["left"], ["ops"], ["comparators"], ["Call"], ["Eq"], ["Num"], ["func"], ["args"], ["keywords"], ["3"], ["Name"], ["Name"], ["len"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> over a list ` mylist ` if sublists length equals 3 <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> over a list ` mylist ` if sublists length equals 3 <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` lst `
Gold: initialize a list ` lst ` of 100 objects object ( )
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["lst"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Call"], ["<unk>"], ["_"], ["func"], ["args"], ["keywords"], ["Name"], ["Num"], ["range"], ["100"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> initialize a list ` lst ` of 100 objects object ( ) <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: initialize a list ` lst ` of 100 objects object ( ) <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` lst `
Gold: create list ` lst ` containing 100 instances of object ` Object `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["lst"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Call"], ["<unk>"], ["i"], ["func"], ["args"], ["keywords"], ["Name"], ["Num"], ["range"], ["100"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create list ` lst ` containing 100 instances of object ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create list ` lst ` containing 100 instances of object ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` get_attribute ` to a string ` get_attribute `
Gold: get the content of child tag with ` href ` attribute whose parent has css ` someclass `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["href"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["find_element_by_css_selector"], ["<unk>"], ["Attribute"], ["value"], ["driver"], ["Name"], ["self"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the content of child tag with ` <unk> ` attribute whose <unk> has <unk> ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the content of child tag with ` <unk> ` attribute whose <unk> has <unk> ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df2 ` to a string ` df2 `
Gold: joining data from dataframe ` df1 ` with data from dataframe ` df2 ` based on matching values of column ' Date_Time ' in both dataframes
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["keyword"], ["value"], ["merge"], ["df2"], ["on"], ["value"], ["Name"], ["Str"], ["df1"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> data from dataframe ` df1 ` with data from dataframe ` df2 ` based on matching values of column ' <unk> ' in both dataframes
Seq Out: <unk> data from dataframe ` df1 ` with data from dataframe ` df2 ` based on matching values of column ' <unk> ' in both dataframes <eos>

Predict: get a string ` str1 ` to a string ` str1 `
Gold: use ` first string is: %s, second one is: %s ` operator to print variable values ` str1 ` inside a first string is: %s, second one is: %s
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["BinOp"], ["left"], ["op"], ["right"], ["Str"], ["Mod"], ["Tuple"], ["<unk>"], ["elts"], ["Name"], ["Str"], ["str1"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> use ` <unk> ` <unk> to print variable values ` str1 ` inside a <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: use ` <unk> ` <unk> to print variable values ` str1 ` inside a <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` $$TEXT$$ `
Gold: split a string by a delimiter in python
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Name"], ["Call"], ["value"], ["strip"], ["x"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["x"], ["value"], ["split"], ["<unk>"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a string by a delimiter in python <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a string by a delimiter in python <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` directory `
Gold: check if directory ` directory ` exists and create it if necessary
Tree: [["Module"], ["body"], ["If"], ["test"], ["body"], ["orelse"], ["UnaryOp"], ["Expr"], ["op"], ["operand"], ["value"], ["Not"], ["Call"], ["Call"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Attribute"], ["Name"], ["value"], ["exists"], ["directory"], ["value"], ["<unk>"], ["directory"], ["Attribute"], ["Name"], ["value"], ["path"], ["os"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if directory ` directory ` exists and create it if <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if directory ` directory ` exists and create it if <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` name `
Gold: check if a directory ` path ` exists and create it if necessary
Tree: [["Module"], ["body"], ["Try"], ["body"], ["handlers"], ["orelse"], ["finalbody"], ["Expr"], ["ExceptHandler"], ["value"], ["type"], ["name"], ["body"], ["Call"], ["Name"], ["If"], ["func"], ["args"], ["keywords"], ["<unk>"], ["test"], ["body"], ["orelse"], ["Attribute"], ["Name"], ["UnaryOp"], ["Raise"], ["value"], ["<unk>"], ["path"], ["op"], ["operand"], ["exc"], ["cause"], ["Name"], ["Not"], ["Call"], ["os"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["<unk>"], ["path"], ["Attribute"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"]]
Seq In: <sos> check if a directory ` path ` exists and create it if <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if a directory ` path ` exists and create it if <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` mkpath `
Gold: check if a directory ` path ` exists and create it if necessary
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["<unk>"], ["path"], ["Attribute"], ["value"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if a directory ` path ` exists and create it if <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if a directory ` path ` exists and create it if <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` exception ` to a string ` exception `
Gold: check if a directory ` path ` exists and create it if necessary
Tree: [["Module"], ["body"], ["Try"], ["body"], ["handlers"], ["orelse"], ["finalbody"], ["Expr"], ["ExceptHandler"], ["value"], ["type"], ["<unk>"], ["body"], ["Call"], ["Name"], ["If"], ["func"], ["args"], ["keywords"], ["<unk>"], ["test"], ["body"], ["orelse"], ["Attribute"], ["Name"], ["Compare"], ["Raise"], ["value"], ["<unk>"], ["path"], ["left"], ["ops"], ["comparators"], ["exc"], ["cause"], ["Name"], ["Attribute"], ["NotEq"], ["Attribute"], ["os"], ["value"], ["<unk>"], ["value"], ["<unk>"], ["Name"], ["Name"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if a directory ` path ` exists and create it if <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if a directory ` path ` exists and create it if <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` text `
Gold: replace a separate word ' H3 ' by ' H1 ' in a string ' text '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["value"], ["sub"], ["<unk>"], ["<unk>"], ["text"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> replace a separate word ' <unk> ' by ' <unk> ' in a string ' text ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: replace a separate word ' <unk> ' by ' <unk> ' in a string ' text ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` \D ` to a string ` \D `
Gold: substitute ascii letters in string ' aas30dsa20 ' with empty string ' '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Str"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> substitute ascii letters in string ' <unk> ' with empty string ' ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: substitute ascii letters in string ' <unk> ' with empty string ' ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` x `
Gold: get digits only from a string ` aas30dsa20 ` using lambda function
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["ListComp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["Name"], ["comprehension"], ["<pad>"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["Str"], ["Call"], ["x"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["isdigit"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get digits only from a string ` <unk> ` using lambda function <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get digits only from a string ` <unk> ` using lambda function <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` soup ` to a string ` soup `
Gold: access a tag called " name " in beautifulsoup ` soup `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["print"], ["value"], ["string"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["find"], ["name"], ["Name"], ["soup"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> access a tag <unk> " name " in beautifulsoup ` soup ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: access a tag <unk> " name " in beautifulsoup ` soup ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` _id `
Gold: get a dictionary ` records ` of key-value pairs in pymongo cursor ` cursor `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["records"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["dict"], ["elt"], ["generators"], ["Tuple"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Subscript"], ["Name"], ["Name"], ["Name"], ["value"], ["slice"], ["<unk>"], ["<unk>"], ["cursor"], ["Name"], ["Index"], ["<unk>"], ["value"], ["Str"], ["_id"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get a dictionary ` records ` of key-value pairs in <unk> cursor ` cursor ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get a dictionary ` records ` of key-value pairs in <unk> cursor ` cursor ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` B ` to a string ` B `
Gold: create new matrix object by concatenating data from matrix a and matrix b
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["value"], ["concatenate"], ["elts"], ["Name"], ["Name"], ["Name"], ["np"], ["A"], ["B"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create new matrix object by concatenating data from matrix a and matrix b <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create new matrix object by concatenating data from matrix a and matrix b <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` B ` to a string ` B `
Gold: concat two matrices ` A ` and ` B ` in numpy
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["value"], ["<unk>"], ["elts"], ["Name"], ["Name"], ["Name"], ["np"], ["A"], ["B"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> two <unk> ` A ` and ` B ` in numpy <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> two <unk> ` A ` and ` B ` in numpy <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` st_size `
Gold: get the characters count in a file ` filepath `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Attribute"], ["value"], ["<unk>"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["stat"], ["<unk>"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the characters count in a file ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the characters count in a file ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` l `
Gold: count the occurrences of item " a " in list ` l `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["count"], ["a"], ["Name"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count the occurrences of item " a " in list ` l ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count the occurrences of item " a " in list ` l ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` l `
Gold: count the occurrences of items in list ` l `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Counter"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count the occurrences of items in list ` l ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count the occurrences of items in list ` l ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` l `
Gold: count the occurrences of items in list ` l `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["List"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Name"], ["Call"], ["x"], ["func"], ["args"], ["keywords"], ["x"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["Name"], ["value"], ["count"], ["x"], ["set"], ["l"], ["Name"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count the occurrences of items in list ` l ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count the occurrences of items in list ` l ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` l `
Gold: count the occurrences of items in list ` l `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["dict"], ["elt"], ["generators"], ["Tuple"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Name"], ["Call"], ["x"], ["func"], ["args"], ["keywords"], ["x"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["Name"], ["value"], ["count"], ["x"], ["set"], ["l"], ["Name"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count the occurrences of items in list ` l ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count the occurrences of items in list ` l ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` l `
Gold: count the occurrences of item " b " in list ` l `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["count"], ["b"], ["Name"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count the occurrences of item " b " in list ` l ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count the occurrences of item " b " in list ` l ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` srcfile ` to a string ` srcfile `
Gold: copy file ` srcfile ` to directory ` dstdir `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["value"], ["copy"], ["<unk>"], ["<unk>"], ["Name"], ["shutil"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> copy file ` <unk> ` to directory ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: copy file ` <unk> ` to directory ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` k `
Gold: find the key associated with the largest value in dictionary ` x ` whilst key is non-zero value
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["max"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["k"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Attribute"], ["Name"], ["NotEq"], ["Num"], ["k"], ["v"], ["value"], ["items"], ["v"], ["0"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find the key associated with the largest value in dictionary ` x ` whilst key is <unk> value <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find the key associated with the largest value in dictionary ` x ` whilst key is <unk> value <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` k `
Gold: get the largest key whose not associated with value of 0 in dictionary ` x `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["GeneratorExp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["k"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Attribute"], ["Name"], ["NotEq"], ["Num"], ["k"], ["v"], ["value"], ["items"], ["v"], ["0"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the largest key whose not associated with value of 0 in dictionary ` x ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the largest key whose not associated with value of 0 in dictionary ` x ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` k `
Gold: get the largest key in a dictionary ` x ` with non-zero value
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["max"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["k"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Attribute"], ["Name"], ["NotEq"], ["Num"], ["k"], ["v"], ["value"], ["items"], ["v"], ["0"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the largest key in a dictionary ` x ` with <unk> value <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the largest key in a dictionary ` x ` with <unk> value <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` file `
Gold: put the curser at beginning of the file
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["value"], ["<unk>"], ["0"], ["Name"], ["file"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> put the <unk> at beginning of the file <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: put the <unk> at beginning of the file <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` df `
Gold: combine values from column ' b ' and column ' a ' of dataframe ` df ` into column ' c ' of datafram ` df `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Subscript"], ["Call"], ["value"], ["slice"], ["func"], ["args"], ["keywords"], ["Name"], ["Index"], ["Attribute"], ["Attribute"], ["Subscript"], ["Subscript"], ["df"], ["value"], ["value"], ["where"], ["value"], ["isnull"], ["value"], ["slice"], ["value"], ["slice"], ["Str"], ["Name"], ["Subscript"], ["Name"], ["Index"], ["Name"], ["Index"], ["c"], ["np"], ["value"], ["slice"], ["df"], ["value"], ["df"], ["value"], ["Name"], ["Index"], ["Str"], ["Str"], ["df"], ["value"], ["b"], ["a"], ["Str"], ["a"], ["<pad>"]]
Seq In: <sos> combine values from column ' b ' and column ' a ' of dataframe ` df ` into column ' c ' of datafram ` df `
Seq Out: combine values from column ' b ' and column ' a ' of dataframe ` df ` into column ' c ' of datafram ` df ` <eos>

Predict: get a list ` d ` to a list ` d `
Gold: remove key ' ele ' from dictionary ` d `
Tree: [["Module"], ["body"], ["Delete"], ["targets"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["d"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove key ' <unk> ' from dictionary ` d ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove key ' <unk> ' from dictionary ` d ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` MyModel ` to a string ` MyModel `
Gold: update datetime field in ` MyModel ` to be the existing ` timestamp ` plus 100 years
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["update"], ["timestamp"], ["value"], ["Attribute"], ["BinOp"], ["value"], ["objects"], ["left"], ["op"], ["right"], ["Name"], ["Call"], ["Add"], ["Call"], ["MyModel"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Name"], ["keyword"], ["F"], ["timestamp"], ["timedelta"], ["days"], ["value"], ["Num"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> update datetime field in ` MyModel ` to be the <unk> ` timestamp ` <unk> 100 <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: update datetime field in ` MyModel ` to be the <unk> ` timestamp ` <unk> 100 <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` it ` to a string ` it `
Gold: merge list ` ['it'] ` and list ` ['was'] ` and list ` ['annoying'] ` into one list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["BinOp"], ["left"], ["op"], ["right"], ["BinOp"], ["Add"], ["List"], ["left"], ["op"], ["right"], ["elts"], ["List"], ["Add"], ["List"], ["Str"], ["elts"], ["elts"], ["<unk>"], ["Str"], ["Str"], ["it"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> merge list ` <unk> ` and list ` <unk> ` and list ` <unk> ` into one list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: merge list ` <unk> ` and list ` <unk> ` and list ` <unk> ` into one list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` zfill ` to a string ` x `
Gold: increment a value with leading zeroes in a number ` x `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Call"], ["Name"], ["Name"], ["func"], ["args"], ["keywords"], ["len"], ["x"], ["Name"], ["BinOp"], ["str"], ["left"], ["op"], ["right"], ["Call"], ["Add"], ["Num"], ["func"], ["args"], ["keywords"], ["1"], ["Name"], ["Name"], ["int"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> a value with <unk> <unk> in a number ` x ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> a value with <unk> <unk> in a number ` x ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` in a list ` df `
Gold: check if a pandas dataframe ` df ` 's index is sorted
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Compare"], ["all"], ["left"], ["ops"], ["comparators"], ["Subscript"], ["LtE"], ["Subscript"], ["value"], ["slice"], ["value"], ["slice"], ["Attribute"], ["Slice"], ["Attribute"], ["Slice"], ["value"], ["index"], ["lower"], ["upper"], ["step"], ["value"], ["index"], ["lower"], ["upper"], ["step"], ["Name"], ["UnaryOp"], ["Name"], ["Num"], ["df"], ["op"], ["operand"], ["df"], ["1"], ["USub"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if a pandas dataframe ` df ` 's index is sorted <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if a pandas dataframe ` df ` 's index is sorted <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` t `
Gold: convert tuple ` t ` to list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["list"], ["t"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert tuple ` t ` to list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert tuple ` t ` to list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` l `
Gold: convert list ` t ` to tuple
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["tuple"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert list ` t ` to tuple <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert list ` t ` to tuple <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` level1 ` to a string ` level1 `
Gold: convert tuple ` level1 ` to list
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["map"], ["list"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert tuple ` <unk> ` to list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert tuple ` <unk> ` to list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` dataobject ` to a string ` dataobject `
Gold: send the output of pprint object ` dataobject ` to file ` logFile `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["value"], ["pprint"], ["<unk>"], ["<unk>"], ["Name"], ["pprint"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> send the output of <unk> object ` <unk> ` to file ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: send the output of <unk> object ` <unk> ` to file ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: get index of rows in column ' BoolCol '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Attribute"], ["Index"], ["value"], ["loc"], ["value"], ["Name"], ["Subscript"], ["df"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get index of rows in column ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get index of rows in column ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: create a list containing the indexes of rows where the value of column ' BoolCol ' in dataframe ` df ` are equal to true
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Attribute"], ["Index"], ["value"], ["iloc"], ["value"], ["Name"], ["Call"], ["df"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Subscript"], ["value"], ["<unk>"], ["value"], ["slice"], ["Name"], ["Name"], ["Index"], ["np"], ["df"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a list containing the indexes of rows where the value of column ' <unk> ' in dataframe ` df ` are equal to true <pad> <pad>
Seq Out: create a list containing the indexes of rows where the value of column ' <unk> ' in dataframe ` df ` are equal to true <eos> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: get list of indexes of rows where column ' BoolCol ' values match true
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["tolist"], ["Attribute"], ["value"], ["index"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["Compare"], ["left"], ["ops"], ["comparators"], ["Subscript"], ["Eq"], ["NameConstant"], ["value"], ["slice"], ["True"], ["Name"], ["Index"], ["df"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get list of indexes of rows where column ' <unk> ' values match true <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get list of indexes of rows where column ' <unk> ' values match true <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: get index of rows in dataframe ` df ` which column ' BoolCol ' matches value true
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["tolist"], ["Attribute"], ["value"], ["index"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get index of rows in dataframe ` df ` which column ' <unk> ' matches value true <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get index of rows in dataframe ` df ` which column ' <unk> ' matches value true <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` owd `
Gold: change working directory to the directory ` owd `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["chdir"], ["<unk>"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> change working directory to the directory ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: change working directory to the directory ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` INSERT INTO test VALUES (?, 'bar') ` in a string ` c `
Gold: insert data from a string ` testfield ` to sqlite db ` c `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Tuple"], ["value"], ["execute"], ["<unk>"], ["elts"], ["Name"], ["Name"], ["c"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> insert data from a string ` <unk> ` to <unk> db ` c ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: insert data from a string ` <unk> ` to <unk> db ` c ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` \x89[LINE] ` to a string ` \x89[LINE] `
Gold: decode string " \x89[LINE] " into a normal string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["decode"], ["string_escape"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> decode string " <unk> " into a <unk> string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: decode string " <unk> " into a <unk> string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` raw_string ` to a string ` raw_string `
Gold: convert a raw string ` raw_string ` into a normal string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["decode"], ["string_escape"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a raw string ` <unk> ` into a <unk> string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a raw string ` <unk> ` into a <unk> string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` raw_byte_string ` to a string ` raw_byte_string `
Gold: convert a raw string ` raw_byte_string ` into a normal string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["decode"], ["unicode_escape"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a raw string ` <unk> ` into a <unk> string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a raw string ` <unk> ` into a <unk> string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` s `
Gold: split a string ` s ` with into all strings of repeated characters
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Num"], ["Name"], ["Call"], ["value"], ["group"], ["0"], ["m"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["Name"], ["m"], ["value"], ["finditer"], ["<unk>"], ["s"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a string ` s ` with into all strings of repeated characters <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a string ` s ` with into all strings of repeated characters <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 100 ` in a list ` plt `
Gold: scatter a plot with x , y position of ` np.random.randn(100) ` and face color equal to none
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["Call"], ["keyword"], ["value"], ["scatter"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["<unk>"], ["value"], ["Name"], ["Attribute"], ["Num"], ["Attribute"], ["Num"], ["Str"], ["plt"], ["value"], ["<unk>"], ["100"], ["value"], ["<unk>"], ["100"], ["<unk>"], ["Attribute"], ["Attribute"], ["value"], ["random"], ["value"], ["random"], ["Name"], ["Name"], ["np"], ["np"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> a plot with x , y position of ` <unk> ` and <unk> color equal to none <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> a plot with x , y position of ` <unk> ` and <unk> color equal to none <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 100 ` in a list ` plt `
Gold: do a scatter plot with empty circles
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["Call"], ["Str"], ["keyword"], ["value"], ["plot"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["o"], ["<unk>"], ["value"], ["Name"], ["Attribute"], ["Num"], ["Attribute"], ["Num"], ["Str"], ["plt"], ["value"], ["<unk>"], ["100"], ["value"], ["<unk>"], ["100"], ["<unk>"], ["Attribute"], ["Attribute"], ["value"], ["random"], ["value"], ["random"], ["Name"], ["Name"], ["np"], ["np"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> do a <unk> plot with empty <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: do a <unk> plot with empty <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` soup ` to a string ` soup `
Gold: remove a div with a id ` main-content ` using beautifulsoup
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["<unk>"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["value"], ["find"], ["div"], ["id"], ["value"], ["Name"], ["Str"], ["soup"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove a div with a id ` <unk> ` using beautifulsoup <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove a div with a id ` <unk> ` using beautifulsoup <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: filter rows containing key word ` ball ` in column ` ids `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["contains"], ["<unk>"], ["Attribute"], ["value"], ["str"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> filter rows containing key word ` <unk> ` in column ` ids ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: filter rows containing key word ` <unk> ` in column ` ids ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df `
Gold: convert index at level 0 into a column in dataframe ` df `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["value"], ["reset_index"], ["level"], ["value"], ["inplace"], ["value"], ["Name"], ["Num"], ["NameConstant"], ["df"], ["0"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert index at level 0 into a column in dataframe ` df ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert index at level 0 into a column in dataframe ` df ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` df ` to a list ` df `
Gold: add indexes in a data frame ` df ` to a column ` index1 `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Subscript"], ["Attribute"], ["value"], ["slice"], ["value"], ["index"], ["Name"], ["Index"], ["Name"], ["df"], ["value"], ["df"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add indexes in a data frame ` df ` to a column ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add indexes in a data frame ` df ` to a column ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: convert pandas index in a dataframe to columns
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["reset_index"], ["level"], ["value"], ["Name"], ["List"], ["df"], ["elts"], ["Str"], ["Str"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert pandas index in a dataframe to columns <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert pandas index in a dataframe to columns <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` b ` to a list ` b `
Gold: get reverse of list items from list ' b ' using extended slicing
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Subscript"], ["comprehension"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["Name"], ["Slice"], ["Name"], ["Name"], ["x"], ["lower"], ["upper"], ["step"], ["x"], ["b"], ["UnaryOp"], ["op"], ["operand"], ["USub"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get reverse of list items from list ' b ' using <unk> <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get reverse of list items from list ' b ' using <unk> <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` array `
Gold: join each element in array ` a ` with element at the same index in array ` b ` as a tuple
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["ListComp"], ["value"], ["array"], ["elt"], ["generators"], ["Name"], ["Call"], ["comprehension"], ["np"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Tuple"], ["Call"], ["zip"], ["x"], ["y"], ["elts"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["x"], ["y"], ["zip"], ["a"], ["b"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> join each element in array ` a ` with element at the same index in array ` b ` as a tuple <pad> <pad> <pad>
Seq Out: join each element in array ` a ` with element at the same index in array ` b ` as a tuple <eos> <pad> <pad> <pad>

Predict: get a list of a list ` a ` to a list ` a `
Gold: zip two 2-d arrays ` a ` and ` b `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["value"], ["reshape"], ["value"], ["shape"], ["Call"], ["Name"], ["func"], ["args"], ["keywords"], ["a"], ["Attribute"], ["Call"], ["keyword"], ["value"], ["array"], ["func"], ["args"], ["keywords"], ["dtype"], ["value"], ["Name"], ["Name"], ["Call"], ["Call"], ["Str"], ["np"], ["zip"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["<unk>"], ["Attribute"], ["Attribute"], ["value"], ["ravel"], ["value"], ["ravel"], ["Name"], ["Name"], ["a"], ["b"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> zip two <unk> arrays ` a ` and ` b ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: zip two <unk> arrays ` a ` and ` b ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` , `
Gold: convert list ` list_of_ints ` into a comma separated string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["ListComp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["Call"], ["comprehension"], [","], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["str"], ["i"], ["i"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert list ` <unk> ` into a comma separated string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert list ` <unk> ` into a comma separated string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` url `
Gold: send a post request with raw data ` DATA ` and basic authentication with ` username ` and ` password `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["keyword"], ["keyword"], ["keyword"], ["value"], ["post"], ["url"], ["data"], ["value"], ["headers"], ["value"], ["<unk>"], ["value"], ["Name"], ["Name"], ["Name"], ["Tuple"], ["requests"], ["<unk>"], ["<unk>"], ["elts"], ["Name"], ["Name"], ["username"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> send a post request with raw data ` <unk> ` and <unk> <unk> with ` username ` and ` <unk> ` <pad> <pad> <pad> <pad>
Seq Out: send a post request with raw data ` <unk> ` and <unk> <unk> with ` username ` and ` <unk> ` <eos> <pad> <pad> <pad> <pad>

Predict: get a string ` abcd}def} ` to a string ` abcd}def} `
Gold: find last occurrence of character ' } ' in string " abcd}def} "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["rfind"], ["}"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find last occurrence of character ' } ' in string " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find last occurrence of character ' } ' in string " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` 2 `
Gold: iterate ove list ` [1, 2, 3] ` using list comprehension
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["ListComp"], ["print"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["item"], ["target"], ["iter"], ["ifs"], ["Name"], ["List"], ["item"], ["elts"], ["Num"], ["Num"], ["Num"], ["1"], ["2"], ["3"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> iterate <unk> list ` [1, 2, 3] ` using list comprehension <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: iterate <unk> list ` [1, 2, 3] ` using list comprehension <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` d ` to list ` d `
Gold: extract all the values with keys ' x ' and ' y ' from a list of dictionaries ` d ` to list of tuples
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Tuple"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Subscript"], ["Subscript"], ["Name"], ["Name"], ["value"], ["slice"], ["value"], ["slice"], ["x"], ["d"], ["Name"], ["Index"], ["Name"], ["Index"], ["x"], ["value"], ["x"], ["value"], ["Str"], ["Str"], ["x"], ["y"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> extract all the values with keys ' x ' and ' y ' from a list of dictionaries ` d ` to list of tuples
Seq Out: extract all the values with keys ' x ' and ' y ' from a list of dictionaries ` d ` to list of tuples <eos>

Predict: get a list of a list ` basename ` in a list ` basename `
Gold: get the filename without the extension from file ' hemanth.txt '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Subscript"], ["print"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Call"], ["Num"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["0"], ["Attribute"], ["Attribute"], ["Str"], ["value"], ["path"], ["value"], ["basename"], ["<unk>"], ["Name"], ["Attribute"], ["os"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the filename without the extension from file ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the filename without the extension from file ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` 2 `
Gold: create a dictionary by adding each two adjacent elements in tuple ` x ` as key/value pair to it
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["dict"], ["elt"], ["generators"], ["Subscript"], ["comprehension"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["Name"], ["Slice"], ["Name"], ["Call"], ["x"], ["lower"], ["upper"], ["step"], ["i"], ["func"], ["args"], ["keywords"], ["Name"], ["BinOp"], ["Name"], ["Num"], ["Call"], ["Num"], ["i"], ["left"], ["op"], ["right"], ["range"], ["0"], ["func"], ["args"], ["keywords"], ["2"], ["Name"], ["Add"], ["Num"], ["Name"], ["Name"], ["i"], ["2"], ["len"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a dictionary by adding each two adjacent elements in tuple ` x ` as key/value pair to it <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create a dictionary by adding each two adjacent elements in tuple ` x ` as key/value pair to it <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` F ` in a list ` G `
Gold: create a list containing flattened list ` [['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']] `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["values"], ["func"], ["args"], ["keywords"], ["Name"], ["List"], ["List"], ["sum"], ["elts"], ["elts"], ["List"], ["List"], ["List"], ["elts"], ["elts"], ["elts"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["A"], ["B"], ["C"], ["D"], ["<unk>"], ["F"], ["G"], ["H"], ["I"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a list containing <unk> list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create a list containing <unk> list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: select rows in a dataframe ` df ` column ' closing_price ' between two values 99 and 101
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Subscript"], ["df"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["BinOp"], ["left"], ["op"], ["right"], ["Compare"], ["BitAnd"], ["Compare"], ["left"], ["ops"], ["comparators"], ["left"], ["ops"], ["comparators"], ["Subscript"], ["<unk>"], ["Num"], ["Subscript"], ["LtE"], ["Num"], ["value"], ["slice"], ["<unk>"], ["value"], ["slice"], ["<unk>"], ["Name"], ["Index"], ["Name"], ["Index"], ["df"], ["value"], ["df"], ["value"], ["Str"], ["Str"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> select rows in a dataframe ` df ` column ' <unk> ' between two values <unk> and <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: select rows in a dataframe ` df ` column ' <unk> ' between two values <unk> and <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` df ` to a string ` df `
Gold: replace all occurences of newlines ` [LINE] ` with ` <br> ` in dataframe ` df `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Dict"], ["keyword"], ["value"], ["replace"], ["keys"], ["values"], ["regex"], ["value"], ["Name"], ["Str"], ["Str"], ["NameConstant"], ["df"], ["[LINE]"], ["<unk>"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> replace all <unk> of newlines ` [LINE] ` with ` <unk> ` in dataframe ` df ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: replace all <unk> of newlines ` [LINE] ` with ` <unk> ` in dataframe ` df ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` df ` to a string ` df `
Gold: replace all occurrences of a string ` [LINE] ` by string ` <br> ` in a pandas data frame ` df `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Dict"], ["keyword"], ["value"], ["replace"], ["keys"], ["values"], ["regex"], ["value"], ["Name"], ["Str"], ["Str"], ["NameConstant"], ["df"], ["[LINE]"], ["<unk>"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> replace all occurrences of a string ` [LINE] ` by string ` <unk> ` in a pandas data frame ` df ` <pad> <pad> <pad>
Seq Out: replace all occurrences of a string ` [LINE] ` by string ` <unk> ` in a pandas data frame ` df ` <eos> <pad> <pad> <pad>

Predict: get a list of a list of list ` word `
Gold: create a list containing each two adjacent letters in string ` word ` as its elements
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["BinOp"], ["comprehension"], ["left"], ["op"], ["right"], ["target"], ["iter"], ["ifs"], ["Name"], ["Add"], ["Name"], ["Tuple"], ["Call"], ["x"], ["y"], ["elts"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["Name"], ["Subscript"], ["x"], ["y"], ["zip"], ["word"], ["value"], ["slice"], ["Name"], ["Slice"], ["word"], ["lower"], ["upper"], ["step"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a list containing each two adjacent letters in string ` word ` as its elements <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create a list containing each two adjacent letters in string ` word ` as its elements <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` word ` with a list ` word `
Gold: get a list of pairs from a string ` word ` using lambda function
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Name"], ["Lambda"], ["Subscript"], ["Subscript"], ["map"], ["args"], ["body"], ["value"], ["slice"], ["value"], ["slice"], ["arguments"], ["BinOp"], ["Name"], ["Slice"], ["Name"], ["Slice"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["left"], ["op"], ["right"], ["word"], ["lower"], ["upper"], ["step"], ["word"], ["lower"], ["upper"], ["step"], ["arg"], ["arg"], ["Name"], ["Add"], ["Name"], ["UnaryOp"], ["Num"], ["x"], ["annotation"], ["y"], ["annotation"], ["x"], ["y"], ["op"], ["operand"], ["1"], ["USub"], ["Num"], ["1"], ["<pad>"]]
Seq In: <sos> get a list of pairs from a string ` word ` using lambda function <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get a list of pairs from a string ` word ` using lambda function <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` (https?://[^\s]+) ` to a string ` (https?://[^\s]+) `
Gold: extract a url from a string ` myString `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["myString"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> extract a url from a string ` myString ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: extract a url from a string ` myString ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` url ` to a string ` url `
Gold: extract a url from a string ` myString `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["group"], ["url"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["search"], ["<unk>"], ["myString"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> extract a url from a string ` myString ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: extract a url from a string ` myString ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` mystring ` to a string ` mystring `
Gold: remove all special characters , punctuation and spaces from a string ` mystring ` using regex
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["mystring"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove all special characters , punctuation and spaces from a string ` mystring ` using regex <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove all special characters , punctuation and spaces from a string ` mystring ` using regex <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` periods ` to a list ` periods `
Gold: create a datetimeindex containing 13 periods of the second friday of each month starting from date ' 2016-01-01 '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["keyword"], ["value"], ["<unk>"], ["<unk>"], ["freq"], ["value"], ["<unk>"], ["value"], ["Name"], ["Str"], ["Num"], ["pd"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a <unk> containing <unk> periods of the second <unk> of each month starting from date ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create a <unk> containing <unk> periods of the second <unk> of each month starting from date ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` matrix `
Gold: create multidimensional array ` matrix ` with 3 rows and 2 columns in python
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["List"], ["matrix"], ["elts"], ["List"], ["List"], ["List"], ["elts"], ["elts"], ["elts"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["a"], ["b"], ["c"], ["d"], ["e"], ["f"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create multidimensional array ` matrix ` with 3 rows and 2 columns in python <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create multidimensional array ` matrix ` with 3 rows and 2 columns in python <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` mystring ` to a string ` mystring `
Gold: replace spaces with underscore
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["<pad>"], ["_"], ["Name"], ["mystring"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> replace spaces with <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: replace spaces with <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` mydir/myfile.txt ` to a string ` mydir/myfile.txt `
Gold: get an absolute file path of file ' mydir/myfile.txt '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["abspath"], ["<unk>"], ["Attribute"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get an absolute file path of file ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get an absolute file path of file ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` my_string ` to a string ` my_string `
Gold: split string ` my_string ` on white spaces
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["join"], ["func"], ["args"], ["keywords"], ["Str"], ["Attribute"], ["<pad>"], ["value"], ["split"], ["Name"], ["my_string"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ` my_string ` on white spaces <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ` my_string ` on white spaces <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` filename `
Gold: get filename without extension from file ` filename `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Name"], ["Num"], ["value"], ["<unk>"], ["filename"], ["0"], ["Attribute"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get filename without extension from file ` filename ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get filename without extension from file ` filename ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` l `
Gold: get a list containing the sum of each element ` i ` in list ` l ` plus the previous elements
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Subscript"], ["Tuple"], ["Call"], ["sum"], ["value"], ["slice"], ["elts"], ["func"], ["args"], ["keywords"], ["Name"], ["Slice"], ["Name"], ["Name"], ["Name"], ["Name"], ["l"], ["lower"], ["upper"], ["step"], ["i"], ["_"], ["enumerate"], ["l"], ["Name"], ["i"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get a list containing the sum of each element ` i ` in list ` l ` <unk> the previous elements <pad> <pad> <pad> <pad>
Seq Out: get a list containing the sum of each element ` i ` in list ` l ` <unk> the previous elements <eos> <pad> <pad> <pad> <pad>

Predict: get a string ` / ` to a string ` / `
Gold: split a string ` Docs/src/Scripts/temp ` by ` / ` keeping ` / ` in the result
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["split"], ["<unk>"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["/"], ["<unk>"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a string ` <unk> ` by ` / ` keeping ` / ` in the result <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a string ` <unk> ` by ` / ` keeping ` / ` in the result <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` shuffle ` to a string ` shuffle `
Gold: shuffle columns of an numpy array ' r '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["Name"], ["value"], ["random"], ["value"], ["transpose"], ["r"], ["Name"], ["Name"], ["np"], ["np"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> columns of an numpy array ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> columns of an numpy array ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` df ` to a list ` df ` with the list
Gold: copy all values in a column ' B ' to a new column ' D ' in a pandas data frame ' df '
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Subscript"], ["Subscript"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Index"], ["Name"], ["Index"], ["df"], ["value"], ["df"], ["value"], ["Str"], ["Str"], ["D"], ["B"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> copy all values in a column ' B ' to a new column ' D ' in a pandas data frame ' df ' <pad>
Seq Out: copy all values in a column ' B ' to a new column ' D ' in a pandas data frame ' df ' <eos> <pad>

Predict: get a list of a list ` B ` to a list ` B `
Gold: find a value within nested json ' data ' where the key inside another key ' B ' is unknown .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Subscript"], ["Index"], ["value"], ["slice"], ["value"], ["Subscript"], ["Index"], ["Str"], ["value"], ["slice"], ["value"], ["<unk>"], ["Subscript"], ["Index"], ["Num"], ["value"], ["slice"], ["value"], ["0"], ["Call"], ["Index"], ["Str"], ["func"], ["args"], ["keywords"], ["value"], ["<unk>"], ["Name"], ["Call"], ["Num"], ["list"], ["func"], ["args"], ["keywords"], ["0"], ["Attribute"], ["value"], ["values"], ["Subscript"], ["value"], ["slice"], ["Subscript"], ["Index"], ["value"], ["slice"], ["value"], ["Name"], ["Index"], ["Str"], ["data"], ["value"], ["B"], ["Str"], ["A"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find a value within nested json ' data ' where the key inside another key ' B ' is <unk> . <pad> <pad> <pad> <pad>
Seq Out: find a value within nested json ' data ' where the key inside another key ' B ' is <unk> . <eos> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` string `
Gold: check characters of string ` string ` are true predication of function ` predicate `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["all"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["<unk>"], ["x"], ["x"], ["string"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check characters of string ` string ` are true <unk> of function ` predicate ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check characters of string ` string ` are true <unk> of function ` predicate ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` / ` to a string ` / `
Gold: determine number of files on a drive with python
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["BinOp"], ["left"], ["op"], ["right"], ["Attribute"], ["Sub"], ["Attribute"], ["value"], ["<unk>"], ["value"], ["<unk>"], ["Call"], ["Call"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["/"], ["value"], ["<unk>"], ["/"], ["Name"], ["Name"], ["os"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> determine number of files on a <unk> with python <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: determine number of files on a <unk> with python <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` fetchone `
Gold: how to get a single result from a sqlite query in python ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Num"], ["value"], ["<unk>"], ["0"], ["Name"], ["cursor"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how to get a single result from a <unk> query in python ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how to get a single result from a <unk> query in python ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` , `
Gold: convert string ` user_input ` into a list of integers ` user_list `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["<unk>"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Call"], ["int"], ["number"], ["number"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["split"], [","], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert string ` <unk> ` into a list of integers ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert string ` <unk> ` into a list of integers ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` user `
Gold: get a list of integers by splitting a string ` user ` with comma
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Call"], ["int"], ["s"], ["s"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["split"], [","], ["Name"], ["user"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get a list of integers by splitting a string ` user ` with comma <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get a list of integers by splitting a string ` user ` with comma <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list of list ` x ` with a list ` x `
Gold: sorting a python list by two criteria
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["sorted"], ["list"], ["key"], ["value"], ["Lambda"], ["args"], ["body"], ["arguments"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["elts"], ["arg"], ["Subscript"], ["UnaryOp"], ["x"], ["annotation"], ["value"], ["slice"], ["op"], ["operand"], ["Name"], ["Index"], ["USub"], ["Subscript"], ["x"], ["value"], ["value"], ["slice"], ["Num"], ["Name"], ["Index"], ["0"], ["x"], ["value"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sorting a python list by two criteria <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sorting a python list by two criteria <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` ut `
Gold: sort a list of objects ` ut ` , based on a function ` cmpfun ` in descending order
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["reverse"], ["value"], ["Name"], ["Name"], ["NameConstant"], ["<unk>"], ["<unk>"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of objects ` <unk> ` , based on a function ` <unk> ` in descending order <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of objects ` <unk> ` , based on a function ` <unk> ` in descending order <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` count ` in a list ` count `
Gold: reverse list ` ut ` based on the ` count ` attribute of each object
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["reverse"], ["value"], ["Name"], ["Lambda"], ["NameConstant"], ["<unk>"], ["args"], ["body"], ["True"], ["arguments"], ["Attribute"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["count"], ["arg"], ["Name"], ["x"], ["annotation"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> reverse list ` <unk> ` based on the ` count ` attribute of each object <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: reverse list ` <unk> ` based on the ` count ` attribute of each object <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` count ` in a list ` count `
Gold: sort a list of objects ` ut ` in reverse order by their ` count ` property
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["reverse"], ["value"], ["Name"], ["Lambda"], ["NameConstant"], ["<unk>"], ["args"], ["body"], ["True"], ["arguments"], ["Attribute"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["count"], ["arg"], ["Name"], ["x"], ["annotation"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of objects ` <unk> ` in reverse order by their ` count ` property <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of objects ` <unk> ` in reverse order by their ` count ` property <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` click ` to a string ` find_element_by_partial_link_text `
Gold: click a href button ' Send ' with selenium
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["click"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["driver"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> click a <unk> button ' <unk> ' with selenium <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: click a <unk> button ' <unk> ' with selenium <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` click ` to a string ` findElement `
Gold: click a href button having text ` Send InMail ` with selenium
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["click"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["driver"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> click a <unk> button having text ` <unk> ` with selenium <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: click a <unk> button having text ` <unk> ` with selenium <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` click ` to a string ` Send InMail `
Gold: click a href button with text ' Send InMail ' with selenium
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["click"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["driver"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> click a <unk> button with text ' <unk> ' with selenium <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: click a <unk> button with text ' <unk> ' with selenium <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` ME ` to a string ` str `
Gold: cast an int ` i ` to a string and concat to string ' ME '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["BinOp"], ["left"], ["op"], ["right"], ["Str"], ["Add"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["str"], ["i"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> an int ` i ` to a string and <unk> to string ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> an int ` i ` to a string and <unk> to string ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: sorting data in dataframe pandas
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["sort_values"], ["elts"], ["Name"], ["Str"], ["Str"], ["df"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sorting data in dataframe pandas <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sorting data in dataframe pandas <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` #test firstline[LINE] ` to a string ` #test firstline[LINE] `
Gold: prepend the line ' #test firstline[LINE] ' to the contents of file ' infile ' and save as the file ' outfile '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["BinOp"], ["value"], ["write"], ["left"], ["op"], ["right"], ["Call"], ["Str"], ["Add"], ["Call"], ["func"], ["args"], ["keywords"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Str"], ["Attribute"], ["open"], ["<unk>"], ["w"], ["value"], ["read"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["open"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> the line ' <unk> ' to the contents of file ' <unk> ' and save as the file ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> the line ' <unk> ' to the contents of file ' <unk> ' and save as the file ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` l ` with a list ` l `
Gold: sort a list ` l ` by length of value in tuple
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["reverse"], ["value"], ["Name"], ["Lambda"], ["NameConstant"], ["l"], ["args"], ["body"], ["True"], ["arguments"], ["Call"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["func"], ["args"], ["keywords"], ["arg"], ["Name"], ["Subscript"], ["t"], ["annotation"], ["len"], ["value"], ["slice"], ["Name"], ["Index"], ["t"], ["value"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list ` l ` by length of value in tuple <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list ` l ` by length of value in tuple <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: split string ` s ` by words that ends with ' d '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["s"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ` s ` by words that ends with ' d ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ` s ` by words that ends with ' d ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` ba[rzd] ` to a string ` ba[rzd] `
Gold: return ` True ` if string ` foobarrrr ` contains regex ` ba[rzd] `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["bool"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["search"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> return ` <unk> ` if string ` <unk> ` contains regex ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: return ` <unk> ` if string ` <unk> ` contains regex ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` t ` to a string ` t `
Gold: removing duplicates in list ` t `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["set"], ["t"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> removing duplicates in list ` t ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: removing duplicates in list ` t ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` source_list ` to a string ` source_list `
Gold: removing duplicates in list ` source_list `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["set"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> removing duplicates in list ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: removing duplicates in list ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` abracadabra ` to a string ` abracadabra `
Gold: removing duplicates in list ` abracadabra `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["fromkeys"], ["<unk>"], ["Name"], ["OrderedDict"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> removing duplicates in list ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: removing duplicates in list ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` array ` to a string ` a `
Gold: convert array ` a ` into a list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["tolist"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["UnaryOp"], ["value"], ["reshape"], ["op"], ["operand"], ["Call"], ["USub"], ["Num"], ["func"], ["args"], ["keywords"], ["1"], ["Attribute"], ["Name"], ["value"], ["array"], ["a"], ["Name"], ["numpy"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert array ` a ` into a list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert array ` a ` into a list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` array `
Gold: convert the first row of numpy matrix ` a ` to a list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["tolist"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Name"], ["Num"], ["value"], ["array"], ["a"], ["0"], ["Name"], ["numpy"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert the first row of numpy matrix ` a ` to a list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert the first row of numpy matrix ` a ` to a list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` soup ` to a list ` soup `
Gold: in ` soup ` , get the content of the sibling of the ` td ` tag with text content ` Address: `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Subscript"], ["print"], ["value"], ["slice"], ["Attribute"], ["Index"], ["value"], ["<unk>"], ["value"], ["Call"], ["Num"], ["func"], ["args"], ["keywords"], ["0"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["td"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["find"], ["text"], ["value"], ["Name"], ["Str"], ["soup"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> in ` soup ` , get the content of the <unk> of the ` <unk> ` tag with text content ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: in ` soup ` , get the content of the <unk> of the ` <unk> ` tag with text content ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` l `
Gold: convert elements of each tuple in list ` l ` into a string separated by character ` @ `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["ListComp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["BinOp"], ["comprehension"], ["<pad>"], ["left"], ["op"], ["right"], ["target"], ["iter"], ["ifs"], ["Str"], ["Mod"], ["Name"], ["Name"], ["Name"], ["<unk>"], ["t"], ["t"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert elements of each tuple in list ` l ` into a string separated by character ` @ ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert elements of each tuple in list ` l ` into a string separated by character ` @ ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of list ` l `
Gold: convert each tuple in list ` l ` to a string with ' @ ' separating the tuples ' elements
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["ListComp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["BinOp"], ["comprehension"], ["<pad>"], ["left"], ["op"], ["right"], ["target"], ["iter"], ["ifs"], ["Str"], ["Mod"], ["Tuple"], ["Name"], ["Name"], ["<unk>"], ["elts"], ["t"], ["l"], ["Subscript"], ["Subscript"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Index"], ["Name"], ["Index"], ["t"], ["value"], ["t"], ["value"], ["Num"], ["Num"], ["0"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert each tuple in list ` l ` to a string with ' @ ' <unk> the tuples ' elements <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert each tuple in list ` l ` to a string with ' @ ' <unk> the tuples ' elements <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` execute_script ` in a string ` execute_script `
Gold: get the html from the current web page of a selenium driver
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["execute_script"], ["<unk>"], ["Name"], ["driver"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the html from the current web page of a selenium driver <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the html from the current web page of a selenium driver <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` teststr `
Gold: get all matches with regex pattern ` \d+[xX] ` in list of string ` teststr `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["i"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Call"], ["i"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["search"], ["<unk>"], ["i"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get all matches with regex pattern ` <unk> ` in list of string ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get all matches with regex pattern ` <unk> ` in list of string ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 900 ` in a list ` df `
Gold: select values from column ' A ' for which corresponding values in column ' B ' will be greater than 50 , and in column ' C ' - equal 900 in dataframe ` df `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Subscript"], ["Index"], ["value"], ["slice"], ["value"], ["Name"], ["Index"], ["BinOp"], ["df"], ["value"], ["left"], ["op"], ["right"], ["Str"], ["Compare"], ["BitAnd"], ["Compare"], ["A"], ["left"], ["ops"], ["comparators"], ["left"], ["ops"], ["comparators"], ["Subscript"], ["Gt"], ["Num"], ["Subscript"], ["Eq"], ["Num"], ["value"], ["slice"], ["50"], ["value"], ["slice"], ["900"], ["Name"], ["Index"], ["Name"], ["Index"], ["df"], ["value"], ["df"], ["value"], ["Str"], ["Str"], ["B"], ["C"], ["<pad>"]]
Seq In: <sos> select values from column ' A ' for which corresponding values in column ' B ' will be greater than <unk> , and in column ' C ' - equal <unk> in dataframe ` df `
Seq Out: select values from column ' A ' for which corresponding values in column ' B ' will be greater than <unk> , and in column ' C ' - equal <unk> in dataframe ` df ` <eos>

Predict: get a string ` o `
Gold: sort dictionary ` o ` in ascending order based on its keys and items
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["sorted"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["items"], ["Name"], ["o"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort dictionary ` o ` in ascending order based on its keys and items <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort dictionary ` o ` in ascending order based on its keys and items <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` d `
Gold: get sorted list of keys of dict ` d `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["sorted"], ["d"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get sorted list of keys of dict ` d ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get sorted list of keys of dict ` d ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` d `
Gold: how to sort dictionaries by keys in python
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["sorted"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["items"], ["Name"], ["d"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how to sort dictionaries by keys in python <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how to sort dictionaries by keys in python <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` 1 ` to ' 1 `
Gold: convert string " 1 " into integer
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["int"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert string " 1 " into integer <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert string " 1 " into integer <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` int `
Gold: function to convert strings into integers
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["int"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> function to convert strings into integers <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: function to convert strings into integers <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` T2 `
Gold: convert items in ` T1 ` to integers
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["<unk>"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["map"], ["int"], ["x"], ["x"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert items in ` <unk> ` to integers <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert items in ` <unk> ` to integers <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` ./test.sh ` to a string ` ./test.sh `
Gold: call a shell script ` ./test.sh ` using subprocess
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["call"], ["elts"], ["Name"], ["Str"], ["subprocess"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> call a shell script ` <unk> ` using subprocess <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: call a shell script ` <unk> ` using subprocess <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` notepad ` to a string ` notepad `
Gold: call a shell script ` notepad ` using subprocess
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["call"], ["elts"], ["Name"], ["Str"], ["subprocess"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> call a shell script ` <unk> ` using subprocess <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: call a shell script ` <unk> ` using subprocess <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` l1 `
Gold: combine lists ` l1 ` and ` l2 ` by alternating their elements
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["comprehension"], ["val"], ["target"], ["iter"], ["ifs"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Name"], ["Name"], ["pair"], ["func"], ["args"], ["keywords"], ["val"], ["pair"], ["Name"], ["Name"], ["Name"], ["zip"], ["l1"], ["l2"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> combine lists ` l1 ` and ` l2 ` by <unk> their elements <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: combine lists ` l1 ` and ` l2 ` by <unk> their elements <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` base64 ` to a string ` base64 `
Gold: encode string ' encoded '
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["base64"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> encode string ' encoded ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: encode string ' encoded ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` ascii ` to a string ` ascii `
Gold: encode a string ` encoded ` data to be encoded ` ascii ` encoding
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["encode"], ["ascii"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> encode a string ` encoded ` <unk> ` ascii ` encoding <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: encode a string ` encoded ` <unk> ` ascii ` encoding <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` lol ` to a list ` lol `
Gold: parse tab-delimited csv file ' text.txt ' into a list
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["lol"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["keyword"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["delimiter"], ["value"], ["Name"], ["Name"], ["Str"], ["Str"], ["Str"], ["<unk>"], ["open"], ["<unk>"], ["rb"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> parse <unk> csv file ' <unk> ' into a list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: parse <unk> csv file ' <unk> ' into a list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` my_object ` to a string ` my_object `
Gold: get attribute ` my_str ` of object ` my_object `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["getattr"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get attribute ` <unk> ` of object ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get attribute ` <unk> ` of object ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` d `
Gold: group a list of dicts ` LD ` into one dict by key
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["dict"], ["func"], ["args"], ["keywords"], ["Name"], ["Subscript"], ["Call"], ["zip"], ["value"], ["slice"], ["func"], ["args"], ["keywords"], ["Name"], ["Index"], ["Name"], ["Starred"], ["<unk>"], ["value"], ["zip"], ["value"], ["Num"], ["ListComp"], ["0"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Name"], ["Name"], ["list"], ["func"], ["args"], ["keywords"], ["d"], ["<unk>"], ["Attribute"], ["value"], ["values"], ["Name"], ["d"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> group a list of dicts ` <unk> ` into one dict by key <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: group a list of dicts ` <unk> ` into one dict by key <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of list ` list_of_pairs `
Gold: how do i sum the first value in each tuple in a list of tuples in python ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["ListComp"], ["sum"], ["elt"], ["generators"], ["Subscript"], ["comprehension"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["Name"], ["Index"], ["Name"], ["Name"], ["pair"], ["value"], ["pair"], ["<unk>"], ["Num"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how do i sum the first value in each tuple in a list of tuples in python ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how do i sum the first value in each tuple in a list of tuples in python ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` d ` to a string ` d `
Gold: convert unicode string u " {'code1':1,'code2':1} " into dictionary
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["d"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["literal_eval"], ["<unk>"], ["Name"], ["ast"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert unicode string u " <unk> " into dictionary <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert unicode string u " <unk> " into dictionary <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` mystring `
Gold: find all words in a string ` mystring ` that start with the ` $ ` sign
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["word"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Call"], ["word"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["Str"], ["value"], ["split"], ["value"], ["startswith"], ["$"], ["Name"], ["Name"], ["mystring"], ["word"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find all words in a string ` mystring ` that start with the ` $ ` <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find all words in a string ` mystring ` that start with the ` $ ` <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` text ` to a string ` text `
Gold: remove any url within string ` text `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["text"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["keyword"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["text"], ["<unk>"], ["value"], ["Name"], ["Attribute"], ["re"], ["value"], ["MULTILINE"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove any url within string ` text ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove any url within string ` text ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` A ` in a list ` A `
Gold: replace all elements in array ` A ` that are not present in array ` [1, 3, 4] ` with zeros
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["Name"], ["Num"], ["value"], ["where"], ["func"], ["args"], ["keywords"], ["A"], ["0"], ["Name"], ["Attribute"], ["Attribute"], ["np"], ["value"], ["reshape"], ["value"], ["shape"], ["Call"], ["Name"], ["func"], ["args"], ["keywords"], ["A"], ["Attribute"], ["Name"], ["List"], ["value"], ["in1d"], ["A"], ["elts"], ["Name"], ["Num"], ["Num"], ["Num"], ["np"], ["1"], ["3"], ["4"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> replace all elements in array ` A ` that are not present in array ` [1, 3, 4] ` with zeros <pad> <pad> <pad> <pad> <pad>
Seq Out: replace all elements in array ` A ` that are not present in array ` [1, 3, 4] ` with zeros <eos> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a ` to a string ` a `
Gold: calculate mean across dimension in a 2d array ` a `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["keyword"], ["value"], ["mean"], ["a"], ["axis"], ["value"], ["Name"], ["Num"], ["np"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> calculate mean across <unk> in a 2d array ` a ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: calculate mean across <unk> in a 2d array ` a ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` /usr/bin/Rscript ` to a string ` /usr/bin/Rscript `
Gold: running r script ' /pathto/MyrScript.r ' from python
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["call"], ["elts"], ["Name"], ["Str"], ["Str"], ["Str"], ["subprocess"], ["<unk>"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> running <unk> script ' <unk> ' from python <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: running <unk> script ' <unk> ' from python <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` /usr/bin/Rscript --vanilla /pathto/MyrScript.r ` to a string ` /usr/bin/Rscript --vanilla /pathto/MyrScript.r `
Gold: run r script ' /usr/bin/Rscript --vanilla /pathto/MyrScript.r '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["value"], ["call"], ["<unk>"], ["shell"], ["value"], ["Name"], ["NameConstant"], ["subprocess"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> run <unk> script ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: run <unk> script ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` writer `
Gold: add a header to a csv file
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["<unk>"], ["Name"], ["writer"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add a header to a csv file <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add a header to a csv file <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` in a list ` df `
Gold: replacing nan in the dataframe ` df ` with row average
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["keyword"], ["value"], ["fillna"], ["func"], ["args"], ["keywords"], ["axis"], ["value"], ["Name"], ["Attribute"], ["keyword"], ["Num"], ["df"], ["value"], ["mean"], ["axis"], ["value"], ["1"], ["Name"], ["Num"], ["df"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> replacing nan in the dataframe ` df ` with row average <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: replacing nan in the dataframe ` df ` with row average <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` %Y-%m-%d %H:%M:%S ` in a list ` %Y-%m-%d %H:%M:%S `
Gold: convert unix timestamp ' 1347517370 ' to formatted string ' %Y-%m-%d %H:%M:%S '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Call"], ["value"], ["strftime"], ["%Y-%m-%d[SEP]%H:%M:%S"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Num"], ["time"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["time"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert <unk> timestamp ' <unk> ' to formatted string ' %Y-%m-%d[SEP]%H:%M:%S ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert <unk> timestamp ' <unk> ' to formatted string ' %Y-%m-%d[SEP]%H:%M:%S ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` cls ` to a string ` cls `
Gold: call a base class 's class method ` do ` from derived class ` Derived `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["do"], ["a"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["super"], ["<unk>"], ["cls"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> call a <unk> class 's class <unk> ` do ` from <unk> class ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: call a <unk> class 's class <unk> ` do ` from <unk> class ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` a ` to a list ` a `
Gold: selecting rows in numpy ndarray ' a ' , where the value in the first column is 0 and value in the second column is 1
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["a"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["BinOp"], ["value"], ["where"], ["left"], ["op"], ["right"], ["Name"], ["Compare"], ["Mult"], ["Compare"], ["np"], ["left"], ["ops"], ["comparators"], ["left"], ["ops"], ["comparators"], ["Subscript"], ["Eq"], ["Num"], ["Subscript"], ["Eq"], ["Num"], ["value"], ["slice"], ["0"], ["value"], ["slice"], ["1"], ["Name"], ["ExtSlice"], ["Name"], ["ExtSlice"], ["a"], ["dims"], ["a"], ["dims"], ["Slice"], ["Index"], ["Slice"], ["Index"], ["lower"], ["upper"], ["step"], ["value"], ["lower"], ["upper"], ["step"], ["value"], ["Num"], ["Num"], ["0"], ["1"], ["<pad>"]]
Seq In: <sos> <unk> rows in numpy ndarray ' a ' , where the value in the first column is 0 and value in the second column is 1
Seq Out: <unk> rows in numpy ndarray ' a ' , where the value in the first column is 0 and value in the second column is 1 <eos>

Predict: get a string ` + ` to a string ` + `
Gold: separate words delimited by one or more spaces into a list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["split"], ["+"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> separate words delimited by one or more spaces into a list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: separate words delimited by one or more spaces into a list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` words ` in a string ` words `
Gold: length of longest element in list ` words `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["len"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["max"], ["words"], ["key"], ["value"], ["Name"], ["len"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> length of <unk> element in list ` words ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: length of <unk> element in list ` words ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` result ` to a list ` result `
Gold: get the value associated with unicode key ' from_user ' of first dictionary in list ` result `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Subscript"], ["Index"], ["value"], ["slice"], ["value"], ["Name"], ["Index"], ["Str"], ["result"], ["value"], ["<unk>"], ["Num"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the value associated with unicode key ' <unk> ' of first dictionary in list ` result ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the value associated with unicode key ' <unk> ' of first dictionary in list ` result ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` line `
Gold: retrieve each line from a file ' File.txt ' as a list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Name"], ["Call"], ["value"], ["split"], ["line"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["line"], ["open"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> retrieve each line from a file ' <unk> ' as a list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: retrieve each line from a file ' <unk> ' as a list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` a `
Gold: swap keys with values in a dictionary ` a `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["dict"], ["elt"], ["generators"], ["Tuple"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Tuple"], ["Call"], ["v"], ["k"], ["elts"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Attribute"], ["k"], ["v"], ["value"], ["items"], ["Name"], ["a"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> swap keys with values in a dictionary ` a ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: swap keys with values in a dictionary ` a ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` new_file ` to a string ` new_file `
Gold: open a file ` path/to/FILE_NAME.ext ` in write mode
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Str"], ["open"], ["<unk>"], ["w"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> open a file ` <unk> ` in write mode <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: open a file ` <unk> ` in write mode <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a string ` col2 ` in a string ` col2 `
Gold: how to count distinct values in a column of a pandas group by object ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["reset_index"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["<unk>"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["List"], ["Str"], ["value"], ["groupby"], ["elts"], ["<unk>"], ["Name"], ["Str"], ["Str"], ["df"], ["col1"], ["col2"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how to count <unk> values in a column of a pandas group by object ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how to count <unk> values in a column of a pandas group by object ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` key `
Gold: check if any key in the dictionary ` dict1 ` starts with the string ` EMP$$ `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["any"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Str"], ["Name"], ["Name"], ["value"], ["startswith"], ["<unk>"], ["key"], ["dict1"], ["Name"], ["key"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if any key in the dictionary ` <unk> ` starts with the string ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if any key in the dictionary ` <unk> ` starts with the string ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` value `
Gold: create list of values from dictionary ` dict1 ` that have a key that starts with ' EMP$$ '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["value"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Call"], ["elts"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["Call"], ["Attribute"], ["Str"], ["key"], ["value"], ["list"], ["func"], ["args"], ["keywords"], ["value"], ["startswith"], ["<unk>"], ["Attribute"], ["Name"], ["value"], ["items"], ["key"], ["Name"], ["dict1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create list of values from dictionary ` <unk> ` that have a key that starts with ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create list of values from dictionary ` <unk> ` that have a key that starts with ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` sf ` in a list ` sf `
Gold: convert a pandas series ` sf ` into a pandas dataframe ` df ` with columns ` email ` and ` list `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Dict"], ["value"], ["DataFrame"], ["keys"], ["values"], ["Name"], ["Str"], ["Str"], ["Attribute"], ["Attribute"], ["pd"], ["<unk>"], ["list"], ["value"], ["index"], ["value"], ["values"], ["Name"], ["Name"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a pandas series ` <unk> ` into a pandas dataframe ` df ` with columns ` <unk> ` and ` list ` <pad> <pad> <pad>
Seq Out: convert a pandas series ` <unk> ` into a pandas dataframe ` df ` with columns ` <unk> ` and ` list ` <eos> <pad> <pad> <pad>

Predict: get a list `  ` to a string ` str `
Gold: print elements of list ` list ` seperated by tabs ` `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["join"], ["func"], ["args"], ["keywords"], ["Str"], ["Name"], ["Name"], ["Name"], ["<pad>"], ["map"], ["str"], ["list"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> print elements of list ` list ` seperated by tabs ` ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: print elements of list ` list ` seperated by tabs ` ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` Ð¿ÑÐ¸ ` to a string ` Ð¿ÑÐ¸ `
Gold: print unicode string ' Ð¿ÑÐ¸ ' with utf-8
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["encode"], ["raw_unicode_escape"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> print unicode string ' <unk> ' with utf-8 <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: print unicode string ' <unk> ' with utf-8 <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` utf-8 ` to a string ` SopetÃ³n `
Gold: encode a latin character in string ` SopetÃ³n ` properly
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["decode"], ["utf-8"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["encode"], ["latin-1"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> encode a <unk> character in string ` <unk> ` properly <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: encode a <unk> character in string ` <unk> ` properly <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` image ` in a list ` image `
Gold: resized image ` image ` to width , height of ` (x, y) ` with filter of ` ANTIALIAS `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["Attribute"], ["value"], ["<unk>"], ["elts"], ["value"], ["<unk>"], ["Name"], ["Name"], ["Name"], ["Name"], ["<unk>"], ["x"], ["y"], ["Image"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> image ` image ` to width , <unk> of ` <unk> <unk> ` with filter of ` <unk> ` <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> image ` image ` to width , <unk> of ` <unk> <unk> ` with filter of ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: regex , find " n " s only in the middle of string ` s `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["s"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> regex , find " n " s only in the <unk> of string ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: regex , find " n " s only in the <unk> of string ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 100 ` in a list ` 1.0 `
Gold: display the float ` 1/3*100 ` as a percentage
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["BinOp"], ["value"], ["format"], ["left"], ["op"], ["right"], ["Str"], ["BinOp"], ["Mult"], ["Num"], ["<unk>"], ["left"], ["op"], ["right"], ["100"], ["Num"], ["Div"], ["Num"], ["1.0"], ["3"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> display the float ` <unk> ` as a <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: display the float ` <unk> ` as a <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` mylist ` with a list ` mylist `
Gold: sort a list of dictionary ` mylist ` by the key ` title `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Lambda"], ["mylist"], ["args"], ["body"], ["arguments"], ["Subscript"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["arg"], ["Name"], ["Index"], ["x"], ["annotation"], ["x"], ["value"], ["Str"], ["title"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of dictionary ` mylist ` by the key ` title ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of dictionary ` mylist ` by the key ` title ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` l ` with a list ` l `
Gold: sort a list ` l ` of dicts by dict value ' title '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Lambda"], ["l"], ["args"], ["body"], ["arguments"], ["Subscript"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["arg"], ["Name"], ["Index"], ["x"], ["annotation"], ["x"], ["value"], ["Str"], ["title"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list ` l ` of dicts by dict value ' title ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list ` l ` of dicts by dict value ' title ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` l ` with a list ` l `
Gold: sort a list of dictionaries by the value of keys ' title ' , ' title_url ' , ' id ' in ascending order .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Lambda"], ["l"], ["args"], ["body"], ["arguments"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["elts"], ["arg"], ["Subscript"], ["Subscript"], ["Subscript"], ["x"], ["annotation"], ["value"], ["slice"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Index"], ["Name"], ["Index"], ["Name"], ["Index"], ["x"], ["value"], ["x"], ["value"], ["x"], ["value"], ["Str"], ["Str"], ["Str"], ["title"], ["<unk>"], ["id"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of dictionaries by the value of keys ' title ' , ' <unk> ' , ' id ' in ascending order .
Seq Out: sort a list of dictionaries by the value of keys ' title ' , ' <unk> ' , ' id ' in ascending order . <eos>

Predict: sort a list of list ` l1 ` with a list ` l1 `
Gold: find 10 largest differences between each respective elements of list ` l1 ` and list ` l2 `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["Call"], ["keyword"], ["value"], ["nlargest"], ["10"], ["func"], ["args"], ["keywords"], ["key"], ["value"], ["Name"], ["Name"], ["Call"], ["Lambda"], ["<unk>"], ["range"], ["func"], ["args"], ["keywords"], ["args"], ["body"], ["Name"], ["Name"], ["arguments"], ["Call"], ["len"], ["l1"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["func"], ["args"], ["keywords"], ["arg"], ["Name"], ["BinOp"], ["i"], ["annotation"], ["abs"], ["left"], ["op"], ["right"], ["Subscript"], ["Sub"], ["Subscript"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Index"], ["Name"], ["Index"], ["l1"], ["value"], ["l2"], ["value"], ["Name"], ["Name"], ["i"], ["i"], ["<pad>"]]
Seq In: <sos> find 10 largest <unk> between each respective elements of list ` l1 ` and list ` l2 ` <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find 10 largest <unk> between each respective elements of list ` l1 ` and list ` l2 ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` soup ` to a string ` soup `
Gold: beautifulsoup find all ' span ' elements in html string ` soup ` with class of ' starGryB sp '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Dict"], ["value"], ["find_all"], ["<unk>"], ["keys"], ["values"], ["Name"], ["Str"], ["Str"], ["soup"], ["class"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> beautifulsoup find all ' <unk> ' elements in html string ` soup ` with class of ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: beautifulsoup find all ' <unk> ' elements in html string ` soup ` with class of ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` test ` to a string ` test `
Gold: write records in dataframe ` df ` to table ' test ' in schema ' a_schema '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["keyword"], ["value"], ["<unk>"], ["test"], ["<unk>"], ["<unk>"], ["value"], ["Name"], ["Str"], ["df"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write records in dataframe ` df ` to table ' test ' in <unk> ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write records in dataframe ` df ` to table ' test ' in <unk> ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: extract brackets from string ` s `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["s"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> extract brackets from string ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: extract brackets from string ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` L `
Gold: remove duplicate elements from list ' L '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["values"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["dict"], ["elt"], ["generators"], ["Tuple"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Subscript"], ["Name"], ["Name"], ["Name"], ["value"], ["slice"], ["x"], ["x"], ["L"], ["Name"], ["Index"], ["x"], ["value"], ["Num"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove duplicate elements from list ' L ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove duplicate elements from list ' L ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` file `
Gold: read a file ` file ` without newlines
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Str"], ["Name"], ["Name"], ["value"], ["rstrip"], ["[LINE]"], ["line"], ["file"], ["Name"], ["line"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> read a file ` file ` without newlines <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: read a file ` file ` without newlines <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` testlist `
Gold: get the position of item 1 in ` testlist `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["i"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["Eq"], ["Num"], ["i"], ["x"], ["enumerate"], ["<unk>"], ["x"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the position of item 1 in ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the position of item 1 in ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` testlist `
Gold: get the position of item 1 in ` testlist `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["i"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["Eq"], ["Num"], ["i"], ["x"], ["enumerate"], ["<unk>"], ["x"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the position of item 1 in ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the position of item 1 in ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` testlist `
Gold: get the position of item 1 in ` testlist `
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["ListComp"], ["Pass"], ["i"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["i"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["Eq"], ["Num"], ["i"], ["x"], ["enumerate"], ["<unk>"], ["x"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the position of item 1 in ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the position of item 1 in ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` testlist `
Gold: get the position of item 1 in ` testlist `
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["GeneratorExp"], ["Pass"], ["i"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["i"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["Eq"], ["Num"], ["i"], ["x"], ["enumerate"], ["<unk>"], ["x"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the position of item 1 in ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the position of item 1 in ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` gen `
Gold: get the position of item 1 in ` testlist `
Tree: [["Module"], ["body"], ["Assign"], ["For"], ["targets"], ["value"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["GeneratorExp"], ["Name"], ["Name"], ["Pass"], ["<unk>"], ["elt"], ["generators"], ["i"], ["<unk>"], ["Name"], ["comprehension"], ["i"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["Eq"], ["Num"], ["i"], ["x"], ["enumerate"], ["<unk>"], ["x"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the position of item 1 in ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the position of item 1 in ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` index ` to a string ` testlist `
Gold: get the position of item ` element ` in list ` testlist `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["index"], ["element"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the position of item ` element ` in list ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the position of item ` element ` in list ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` name ` to a string ` name `
Gold: get the position of item ` element ` in list ` testlist `
Tree: [["Module"], ["body"], ["Try"], ["body"], ["handlers"], ["orelse"], ["finalbody"], ["Expr"], ["ExceptHandler"], ["value"], ["type"], ["name"], ["body"], ["Call"], ["Name"], ["Pass"], ["func"], ["args"], ["keywords"], ["ValueError"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["index"], ["element"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the position of item ` element ` in list ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the position of item ` element ` in list ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` lis ` to a list ` lis `
Gold: find the first element of the tuple with the maximum second element in a list of tuples ` lis `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Name"], ["Name"], ["keyword"], ["Num"], ["max"], ["<unk>"], ["key"], ["value"], ["0"], ["Lambda"], ["args"], ["body"], ["arguments"], ["Subscript"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["arg"], ["Name"], ["Index"], ["item"], ["annotation"], ["item"], ["value"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find the first element of the tuple with the maximum second element in a list of tuples ` <unk> ` <pad> <pad> <pad> <pad> <pad>
Seq Out: find the first element of the tuple with the maximum second element in a list of tuples ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` lis ` in a list ` lis `
Gold: get the item at index 0 from the tuple that has maximum value at index 1 in list ` lis `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Name"], ["Name"], ["keyword"], ["Num"], ["max"], ["<unk>"], ["key"], ["value"], ["0"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Num"], ["itemgetter"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the item at index 0 from the tuple that has maximum value at index 1 in list ` <unk> ` <pad> <pad> <pad> <pad>
Seq Out: get the item at index 0 from the tuple that has maximum value at index 1 in list ` <unk> ` <eos> <pad> <pad> <pad> <pad>

Predict: get a string ` time `
Gold: make a delay of 1 second
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["value"], ["sleep"], ["1"], ["Name"], ["time"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> make a delay of 1 second <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: make a delay of 1 second <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` L `
Gold: convert list of tuples ` L ` to a string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["GeneratorExp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["BinOp"], ["comprehension"], [","], ["left"], ["op"], ["right"], ["target"], ["iter"], ["ifs"], ["BinOp"], ["Add"], ["Str"], ["Name"], ["Name"], ["left"], ["op"], ["right"], [")"], ["i"], ["L"], ["Str"], ["Add"], ["Call"], ["("], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["join"], ["i"], ["Str"], [","], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert list of tuples ` L ` to a string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert list of tuples ` L ` to a string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` b ` in a list ` b `
Gold: django set default value of field ` b ` equal to ' 0000000 '
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["b"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["keyword"], ["value"], ["<unk>"], ["<unk>"], ["value"], ["<unk>"], ["value"], ["<unk>"], ["value"], ["Name"], ["Num"], ["Str"], ["NameConstant"], ["<unk>"], ["7"], ["<unk>"], ["False"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> django set default value of field ` b ` equal to ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: django set default value of field ` b ` equal to ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` list5 ` with a list ` x `
Gold: sort lis ` list5 ` in ascending order based on the degrees value of its elements
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Lambda"], ["sorted"], ["<unk>"], ["args"], ["body"], ["arguments"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["elts"], ["arg"], ["Call"], ["Name"], ["x"], ["annotation"], ["func"], ["args"], ["keywords"], ["x"], ["Name"], ["Name"], ["<unk>"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort <unk> ` <unk> ` in ascending order based on the degrees value of its elements <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort <unk> ` <unk> ` in ascending order based on the degrees value of its elements <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` vertex ` with a list ` vertex `
Gold: how do i perform secondary sorting in python ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["sorted"], ["<unk>"], ["key"], ["value"], ["Lambda"], ["args"], ["body"], ["arguments"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["elts"], ["arg"], ["Call"], ["Name"], ["<unk>"], ["annotation"], ["func"], ["args"], ["keywords"], ["<unk>"], ["Name"], ["Name"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how do i <unk> <unk> sorting in python ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how do i <unk> <unk> sorting in python ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` n `
Gold: convert a list into a generator object
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["GeneratorExp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["n"], ["target"], ["iter"], ["ifs"], ["Name"], ["List"], ["n"], ["elts"], ["Num"], ["Num"], ["Num"], ["Num"], ["1"], ["2"], ["3"], ["5"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a list into a generator object <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a list into a generator object <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` newlist `
Gold: remove elements from list ` oldlist ` that have an index number mentioned in list ` removelist `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["<unk>"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["v"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["Compare"], ["elts"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Name"], ["Name"], ["Name"], ["Name"], ["NotIn"], ["Name"], ["i"], ["v"], ["enumerate"], ["<unk>"], ["i"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove elements from list ` <unk> ` that have an index number <unk> in list ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove elements from list ` <unk> ` that have an index number <unk> in list ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` yourfile.txt ` to a string ` f `
Gold: open a file ` yourfile.txt ` in write mode
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["f"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Str"], ["open"], ["<unk>"], ["w"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> open a file ` <unk> ` in write mode <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: open a file ` <unk> ` in write mode <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` attr ` to a string ` attr `
Gold: get attribute ' attr ' from object ` obj `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["getattr"], ["obj"], ["attr"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get attribute ' attr ' from object ` obj ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get attribute ' attr ' from object ` obj ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list of list ` reduce ` with a list ` reduce `
Gold: convert tuple of tuples ` (('aa',), ('bb',), ('cc',)) ` to tuple
Tree: [["Module"], ["body"], ["ImportFrom"], ["Expr"], ["functools"], ["names"], ["0"], ["value"], ["alias"], ["Call"], ["reduce"], ["asname"], ["func"], ["args"], ["keywords"], ["Name"], ["Lambda"], ["Tuple"], ["reduce"], ["args"], ["body"], ["elts"], ["arguments"], ["BinOp"], ["Tuple"], ["Tuple"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["left"], ["op"], ["right"], ["elts"], ["elts"], ["elts"], ["arg"], ["arg"], ["Name"], ["Add"], ["Name"], ["Str"], ["Str"], ["Str"], ["a"], ["annotation"], ["b"], ["annotation"], ["a"], ["b"], ["<unk>"], ["<unk>"], ["cc"], ["<pad>"]]
Seq In: <sos> convert tuple of tuples ` <unk> <unk> <unk> ` to tuple <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert tuple of tuples ` <unk> <unk> <unk> ` to tuple <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list of list ` a ` in a list ` a `
Gold: convert tuple of tuples ` (('aa',), ('bb',), ('cc',)) ` to list in one line
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Lambda"], ["Tuple"], ["map"], ["args"], ["body"], ["elts"], ["arguments"], ["Subscript"], ["Tuple"], ["Tuple"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["elts"], ["elts"], ["elts"], ["arg"], ["Name"], ["Index"], ["Str"], ["Str"], ["Str"], ["a"], ["annotation"], ["a"], ["value"], ["<unk>"], ["<unk>"], ["cc"], ["Num"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert tuple of tuples ` <unk> <unk> <unk> ` to list in one line <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert tuple of tuples ` <unk> <unk> <unk> ` to list in one line <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` - ` to a string ` - `
Gold: python pandas : how to replace a characters in a column of a dataframe ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["keyword"], ["value"], ["replace"], [","], ["-"], ["inplace"], ["value"], ["Subscript"], ["NameConstant"], ["value"], ["slice"], ["True"], ["Name"], ["Index"], ["df"], ["value"], ["Str"], ["range"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> python pandas : how to replace a characters in a column of a dataframe ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: python pandas : how to replace a characters in a column of a dataframe ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` a ` in a list ` a
Gold: unzip the list ` [('a', 1), ('b', 2), ('c', 3), ('d', 4)] `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Starred"], ["zip"], ["value"], ["List"], ["elts"], ["Tuple"], ["Tuple"], ["Tuple"], ["Tuple"], ["elts"], ["elts"], ["elts"], ["elts"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["Num"], ["a"], ["1"], ["b"], ["2"], ["c"], ["3"], ["d"], ["4"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> the list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> the list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` a ` in a list ` a
Gold: unzip the list ` [('a', 1), ('b', 2), ('c', 3), ('d', 4)] `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Starred"], ["zip"], ["value"], ["List"], ["elts"], ["Tuple"], ["Tuple"], ["Tuple"], ["Tuple"], ["elts"], ["elts"], ["elts"], ["elts"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["Num"], ["a"], ["1"], ["b"], ["2"], ["c"], ["3"], ["d"], ["4"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> the list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> the list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` a ` to list ` a `
Gold: unzip list ` original `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Tuple"], ["result"], ["elts"], ["ListComp"], ["ListComp"], ["elt"], ["generators"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["Name"], ["comprehension"], ["a"], ["target"], ["iter"], ["ifs"], ["b"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Name"], ["Tuple"], ["Name"], ["elts"], ["<unk>"], ["elts"], ["<unk>"], ["Name"], ["Name"], ["Name"], ["Name"], ["a"], ["b"], ["a"], ["b"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> list ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> list ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` a ` to list ` a `
Gold: unzip list ` original ` and return a generator
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Tuple"], ["result"], ["elts"], ["GeneratorExp"], ["GeneratorExp"], ["elt"], ["generators"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["Name"], ["comprehension"], ["a"], ["target"], ["iter"], ["ifs"], ["b"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Name"], ["Tuple"], ["Name"], ["elts"], ["<unk>"], ["elts"], ["<unk>"], ["Name"], ["Name"], ["Name"], ["Name"], ["a"], ["b"], ["a"], ["b"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> list ` <unk> ` and return a generator <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> list ` <unk> ` and return a generator <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` a `
Gold: unzip list ` [('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )] `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Starred"], ["zip"], ["value"], ["List"], ["elts"], ["Tuple"], ["Tuple"], ["Tuple"], ["Tuple"], ["Tuple"], ["elts"], ["elts"], ["elts"], ["elts"], ["elts"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["a"], ["1"], ["b"], ["2"], ["c"], ["3"], ["d"], ["4"], ["e"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` a `
Gold: unzip list ` [('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )] ` and fill empty results with none
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["NameConstant"], ["Starred"], ["map"], ["value"], ["value"], ["List"], ["elts"], ["Tuple"], ["Tuple"], ["Tuple"], ["Tuple"], ["Tuple"], ["elts"], ["elts"], ["elts"], ["elts"], ["elts"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["Num"], ["Str"], ["a"], ["1"], ["b"], ["2"], ["c"], ["3"], ["d"], ["4"], ["e"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` and fill empty results with none <pad> <pad> <pad>
Seq Out: <unk> list ` <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ` and fill empty results with none <eos> <pad> <pad> <pad>

Predict: get a string ` 3.9 ` to a string ` 3.9 `
Gold: encode ` Decimal('3.9') ` to a json string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["dumps"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["json"], ["Decimal"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> encode ` <unk> ` to a json string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: encode ` <unk> ` to a json string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` d ` to a list ` d `
Gold: add key " mynewkey " to dictionary ` d ` with value " mynewvalue "
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Subscript"], ["Str"], ["value"], ["slice"], ["<unk>"], ["Name"], ["Index"], ["d"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add key " <unk> " to dictionary ` d ` with value " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add key " <unk> " to dictionary ` d ` with value " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` data ` to a string ` data `
Gold: add key ' a ' to dictionary ` data ` with value 1
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Dict"], ["value"], ["update"], ["keys"], ["values"], ["Name"], ["Str"], ["Num"], ["data"], ["a"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add key ' a ' to dictionary ` data ` with value 1 <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add key ' a ' to dictionary ` data ` with value 1 <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` data ` to a string ` data `
Gold: add key ' a ' to dictionary ` data ` with value 1
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["update"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["data"], ["dict"], ["a"], ["value"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add key ' a ' to dictionary ` data ` with value 1 <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add key ' a ' to dictionary ` data ` with value 1 <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` data `
Gold: add key ' a ' to dictionary ` data ` with value 1
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["update"], ["a"], ["value"], ["Name"], ["Num"], ["data"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add key ' a ' to dictionary ` data ` with value 1 <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add key ' a ' to dictionary ` data ` with value 1 <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` matrix `
Gold: find maximal value in matrix ` matrix `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["ListComp"], ["max"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["max"], ["i"], ["i"], ["matrix"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find <unk> value in matrix ` matrix ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find <unk> value in matrix ` matrix ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` answer `
Gold: round number ` answer ` to 2 precision after the decimal point
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["str"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Num"], ["round"], ["<unk>"], ["2"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> round number ` <unk> ` to 2 precision after the decimal point <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: round number ` <unk> ` to 2 precision after the decimal point <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: extract ip address from an html string
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["s"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> extract ip address from an html string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: extract ip address from an html string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` A ` to a list ` A `
Gold: filter dataframe ` df ` by values in column ` A ` that appear more than once
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Lambda"], ["value"], ["filter"], ["args"], ["body"], ["Call"], ["arguments"], ["Compare"], ["func"], ["args"], ["keywords"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["left"], ["ops"], ["comparators"], ["Attribute"], ["Str"], ["arg"], ["Call"], ["Gt"], ["Num"], ["value"], ["groupby"], ["A"], ["x"], ["annotation"], ["func"], ["args"], ["keywords"], ["1"], ["Name"], ["Name"], ["Name"], ["df"], ["len"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> filter dataframe ` df ` by values in column ` A ` that appear more than once <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: filter dataframe ` df ` by values in column ` A ` that appear more than once <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` x `
Gold: append each line in file ` myfile ` into a list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Compare"], ["x"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Attribute"], ["Name"], ["NotEq"], ["Str"], ["value"], ["<unk>"], ["x"], ["<pad>"], ["Name"], ["myfile"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append each line in file ` <unk> ` into a list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: append each line in file ` <unk> ` into a list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` lst ` in a list ` lst `
Gold: get a list of integers ` lst ` from a file ` filename.txt `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["lst"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Call"], ["map"], ["int"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["readlines"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["open"], ["filename.txt"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get a list of integers ` lst ` from a file ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get a list of integers ` lst ` from a file ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` plt ` to a string ` plt `
Gold: add color bar with image ` mappable ` to plot ` plt `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["value"], ["<unk>"], ["<unk>"], ["value"], ["<unk>"], ["value"], ["Name"], ["Name"], ["Name"], ["plt"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add color bar with image ` <unk> ` to plot ` plt ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add color bar with image ` <unk> ` to plot ` plt ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` df `
Gold: count most frequent 100 words in column ' text ' of dataframe ` df `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["value"], ["<unk>"], ["100"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["Counter"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["split"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Subscript"], ["value"], ["join"], ["value"], ["slice"], ["Str"], ["Name"], ["Index"], ["<pad>"], ["df"], ["value"], ["Str"], ["text"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count most <unk> 100 words in column ' text ' of dataframe ` df ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count most <unk> 100 words in column ' text ' of dataframe ` df ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` text `
Gold: python split a string using regex
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["text"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> python split a string using regex <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: python split a string using regex <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` combinations ` in a list ` combinations `
Gold: generate all 2-element subsets of tuple ` (1, 2, 3) `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["Num"], ["value"], ["combinations"], ["elts"], ["2"], ["Name"], ["Num"], ["Num"], ["Num"], ["itertools"], ["1"], ["2"], ["3"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> generate all <unk> <unk> of tuple ` (1, 2, <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: generate all <unk> <unk> of tuple ` (1, 2, <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` utc `
Gold: get a value of datetime.today ( ) in the utc time zone
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["value"], ["now"], ["value"], ["<unk>"], ["Name"], ["Name"], ["datetime"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get a value of <unk> ( ) in the utc time <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get a value of <unk> ( ) in the utc time <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` list1 `
Gold: get a new list ` list2 ` by removing empty list from a list of lists ` list1 `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["list2"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Compare"], ["x"], ["list1"], ["left"], ["ops"], ["comparators"], ["Name"], ["NotEq"], ["List"], ["x"], ["elts"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get a new list ` list2 ` by removing empty list from a list of lists ` list1 ` <pad> <pad> <pad> <pad>
Seq Out: get a new list ` list2 ` by removing empty list from a list of lists ` list1 ` <eos> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` list1 `
Gold: create ` list2 ` to contain the lists from list ` list1 ` excluding the empty lists from ` list1 `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["list2"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["x"], ["list1"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create ` list2 ` to contain the lists from list ` list1 ` excluding the empty lists from ` list1 ` <pad> <pad>
Seq Out: create ` list2 ` to contain the lists from list ` list1 ` excluding the empty lists from ` list1 ` <eos> <pad> <pad>

Predict: get a string ` data ` to a string ` data `
Gold: django response with json ` data `
Tree: [["Module"], ["body"], ["Return"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["HttpResponse"], ["data"], ["<unk>"], ["value"], ["Str"], ["application/json"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> django response with json ` data ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: django response with json ` data ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` (.*?)\[.*?\] ` to a string ` (.*?)\[.*?\] `
Gold: get all text that is not enclosed within square brackets in string ` example_str `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get all text that is not <unk> within square brackets in string ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get all text that is not <unk> within square brackets in string ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` example_str ` to a string ` example_str `
Gold: use a regex to get all text in a string ` example_str ` that is not surrounded by square brackets
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> use a regex to get all text in a string ` <unk> ` that is not <unk> by square brackets <pad> <pad> <pad>
Seq Out: use a regex to get all text in a string ` <unk> ` that is not <unk> by square brackets <eos> <pad> <pad> <pad>

Predict: get a string ` \(.+?\)|\w ` to a string ` \(.+?\)|\w `
Gold: get whatever is between parentheses as a single match , and any char outside as an individual match in string ' (zyx)bc '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["findall"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get <unk> is between parentheses as a single match , and any char <unk> as an individual match in string ' <unk> '
Seq Out: get <unk> is between parentheses as a single match , and any char <unk> as an individual match in string ' <unk> ' <eos>

Predict: get a string ` (zyx)bc ` to a string ` (zyx)bc `
Gold: match regex ' \((.*?)\)|(\w) ' with string ' (zyx)bc '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["findall"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> match regex ' <unk> ' with string ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: match regex ' <unk> ' with string ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` (zyx)bc ` to a string ` (zyx)bc `
Gold: match multiple regex patterns with the alternation operator ` | ` in a string ` (zyx)bc `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["findall"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> match multiple regex patterns with the <unk> <unk> ` | ` in a string ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: match multiple regex patterns with the <unk> <unk> ` | ` in a string ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` elements `
Gold: formate each string cin list ` elements ` into pattern ' %{0}% '
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["elements"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Name"], ["Name"], ["Name"], ["value"], ["format"], ["element"], ["element"], ["elements"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> formate each string <unk> list ` elements ` into pattern ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: formate each string <unk> list ` elements ` into pattern ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` background-process ` to a string ` background-process `
Gold: open a background process ' background-process ' with arguments ' arguments '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["Popen"], ["elts"], ["Name"], ["Str"], ["Str"], ["subprocess"], ["<unk>"], ["arguments"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> open a background process ' <unk> ' with arguments ' arguments ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: open a background process ' <unk> ' with arguments ' arguments ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` mydict ` to a list ` mydict `
Gold: get list of values from dictionary ' mydict ' w.r.t . list of keys ' mykeys '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Subscript"], ["comprehension"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["Name"], ["Index"], ["Name"], ["Name"], ["mydict"], ["value"], ["x"], ["<unk>"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get list of values from dictionary ' mydict ' <unk> . list of keys ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get list of values from dictionary ' mydict ' <unk> . list of keys ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` Age ` in a list ` Age `
Gold: convert list ` [('Name', 'Joe'), ('Age', 22)] ` into a dictionary
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["List"], ["dict"], ["elts"], ["Tuple"], ["Tuple"], ["elts"], ["elts"], ["Str"], ["Str"], ["Str"], ["Num"], ["Name"], ["Joe"], ["Age"], ["22"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert list ` <unk> <unk> <unk> <unk> ` into a dictionary <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert list ` <unk> <unk> <unk> <unk> ` into a dictionary <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` data `
Gold: average each two columns of array ` data `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Subscript"], ["UnaryOp"], ["value"], ["reshape"], ["value"], ["slice"], ["op"], ["operand"], ["Call"], ["Attribute"], ["Index"], ["USub"], ["Num"], ["func"], ["args"], ["keywords"], ["value"], ["shape"], ["value"], ["1"], ["Attribute"], ["keyword"], ["Name"], ["Num"], ["value"], ["mean"], ["axis"], ["value"], ["data"], ["0"], ["Call"], ["Num"], ["func"], ["args"], ["keywords"], ["1"], ["Attribute"], ["UnaryOp"], ["Name"], ["value"], ["reshape"], ["op"], ["operand"], ["j"], ["Name"], ["USub"], ["Num"], ["data"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> average each two columns of array ` data ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: average each two columns of array ` data ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: double backslash escape all double quotes in string ` s `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["<unk>"], ["<unk>"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["encode"], ["unicode-escape"], ["Name"], ["s"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> double <unk> escape all double quotes in string ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: double <unk> escape all double quotes in string ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: split a string into a list of words and whitespace
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["split"], ["<unk>"], ["s"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a string into a list of words and whitespace <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a string into a list of words and whitespace <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: plotting stacked barplots on a panda data frame
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["value"], ["plot"], ["kind"], ["value"], ["<unk>"], ["value"], ["Name"], ["Str"], ["NameConstant"], ["df"], ["<unk>"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> <unk> <unk> on a panda data frame <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> <unk> <unk> on a panda data frame <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` myDictionary ` to a list ` myDictionary `
Gold: reverse the keys and values in a dictionary ` myDictionary `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["DictComp"], ["key"], ["value"], ["generators"], ["Subscript"], ["Subscript"], ["comprehension"], ["value"], ["slice"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["Name"], ["Index"], ["Name"], ["Index"], ["Name"], ["Call"], ["i"], ["value"], ["i"], ["value"], ["i"], ["func"], ["args"], ["keywords"], ["Num"], ["Num"], ["Name"], ["Call"], ["1"], ["0"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["items"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> reverse the keys and values in a dictionary ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: reverse the keys and values in a dictionary ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` myList `
Gold: finding the index of elements containing substring ' how ' and ' what ' in a list of strings ' myList ' .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["i"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["BoolOp"], ["elts"], ["func"], ["args"], ["keywords"], ["op"], ["values"], ["Name"], ["Name"], ["Name"], ["Name"], ["Or"], ["Compare"], ["Compare"], ["i"], ["j"], ["enumerate"], ["myList"], ["left"], ["ops"], ["comparators"], ["left"], ["ops"], ["comparators"], ["Str"], ["In"], ["Call"], ["Str"], ["In"], ["Call"], ["how"], ["func"], ["args"], ["keywords"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["value"], ["lower"], ["value"], ["lower"], ["Name"], ["Name"], ["j"], ["j"], ["<pad>"]]
Seq In: <sos> finding the index of elements containing substring ' how ' and ' what ' in a list of strings ' myList ' .
Seq Out: finding the index of elements containing substring ' how ' and ' what ' in a list of strings ' myList ' . <eos>

Predict: get a string ` str ` to a string ` str `
Gold: check if object ` obj ` is a string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["obj"], ["str"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if object ` obj ` is a string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if object ` obj ` is a string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` o ` to a string ` o `
Gold: check if object ` o ` is a string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["o"], ["str"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if object ` o ` is a string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if object ` o ` is a string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` o `
Gold: check if object ` o ` is a string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Compare"], ["left"], ["ops"], ["comparators"], ["Call"], ["<unk>"], ["Name"], ["func"], ["args"], ["keywords"], ["str"], ["Name"], ["Name"], ["type"], ["o"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if object ` o ` is a string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if object ` o ` is a string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` o ` to a string ` o `
Gold: check if object ` o ` is a string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["o"], ["str"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if object ` o ` is a string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if object ` o ` is a string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` obj_to_test ` to a string ` str `
Gold: check if ` obj_to_test ` is a string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["<unk>"], ["str"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if ` <unk> ` is a string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if ` <unk> ` is a string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` list1 `
Gold: append list ` list1 ` to ` list2 `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["extend"], ["list1"], ["Name"], ["list2"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append list ` list1 ` to ` list2 ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: append list ` list1 ` to ` list2 ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` list1 `
Gold: append list ` mylog ` to ` list1 `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["extend"], ["<unk>"], ["Name"], ["list1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append list ` <unk> ` to ` list1 ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: append list ` <unk> ` to ` list1 ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a `
Gold: append list ` a ` to ` c `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["extend"], ["a"], ["Name"], ["c"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append list ` a ` to ` c ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: append list ` a ` to ` c ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` list1 ` to a list ` list1 `
Gold: append items in list ` mylog ` to ` list1 `
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["Name"], ["Expr"], ["line"], ["<unk>"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["append"], ["line"], ["Name"], ["list1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append items in list ` <unk> ` to ` list1 ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: append items in list ` <unk> ` to ` list1 ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` a `
Gold: append a tuple of elements from list ` a ` with indexes ' [0][0] [0][2] ' to list ` b `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["value"], ["append"], ["elts"], ["Name"], ["Subscript"], ["Subscript"], ["b"], ["value"], ["slice"], ["value"], ["slice"], ["Subscript"], ["Index"], ["Subscript"], ["Index"], ["value"], ["slice"], ["value"], ["value"], ["slice"], ["value"], ["Name"], ["Index"], ["Num"], ["Name"], ["Index"], ["Num"], ["a"], ["value"], ["0"], ["a"], ["value"], ["2"], ["Num"], ["Num"], ["0"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append a tuple of elements from list ` a ` with indexes ' <unk> <unk> ' to list ` b ` <pad> <pad>
Seq Out: append a tuple of elements from list ` a ` with indexes ' <unk> <unk> ' to list ` b ` <eos> <pad> <pad>

Predict: get a list of a list ` app ` in a list ` app `
Gold: initialize ` SECRET_KEY ` in flask config with ` Your_secret_string `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Subscript"], ["Str"], ["value"], ["slice"], ["<unk>"], ["Attribute"], ["Index"], ["value"], ["config"], ["value"], ["Name"], ["Str"], ["app"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> initialize ` <unk> ` in flask <unk> with ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: initialize ` <unk> ` in flask <unk> with ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` index ` in a list ` index `
Gold: unpack a series of tuples in pandas into a dataframe with column names ' out-1 ' and ' out-2 '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["keyword"], ["keyword"], ["value"], ["DataFrame"], ["func"], ["args"], ["keywords"], ["columns"], ["value"], ["index"], ["value"], ["Name"], ["Attribute"], ["List"], ["Attribute"], ["pd"], ["value"], ["tolist"], ["elts"], ["value"], ["index"], ["Name"], ["Str"], ["Str"], ["Name"], ["out"], ["<unk>"], ["<unk>"], ["out"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> unpack a series of tuples in pandas into a dataframe with column names ' <unk> ' and ' <unk> ' <pad> <pad> <pad>
Seq Out: unpack a series of tuples in pandas into a dataframe with column names ' <unk> ' and ' <unk> ' <eos> <pad> <pad> <pad>

Predict: get a list of a list of a list ` stocks_list `
Gold: find the index of an element ' MSFT ' in a list ` stocks_list `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Compare"], ["x"], ["func"], ["args"], ["keywords"], ["left"], ["ops"], ["comparators"], ["Name"], ["Call"], ["Subscript"], ["Eq"], ["Str"], ["range"], ["func"], ["args"], ["keywords"], ["value"], ["slice"], ["<unk>"], ["Name"], ["Name"], ["Name"], ["Index"], ["len"], ["<unk>"], ["<unk>"], ["value"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find the index of an element ' <unk> ' in a list ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find the index of an element ' <unk> ' in a list ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` labels ` in a string ` labels `
Gold: rotate the xtick labels of matplotlib plot ` ax ` by ` 45 ` degrees to make long labels readable
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["keyword"], ["value"], ["<unk>"], ["labels"], ["<unk>"], ["value"], ["Name"], ["Num"], ["ax"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> the <unk> labels of matplotlib plot ` ax ` by ` <unk> ` degrees to make long labels readable <pad> <pad> <pad>
Seq Out: <unk> the <unk> labels of matplotlib plot ` ax ` by ` <unk> ` degrees to make long labels readable <eos> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: remove symbols from a string ` s `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["s"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove <unk> from a string ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove <unk> from a string ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` basename ` to a string ` basename `
Gold: get the current directory of a script
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["basename"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["Call"], ["value"], ["path"], ["value"], ["dirname"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Attribute"], ["Name"], ["os"], ["value"], ["path"], ["value"], ["realpath"], ["__file__"], ["Name"], ["Attribute"], ["os"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the current directory of a script <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the current directory of a script <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` '\\[0-7]{1,3}' ` to a string ` str `
Gold: find octal characters matches from a string ` str ` using regex
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["str"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find <unk> characters matches from a string ` str ` using regex <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find <unk> characters matches from a string ` str ` using regex <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` [ ](?=[A-Z]+\b) ` to a string ` [ ](?=[A-Z]+\b) `
Gold: split string ` input ` based on occurrences of regex pattern ' [ ](?=[A-Z]+\b) '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["split"], ["<unk>"], ["input"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ` input ` based on occurrences of regex pattern ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ` input ` based on occurrences of regex pattern ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` [ ](?=[A-Z]) ` to a string ` [ ](?=[A-Z]) `
Gold: split string ` input ` at every space followed by an upper-case letter
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["split"], ["<unk>"], ["input"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ` input ` at every space followed by an <unk> letter <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ` input ` at every space followed by an <unk> letter <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` url `
Gold: send multipart encoded file ` files ` to url ` url ` with headers ` headers ` and metadata ` data `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["r"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["keyword"], ["keyword"], ["keyword"], ["value"], ["post"], ["url"], ["files"], ["value"], ["headers"], ["value"], ["data"], ["value"], ["Name"], ["Name"], ["Name"], ["Name"], ["requests"], ["files"], ["headers"], ["data"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> send <unk> encoded file ` files ` to url ` url ` with <unk> ` <unk> ` and <unk> ` data ` <pad>
Seq Out: send <unk> encoded file ` files ` to url ` url ` with <unk> ` <unk> ` and <unk> ` data ` <eos> <pad>

Predict: get a string ` filename ` to a string ` filename `
Gold: write bytes ` bytes_ ` to a file ` filename ` in python 3
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["write"], ["<unk>"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Str"], ["open"], ["filename"], ["wb"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write bytes ` <unk> ` to a file ` filename ` in python 3 <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write bytes ` <unk> ` to a file ` filename ` in python 3 <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` lst ` with a list ` lst `
Gold: get a list from a list ` lst ` with values mapped into a dictionary ` dct `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Subscript"], ["comprehension"], ["value"], ["slice"], ["target"], ["iter"], ["ifs"], ["Name"], ["Index"], ["Name"], ["Name"], ["<unk>"], ["value"], ["k"], ["lst"], ["Name"], ["k"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get a list from a list ` lst ` with values <unk> into a dictionary ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get a list from a list ` lst ` with values <unk> into a dictionary ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` name ` to a string ` name `
Gold: find duplicate names in column ' name ' of the dataframe ` x `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["<unk>"], ["Attribute"], ["value"], ["index"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["set_index"], ["name"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find duplicate names in column ' name ' of the dataframe ` x ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find duplicate names in column ' name ' of the dataframe ` x ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 1.923328437452 `
Gold: truncate float 1.923328437452 to 3 decimal places
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Num"], ["Num"], ["round"], ["<unk>"], ["3"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> truncate float <unk> to 3 decimal places <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: truncate float <unk> to 3 decimal places <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list of list ` li `
Gold: sort list ` li ` in descending order based on the date value in second element of each list in list ` li `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["keyword"], ["sorted"], ["li"], ["key"], ["value"], ["reverse"], ["value"], ["Lambda"], ["NameConstant"], ["args"], ["body"], ["True"], ["arguments"], ["Call"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["func"], ["args"], ["keywords"], ["arg"], ["Attribute"], ["Subscript"], ["Str"], ["x"], ["annotation"], ["value"], ["strptime"], ["value"], ["slice"], ["%d/%m/%Y"], ["Name"], ["Name"], ["Index"], ["datetime"], ["x"], ["value"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort list ` li ` in descending order based on the date value in second element of each list in list ` li ` <pad> <pad> <pad> <pad> <pad>
Seq Out: sort list ` li ` in descending order based on the date value in second element of each list in list ` li ` <eos> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` ax `
Gold: place the radial ticks in plot ` ax ` at 135 degrees
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["ax"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> place the <unk> <unk> in plot ` ax ` at <unk> degrees <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: place the <unk> <unk> in plot ` ax ` at <unk> degrees <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` isabs `
Gold: check if path ` my_path ` is an absolute path
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["<unk>"], ["<unk>"], ["Attribute"], ["value"], ["path"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> check if path ` <unk> ` is an absolute path <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: check if path ` <unk> ` is an absolute path <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` keys ` to a string ` keys `
Gold: get number of keys in dictionary ` yourdict `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["len"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["keys"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get number of keys in dictionary ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get number of keys in dictionary ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` yourdictfile ` to a string ` yourdictfile `
Gold: count the number of keys in dictionary ` yourdictfile `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["len"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["set"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["split"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["read"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["open"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count the number of keys in dictionary ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count the number of keys in dictionary ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` id ` to a string ` df `
Gold: pandas dataframe get first row of each group by ' id '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["first"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["groupby"], ["id"], ["Name"], ["df"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> pandas dataframe get first row of each group by ' id ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: pandas dataframe get first row of each group by ' id ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` df `
Gold: split a list in first column into multiple columns keeping other columns as well in pandas data frame
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["keyword"], ["value"], ["concat"], ["elts"], ["axis"], ["value"], ["Name"], ["Call"], ["Subscript"], ["Num"], ["pd"], ["func"], ["args"], ["keywords"], ["value"], ["slice"], ["1"], ["Attribute"], ["Attribute"], ["Name"], ["Index"], ["value"], ["apply"], ["value"], ["Series"], ["df"], ["value"], ["Subscript"], ["Name"], ["Num"], ["value"], ["slice"], ["pd"], ["1"], ["Name"], ["Index"], ["df"], ["value"], ["Num"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a list in first column into multiple columns keeping other columns as <unk> in pandas data frame <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a list in first column into multiple columns keeping other columns as <unk> in pandas data frame <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` data ` to a string ` data `
Gold: extract attributes ' src="js/([^"]*\bjquery\b[^"]*)" ' from string ` data `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["data"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> extract attributes ' <unk> ' from string ` data ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: extract attributes ' <unk> ' from string ` data ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list `  `
Gold: sum integers contained in strings in list ` ['', '3.4', '', '', '1.0'] `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["sum"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["Name"], ["ListComp"], ["int"], ["func"], ["args"], ["keywords"], ["item"], ["elt"], ["generators"], ["Name"], ["Name"], ["Name"], ["comprehension"], ["float"], ["item"], ["_f"], ["target"], ["iter"], ["ifs"], ["Name"], ["List"], ["Name"], ["_f"], ["elts"], ["_f"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["<pad>"], ["<unk>"], ["<pad>"], ["<pad>"], ["1.0"], ["<pad>"]]
Seq In: <sos> sum integers <unk> in strings in list ` <unk> <unk> <unk> <unk> <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sum integers <unk> in strings in list ` <unk> <unk> <unk> <unk> <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` c:\Program Files\VMware\VMware Server\vmware-cmd.bat ` to a string ` c:\Program Files\VMware\VMware Server\vmware-cmd.bat `
Gold: call a subprocess with arguments ` c:\Program Files\VMware\VMware Server\vmware-cmd.bat ` that may contain spaces
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["Popen"], ["elts"], ["Name"], ["Str"], ["subprocess"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> call a subprocess with arguments ` <unk> ` that <unk> contain spaces <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: call a subprocess with arguments ` <unk> ` that <unk> contain spaces <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` n ` to a string ` n `
Gold: reverse a priority queue ` q ` in python without using classes
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["value"], ["<unk>"], ["elts"], ["Name"], ["UnaryOp"], ["Name"], ["<unk>"], ["op"], ["operand"], ["n"], ["USub"], ["Name"], ["n"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> reverse a <unk> queue ` <unk> ` in python without using classes <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: reverse a <unk> queue ` <unk> ` in python without using classes <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` b ` to a list ` b `
Gold: make a barplot of data in column ` group ` of dataframe ` df ` colour-coded according to list ` color `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["keyword"], ["value"], ["plot"], ["kind"], ["value"], ["color"], ["value"], ["Subscript"], ["Str"], ["List"], ["value"], ["slice"], ["bar"], ["elts"], ["Name"], ["Index"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["df"], ["value"], ["r"], ["g"], ["b"], ["r"], ["g"], ["b"], ["r"], ["Str"], ["group"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> make a <unk> of data in column ` group ` of dataframe ` df ` <unk> according to list ` color ` <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: make a <unk> of data in column ` group ` of dataframe ` df ` <unk> according to list ` color ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` data ` to a string ` data `
Gold: find all matches of regex pattern ' ([a-fA-F\d]{32}) ' in string ` data `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["data"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find all matches of regex pattern ' <unk> ' in string ` data ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find all matches of regex pattern ' <unk> ' in string ` data ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` my_list `
Gold: get the length of list ` my_list `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["len"], ["my_list"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the length of list ` my_list ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the length of list ` my_list ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` l `
Gold: getting the length of array ` l `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["len"], ["l"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> getting the length of array ` l ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: getting the length of array ` l ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s `
Gold: getting the length of array ` s `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["len"], ["s"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> getting the length of array ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: getting the length of array ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` my_tuple `
Gold: getting the length of ` my_tuple `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["len"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> getting the length of ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: getting the length of ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` my_string `
Gold: getting the length of ` my_string `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["len"], ["my_string"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> getting the length of ` my_string ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: getting the length of ` my_string ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` \a ` to a string ` \a `
Gold: remove escape character from string " \a "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["decode"], ["string_escape"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove escape character from string " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove escape character from string " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a ` to a string ` b `
Gold: replace each ' a ' with ' b ' and each ' b ' with ' a ' in the string ' obama ' in a single pass .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["<unk>"], ["b"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["b"], ["a"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["a"], ["<unk>"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> replace each ' a ' with ' b ' and each ' b ' with ' a ' in the string ' <unk> ' in a single pass .
Seq Out: replace each ' a ' with ' b ' and each ' b ' with ' a ' in the string ' <unk> ' in a single pass . <eos>

Predict: get a string ` rmtree ` to a string ` rmtree `
Gold: remove directory tree ' /folder_name '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["shutil"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove directory <unk> ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove directory <unk> ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` data ` with a list ` data `
Gold: create a new column ` weekday ` in pandas data frame ` data ` based on the values in column ` my_dt `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Subscript"], ["Call"], ["value"], ["slice"], ["func"], ["args"], ["keywords"], ["Name"], ["Index"], ["Attribute"], ["Lambda"], ["data"], ["value"], ["value"], ["apply"], ["args"], ["body"], ["Str"], ["Subscript"], ["arguments"], ["Call"], ["<unk>"], ["value"], ["slice"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["func"], ["args"], ["keywords"], ["Name"], ["Index"], ["arg"], ["Attribute"], ["data"], ["value"], ["x"], ["annotation"], ["value"], ["<unk>"], ["Str"], ["Name"], ["<unk>"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a new column ` <unk> ` in pandas data frame ` data ` based on the values in column ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create a new column ` <unk> ` in pandas data frame ` data ` based on the values in column ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` x `
Gold: reverse sort counter ` x ` by values
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["keyword"], ["sorted"], ["x"], ["key"], ["value"], ["reverse"], ["value"], ["Attribute"], ["NameConstant"], ["value"], ["get"], ["True"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> reverse sort <unk> ` x ` by values <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: reverse sort <unk> ` x ` by values <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` key ` to a list ` x `
Gold: reverse sort counter ` x ` by value
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["keyword"], ["keyword"], ["sorted"], ["func"], ["args"], ["keywords"], ["key"], ["value"], ["reverse"], ["value"], ["Name"], ["Call"], ["Lambda"], ["NameConstant"], ["list"], ["func"], ["args"], ["keywords"], ["args"], ["body"], ["True"], ["Attribute"], ["arguments"], ["Subscript"], ["value"], ["items"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["Name"], ["arg"], ["Name"], ["Index"], ["x"], ["pair"], ["annotation"], ["pair"], ["value"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> reverse sort <unk> ` x ` by value <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: reverse sort <unk> ` x ` by value <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a ` to a string ` b `
Gold: append a numpy array ' b ' to a numpy array ' a '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["value"], ["<unk>"], ["elts"], ["Name"], ["Name"], ["Name"], ["np"], ["a"], ["b"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> append a numpy array ' b ' to a numpy array ' a ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: append a numpy array ' b ' to a numpy array ' a ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` a ` to a list ` b `
Gold: numpy concatenate two arrays ` a ` and ` b ` along the first axis
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Name"], ["Tuple"], ["keyword"], ["concatenate"], ["elts"], ["axis"], ["value"], ["Name"], ["Name"], ["Num"], ["a"], ["b"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> numpy concatenate two arrays ` a ` and ` b ` along the first axis <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: numpy concatenate two arrays ` a ` and ` b ` along the first axis <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` a ` to a list ` b `
Gold: numpy concatenate two arrays ` a ` and ` b ` along the second axis
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Name"], ["Tuple"], ["keyword"], ["concatenate"], ["elts"], ["axis"], ["value"], ["Name"], ["Name"], ["Num"], ["a"], ["b"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> numpy concatenate two arrays ` a ` and ` b ` along the second axis <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: numpy concatenate two arrays ` a ` and ` b ` along the second axis <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of list ` a `
Gold: numpy concatenate two arrays ` a ` and ` b ` along the first axis
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Subscript"], ["c"], ["value"], ["slice"], ["Attribute"], ["Index"], ["value"], ["<unk>"], ["value"], ["Name"], ["Tuple"], ["np"], ["elts"], ["Subscript"], ["Subscript"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["ExtSlice"], ["Name"], ["ExtSlice"], ["a"], ["dims"], ["b"], ["dims"], ["Index"], ["Slice"], ["Index"], ["Slice"], ["value"], ["lower"], ["upper"], ["step"], ["value"], ["lower"], ["upper"], ["step"], ["NameConstant"], ["NameConstant"], ["value"], ["value"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> numpy concatenate two arrays ` a ` and ` b ` along the first axis <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: numpy concatenate two arrays ` a ` and ` b ` along the first axis <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` array ` to a string ` b `
Gold: numpy concatenate two arrays ` a ` and ` b ` along the first axis
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["value"], ["array"], ["elts"], ["Name"], ["Name"], ["Name"], ["np"], ["a"], ["b"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> numpy concatenate two arrays ` a ` and ` b ` along the first axis <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: numpy concatenate two arrays ` a ` and ` b ` along the first axis <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` socket ` in a string ` socket `
Gold: fetch address information for host ' google.com ' ion port 80
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Num"], ["value"], ["<unk>"], ["<unk>"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> fetch address <unk> for <unk> ' <unk> ' <unk> port <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: fetch address <unk> for <unk> ' <unk> ' <unk> port <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` xs ` in a list ` xs `
Gold: add a column ' day ' with value ' sat ' to dataframe ` df `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["keyword"], ["value"], ["xs"], ["<unk>"], ["level"], ["value"], ["<unk>"], ["value"], ["Name"], ["Str"], ["NameConstant"], ["df"], ["day"], ["False"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add a column ' day ' with value ' <unk> ' to dataframe ` df ` <pad> <pad> <pad> <pad>
Seq Out: add a column ' day ' with value ' <unk> ' to dataframe ` df ` <eos> <pad> <pad> <pad> <pad>

Predict: get a string ` status ` to a string ` Unauthorized `
Gold: return a 401 unauthorized in django
Tree: [["Module"], ["body"], ["Return"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["keyword"], ["HttpResponse"], ["<unk>"], ["status"], ["value"], ["Num"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> return a <unk> <unk> in django <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: return a <unk> <unk> in django <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` Flask ` in a list ` Flask `
Gold: flask set folder ' wherever ' as the default template folder
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["<unk>"], ["__name__"], ["<unk>"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> flask set folder ' <unk> ' as the default <unk> folder <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: flask set folder ' <unk> ' as the default <unk> folder <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` INSERT INTO t1 (SELECT * FROM t2) ` to a string ` INSERT INTO t1 (SELECT * FROM t2) `
Gold: how do i insert into INSERT INTO t1 (SELECT * FROM t2) ( select INSERT INTO t1 (SELECT * FROM t2) from t2 ) in sqlalchemy ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["execute"], ["<unk>"], ["Name"], ["session"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how do i insert into <unk> ( select <unk> from <unk> ) in sqlalchemy ? <pad> <pad> <pad> <pad> <pad>
Seq Out: how do i insert into <unk> ( select <unk> from <unk> ) in sqlalchemy ? <eos> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` c2 ` with a list ` c2 `
Gold: sort a list of lists ' c2 ' such that third row comes first
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Lambda"], ["c2"], ["args"], ["body"], ["arguments"], ["Subscript"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["arg"], ["Name"], ["Index"], ["row"], ["annotation"], ["row"], ["value"], ["Num"], ["2"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of lists ' <unk> ' <unk> that third row <unk> first <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of lists ' <unk> ' <unk> that third row <unk> first <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list of list ` c2 ` with a list ` c2 `
Gold: sorting a list of lists in python
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Lambda"], ["c2"], ["args"], ["body"], ["arguments"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["elts"], ["arg"], ["Subscript"], ["Subscript"], ["Subscript"], ["row"], ["annotation"], ["value"], ["slice"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Index"], ["Name"], ["Index"], ["Name"], ["Index"], ["row"], ["value"], ["row"], ["value"], ["row"], ["value"], ["Num"], ["Num"], ["Num"], ["2"], ["1"], ["0"], ["<pad>"]]
Seq In: <sos> sorting a list of lists in python <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sorting a list of lists in python <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list of list ` c2 `
Gold: sorting a list of lists in python
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Lambda"], ["c2"], ["args"], ["body"], ["arguments"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["elts"], ["arg"], ["Subscript"], ["Subscript"], ["row"], ["annotation"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Index"], ["Name"], ["Index"], ["row"], ["value"], ["row"], ["value"], ["Num"], ["Num"], ["2"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sorting a list of lists in python <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sorting a list of lists in python <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` sans-serif ` to a string ` sans-serif `
Gold: set font ` Arial ` to display non-ascii characters in matplotlib
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["value"], ["<unk>"], ["font"], ["arg"], ["value"], ["Name"], ["Dict"], ["<unk>"], ["keys"], ["values"], ["Str"], ["Str"], ["Str"], ["Str"], ["<unk>"], ["<unk>"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> set font ` <unk> ` to display non-ascii characters in matplotlib <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: set font ` <unk> ` to display non-ascii characters in matplotlib <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` date ` with a list ` df `
Gold: convert datetime column ' date ' of pandas dataframe ' df ' to ordinal
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Lambda"], ["value"], ["apply"], ["args"], ["body"], ["Subscript"], ["arguments"], ["Call"], ["value"], ["slice"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["func"], ["args"], ["keywords"], ["Name"], ["Index"], ["arg"], ["Attribute"], ["df"], ["value"], ["x"], ["annotation"], ["value"], ["<unk>"], ["Str"], ["Name"], ["date"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert datetime column ' date ' of pandas dataframe ' df ' to <unk> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert datetime column ' date ' of pandas dataframe ' df ' to <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` get_attribute ` to a string ` get_attribute `
Gold: get html source of selenium webelement ` element `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["element"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get html <unk> of selenium <unk> ` element ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get html <unk> of selenium <unk> ` element ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: get the integer location of a key ` bob ` in a pandas data frame
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["<unk>"], ["bob"], ["Attribute"], ["value"], ["index"], ["Name"], ["df"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the integer <unk> of a key ` bob ` in a pandas data frame <pad> <pad> <pad> <pad> <pad>
Seq Out: get the integer <unk> of a key ` bob ` in a pandas data frame <eos> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` gnome-terminal -e 'bash -c "sudo apt-get update; exec bash"' ` to a string ` gnome-terminal -e 'bash -c "sudo apt-get update; exec bash"' `
Gold: open a ' gnome ' terminal from python script and run ' sudo gnome-terminal -e 'bash -c "sudo apt-get update; exec bash"' update ' command .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["system"], ["<unk>"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> open a ' <unk> ' terminal from python script and run ' <unk> <unk> update ' command . <pad> <pad>
Seq Out: open a ' <unk> ' terminal from python script and run ' <unk> <unk> update ' command . <eos> <pad> <pad>

Predict: get a string ` my_dict ` to a string ` my_dict `
Gold: add an item with key ' third_key ' and value 1 to an dictionary ` my_dict `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Dict"], ["value"], ["update"], ["keys"], ["values"], ["Name"], ["Str"], ["Num"], ["my_dict"], ["<unk>"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add an item with key ' <unk> ' and value 1 to an dictionary ` my_dict ` <pad> <pad> <pad>
Seq Out: add an item with key ' <unk> ' and value 1 to an dictionary ` my_dict ` <eos> <pad> <pad> <pad>

Predict: get a string ` my_list ` to ' my_list `
Gold: declare an array
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["List"], ["my_list"], ["elts"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> declare an array <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: declare an array <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` my_list `
Gold: insert item ` 12 ` to a list ` my_list `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["value"], ["append"], ["12"], ["Name"], ["my_list"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> insert item ` 12 ` to a list ` my_list ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: insert item ` 12 ` to a list ` my_list ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` myList ` to a string ` myList `
Gold: add an entry ' wuggah ' at the beginning of list ` myList `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["Str"], ["value"], ["insert"], ["0"], ["<unk>"], ["Name"], ["myList"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add an <unk> ' <unk> ' at the beginning of list ` myList ` <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add an <unk> ' <unk> ' at the beginning of list ` myList ` <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` \x ` to a string ` \x `
Gold: convert a hex-string representation to actual bytes
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["decode"], ["hex"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["<unk>"], ["<pad>"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a <unk> representation to <unk> bytes <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a <unk> representation to <unk> bytes <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` in a list ` df `
Gold: select the last column of dataframe ` df `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["Subscript"], ["value"], ["slice"], ["Attribute"], ["Index"], ["value"], ["columns"], ["value"], ["Name"], ["UnaryOp"], ["df"], ["op"], ["operand"], ["USub"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> select the last column of dataframe ` df ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: select the last column of dataframe ` df ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` C ` in a list ` df `
Gold: get the first value from dataframe ` df ` where column ' Letters ' is equal to ' C '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Attribute"], ["Index"], ["value"], ["values"], ["value"], ["Subscript"], ["Num"], ["value"], ["slice"], ["0"], ["Attribute"], ["Index"], ["value"], ["loc"], ["value"], ["Name"], ["Tuple"], ["df"], ["elts"], ["Compare"], ["Str"], ["left"], ["ops"], ["comparators"], ["<unk>"], ["Subscript"], ["Eq"], ["Str"], ["value"], ["slice"], ["C"], ["Name"], ["Index"], ["df"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the first value from dataframe ` df ` where column ' <unk> ' is equal to ' C '
Seq Out: get the first value from dataframe ` df ` where column ' <unk> ' is equal to ' C ' <eos>

Predict: get a list of a list of a list ` column_stack `
Gold: converting two lists ` [1, 2, 3] ` and ` [4, 5, 6] ` into a matrix
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Tuple"], ["value"], ["<unk>"], ["elts"], ["Name"], ["List"], ["List"], ["np"], ["elts"], ["elts"], ["Num"], ["Num"], ["Num"], ["Num"], ["Num"], ["Num"], ["1"], ["2"], ["3"], ["4"], ["5"], ["6"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> converting two lists ` [1, 2, 3] ` and ` [4, 5, 6] ` into a matrix <pad> <pad> <pad>
Seq Out: converting two lists ` [1, 2, 3] ` and ` [4, 5, 6] ` into a matrix <eos> <pad> <pad> <pad>

Predict: get a string ` type `
Gold: get the type of ` i `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["type"], ["i"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the type of ` i ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the type of ` i ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` type `
Gold: determine the type of variable ` v `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["type"], ["v"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> determine the type of variable ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: determine the type of variable ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` type `
Gold: determine the type of variable ` v `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["type"], ["v"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> determine the type of variable ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: determine the type of variable ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` type `
Gold: determine the type of variable ` v `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["type"], ["v"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> determine the type of variable ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: determine the type of variable ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` type `
Gold: determine the type of variable ` v `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["type"], ["v"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> determine the type of variable ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: determine the type of variable ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` variable_name ` to a string ` variable_name `
Gold: get the type of variable ` variable_name `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["type"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the type of variable ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the type of variable ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` next ` in a list ` next `
Gold: get the 5th item of a generator
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["next"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["Num"], ["BinOp"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["5"], ["left"], ["op"], ["right"], ["Name"], ["Name"], ["Num"], ["Num"], ["Add"], ["Num"], ["itertools"], ["range"], ["10"], ["5"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the <unk> item of a generator <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the <unk> item of a generator <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` word ` to a string ` word `
Gold: print a string ` word ` with string format
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["format"], ["word"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> print a string ` word ` with string format <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: print a string ` word ` with string format <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string `  ` to a string `  `
Gold: join a list of strings ` list ` using a space ' '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["join"], ["list"], ["Str"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> join a list of strings ` list ` using a space ' ' <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: join a list of strings ` list ` using a space ' ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` n `
Gold: create list ` y ` containing two empty lists
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["y"], ["elt"], ["generators"], ["List"], ["comprehension"], ["elts"], ["target"], ["iter"], ["ifs"], ["Name"], ["Call"], ["n"], ["func"], ["args"], ["keywords"], ["Name"], ["Num"], ["range"], ["2"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create list ` y ` containing two empty lists <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create list ` y ` containing two empty lists <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` line `
Gold: read a file ' C:/name/MyDocuments/numbers ' into a list ` data `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["data"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Name"], ["Call"], ["value"], ["strip"], ["line"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["Str"], ["line"], ["open"], ["<unk>"], ["r"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> read a file ' <unk> ' into a list ` data ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: read a file ' <unk> ' into a list ` data ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` char `
Gold: delete all occurrences of character ' i ' in string ' it is icy '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["ListComp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["Name"], ["comprehension"], ["<pad>"], ["char"], ["target"], ["iter"], ["ifs"], ["Name"], ["Str"], ["Compare"], ["char"], ["<unk>"], ["left"], ["ops"], ["comparators"], ["Name"], ["NotEq"], ["Str"], ["char"], ["i"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> delete all occurrences of character ' i ' in string ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: delete all occurrences of character ' i ' in string ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` it is icy ` to a string ` it is icy `
Gold: delete all instances of a character ' i ' in a string ' it is icy '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Str"], ["value"], ["sub"], ["i"], ["<pad>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> delete all instances of a character ' i ' in a string ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: delete all instances of a character ' i ' in a string ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` it is icy ` to a string ` it is icy `
Gold: delete all characters " i " in string " it is icy "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["i"], ["<pad>"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> delete all characters " i " in string " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: delete all characters " i " in string " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` char `
Gold: how to delete all instances of a character in a string in python ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["ListComp"], ["value"], ["join"], ["elt"], ["generators"], ["Str"], ["Name"], ["comprehension"], ["<pad>"], ["char"], ["target"], ["iter"], ["ifs"], ["Name"], ["Str"], ["Compare"], ["char"], ["<unk>"], ["left"], ["ops"], ["comparators"], ["Name"], ["NotEq"], ["Str"], ["char"], ["i"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how to delete all instances of a character in a string in python ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how to delete all instances of a character in a string in python ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: drop rows of pandas dataframe ` df ` having nan in column at index " 1 "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["dropna"], ["subset"], ["value"], ["Name"], ["List"], ["df"], ["elts"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> drop rows of pandas dataframe ` df ` having nan in column at index " 1 " <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: drop rows of pandas dataframe ` df ` having nan in column at index " 1 " <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` myList `
Gold: get elements from list ` myList ` , that have a field ` n ` value 30
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Compare"], ["x"], ["myList"], ["left"], ["ops"], ["comparators"], ["Attribute"], ["Eq"], ["Num"], ["value"], ["n"], ["30"], ["Name"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get elements from list ` myList ` , that have a field ` n ` value <unk> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get elements from list ` myList ` , that have a field ` n ` value <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` nums `
Gold: converting list of strings ` intstringlist ` to list of integer ` nums `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["<unk>"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["int"], ["x"], ["x"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> converting list of strings ` <unk> ` to list of integer ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: converting list of strings ` <unk> ` to list of integer ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` Enter the unfriendly numbers: ` in a list ` Enter the unfriendly numbers: `
Gold: convert list of string numbers into list of integers
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Call"], ["map"], ["int"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["eval"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["input"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert list of string numbers into list of integers <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert list of string numbers into list of integers <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` . ` to a string ` . `
Gold: print " . " without newline
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["write"], ["."], ["Attribute"], ["value"], ["stdout"], ["Name"], ["sys"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> print " . " without newline <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: print " . " without newline <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 100 `
Gold: round off the float that is the product of ` 2.52 * 100 ` and convert it to an int
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["int"], ["func"], ["args"], ["keywords"], ["Name"], ["BinOp"], ["round"], ["left"], ["op"], ["right"], ["Num"], ["Mult"], ["Num"], ["<unk>"], ["100"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> round off the float that is the product of ` <unk> * 100 ` and convert it to an int <pad> <pad> <pad>
Seq Out: round off the float that is the product of ` <unk> * 100 ` and convert it to an int <eos> <pad> <pad> <pad>

Predict: get a list of a list ` file `
Gold: find all files in directory " /mydir " with extension " .txt "
Tree: [["Module"], ["body"], ["Expr"], ["For"], ["value"], ["target"], ["iter"], ["body"], ["orelse"], ["Call"], ["Name"], ["Call"], ["Pass"], ["func"], ["args"], ["keywords"], ["file"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Attribute"], ["Str"], ["value"], ["chdir"], ["<unk>"], ["value"], ["glob"], ["<unk>"], ["Name"], ["Name"], ["os"], ["glob"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find all files in directory " <unk> " with extension " .txt " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find all files in directory " <unk> " with extension " .txt " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` file `
Gold: find all files in directory " /mydir " with extension " .txt "
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["Call"], ["If"], ["file"], ["func"], ["args"], ["keywords"], ["test"], ["body"], ["orelse"], ["Attribute"], ["Str"], ["Call"], ["Pass"], ["value"], ["listdir"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["os"], ["value"], ["endswith"], [".txt"], ["Name"], ["file"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find all files in directory " <unk> " with extension " .txt " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find all files in directory " <unk> " with extension " .txt " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` file `
Gold: find all files in directory " /mydir " with extension " .txt "
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Tuple"], ["Call"], ["For"], ["elts"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["Name"], ["Name"], ["Attribute"], ["Str"], ["Name"], ["Name"], ["If"], ["root"], ["<unk>"], ["files"], ["value"], ["walk"], ["<unk>"], ["file"], ["files"], ["test"], ["body"], ["orelse"], ["Name"], ["Call"], ["Pass"], ["os"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["endswith"], [".txt"], ["Name"], ["file"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find all files in directory " <unk> " with extension " .txt " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find all files in directory " <unk> " with extension " .txt " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df `
Gold: plot dataframe ` df ` without a legend
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["plot"], ["legend"], ["value"], ["Name"], ["NameConstant"], ["df"], ["False"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> plot dataframe ` df ` without a legend <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: plot dataframe ` df ` without a legend <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` ip ` to a list ` ip `
Gold: loop through the ip address range " 192.168.x.x "
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["Call"], ["For"], ["i"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["body"], ["orelse"], ["Name"], ["Num"], ["Name"], ["Call"], ["Assign"], ["Expr"], ["range"], ["<unk>"], ["j"], ["func"], ["args"], ["keywords"], ["targets"], ["value"], ["value"], ["Name"], ["Num"], ["Name"], ["BinOp"], ["Call"], ["range"], ["<unk>"], ["<unk>"], ["left"], ["op"], ["right"], ["func"], ["args"], ["keywords"], ["Str"], ["Mod"], ["Tuple"], ["Name"], ["Name"], ["<unk>"], ["elts"], ["print"], ["<unk>"], ["Name"], ["Name"], ["i"], ["j"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> through the ip address range " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> through the ip address range " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 256 ` in a list ` 256 `
Gold: loop through the ip address range " 192.168.x.x "
Tree: [["Module"], ["body"], ["For"], ["target"], ["iter"], ["body"], ["orelse"], ["Tuple"], ["Call"], ["Pass"], ["elts"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["Call"], ["Call"], ["i"], ["j"], ["product"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["list"], ["func"], ["args"], ["keywords"], ["Name"], ["Num"], ["Name"], ["Num"], ["range"], ["<unk>"], ["range"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> through the ip address range " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> through the ip address range " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` generator ` to a list ` generator `
Gold: loop through the ip address range " 192.168.x.x "
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Str"], ["keyword"], ["<unk>"], ["<unk>"], ["<unk>"], ["step"], ["value"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> through the ip address range " <unk> " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> through the ip address range " <unk> " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` b `
Gold: sum the corresponding decimal values for binary values of each boolean element in list ` x `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["sum"], ["elt"], ["generators"], ["BinOp"], ["comprehension"], ["left"], ["op"], ["right"], ["target"], ["iter"], ["ifs"], ["Num"], ["<unk>"], ["Name"], ["Tuple"], ["Call"], ["Name"], ["1"], ["i"], ["elts"], ["func"], ["args"], ["keywords"], ["b"], ["Name"], ["Name"], ["Name"], ["Name"], ["i"], ["b"], ["enumerate"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sum the corresponding decimal values for binary values of each boolean element in list ` x ` <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sum the corresponding decimal values for binary values of each boolean element in list ` x ` <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` %r[LINE]%r[LINE]%r[LINE] ` to a string ` %r[LINE]%r[LINE]%r[LINE] `
Gold: write multiple strings ` line1 ` , ` line2 ` and ` line3 ` in one line in a file ` target `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["BinOp"], ["value"], ["write"], ["left"], ["op"], ["right"], ["Name"], ["Str"], ["Mod"], ["Tuple"], ["target"], ["<unk>"], ["elts"], ["Name"], ["Name"], ["Name"], ["<unk>"], ["<unk>"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write multiple strings ` <unk> ` , ` <unk> ` and ` <unk> ` in one line in a file ` <unk> `
Seq Out: write multiple strings ` <unk> ` , ` <unk> ` and ` <unk> ` in one line in a file ` <unk> ` <eos>

Predict: get a list of a list of a list ` data `
Gold: convert list of lists ` data ` into a flat list
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["comprehension"], ["y"], ["target"], ["iter"], ["ifs"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["IfExp"], ["x"], ["data"], ["y"], ["test"], ["body"], ["orelse"], ["Call"], ["Name"], ["List"], ["func"], ["args"], ["keywords"], ["x"], ["elts"], ["Name"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["x"], ["list"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert list of lists ` data ` into a flat list <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert list of lists ` data ` into a flat list <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` foo[LINE]bar ` to a string ` foo[LINE]bar `
Gold: print new line character as ` [LINE] ` in a string ` foo[LINE]bar `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["print"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["encode"], ["string_escape"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> print new line character as ` [LINE] ` in a string ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: print new line character as ` [LINE] ` in a string ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: remove last comma character ' , ' in string ` s `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["join"], ["func"], ["args"], ["keywords"], ["Str"], ["Attribute"], ["Str"], ["Num"], ["<pad>"], ["value"], ["rsplit"], [","], ["1"], ["Name"], ["s"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> remove last comma character ' , ' in string ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: remove last comma character ' , ' in string ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 1 ` in a list ` x `
Gold: calculate the mean of each element in array ` x ` with the element previous to it
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["BinOp"], ["left"], ["op"], ["right"], ["BinOp"], ["Div"], ["Num"], ["left"], ["op"], ["right"], ["2"], ["Subscript"], ["Add"], ["Subscript"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Slice"], ["Name"], ["Slice"], ["x"], ["lower"], ["upper"], ["step"], ["x"], ["lower"], ["upper"], ["step"], ["Num"], ["UnaryOp"], ["1"], ["op"], ["operand"], ["USub"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> calculate the mean of each element in array ` x ` with the element previous to it <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: calculate the mean of each element in array ` x ` with the element previous to it <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` 1 ` in a list ` x `
Gold: get an array of the mean of each two consecutive values in numpy array ` x `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["BinOp"], ["left"], ["op"], ["right"], ["Subscript"], ["Add"], ["BinOp"], ["value"], ["slice"], ["left"], ["op"], ["right"], ["Name"], ["Slice"], ["BinOp"], ["Div"], ["Num"], ["x"], ["lower"], ["upper"], ["step"], ["left"], ["op"], ["right"], ["2"], ["UnaryOp"], ["Subscript"], ["Sub"], ["Subscript"], ["op"], ["operand"], ["value"], ["slice"], ["value"], ["slice"], ["USub"], ["Num"], ["Name"], ["Slice"], ["Name"], ["Slice"], ["1"], ["x"], ["lower"], ["upper"], ["step"], ["x"], ["lower"], ["upper"], ["step"], ["Num"], ["UnaryOp"], ["1"], ["op"], ["operand"], ["USub"], ["Num"], ["1"], ["<pad>"]]
Seq In: <sos> get an array of the mean of each two consecutive values in numpy array ` x ` <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get an array of the mean of each two consecutive values in numpy array ` x ` <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` arr ` to a string ` arr `
Gold: load data containing ` utf-8 ` from file ` new.txt ` into numpy array ` arr `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["arr"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["keyword"], ["value"], ["<unk>"], ["func"], ["args"], ["keywords"], ["dtype"], ["value"], ["Name"], ["Attribute"], ["Str"], ["keyword"], ["Str"], ["numpy"], ["value"], ["open"], ["<unk>"], ["encoding"], ["value"], ["<unk>"], ["Name"], ["Str"], ["<unk>"], ["utf-8"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> load data containing ` utf-8 ` from file ` <unk> ` into numpy array ` arr ` <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: load data containing ` utf-8 ` from file ` <unk> ` into numpy array ` arr ` <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` l `
Gold: reverse sort list of dicts ` l ` by value for key ` time `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["l"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["keyword"], ["sorted"], ["l"], ["key"], ["value"], ["reverse"], ["value"], ["Call"], ["NameConstant"], ["func"], ["args"], ["keywords"], ["True"], ["Name"], ["Str"], ["itemgetter"], ["time"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> reverse sort list of dicts ` l ` by value for key ` time ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: reverse sort list of dicts ` l ` by value for key ` time ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` l ` with a list ` l `
Gold: sort a list of dictionary ` l ` based on key ` time ` in descending order
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["l"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["keyword"], ["sorted"], ["l"], ["key"], ["value"], ["reverse"], ["value"], ["Lambda"], ["NameConstant"], ["args"], ["body"], ["True"], ["arguments"], ["Subscript"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["arg"], ["Name"], ["Index"], ["a"], ["annotation"], ["a"], ["value"], ["Str"], ["time"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of dictionary ` l ` based on key ` time ` in descending order <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of dictionary ` l ` based on key ` time ` in descending order <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` df ` to a list ` df `
Gold: get rows of dataframe ` df ` that match regex ' (Hel|Just) '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Attribute"], ["Index"], ["value"], ["loc"], ["value"], ["Name"], ["Call"], ["df"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["contains"], ["<unk>"], ["Attribute"], ["value"], ["str"], ["Subscript"], ["value"], ["slice"], ["Name"], ["Index"], ["df"], ["value"], ["Num"], ["0"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get rows of dataframe ` df ` that match regex ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get rows of dataframe ` df ` that match regex ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` \[(.*)\] ` to a string ` \[(.*)\] `
Gold: find the string in ` your_string ` between two special characters " [ " and " ] "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["value"], ["group"], ["1"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["search"], ["<unk>"], ["your_string"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find the string in ` <unk> ` between two special characters " [ " and " ] " <pad> <pad> <pad> <pad> <pad>
Seq Out: find the string in ` <unk> ` between two special characters " [ " and " ] " <eos> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` d `
Gold: how to create a list of date string in ' yyyymmdd ' format with python pandas ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Str"], ["Name"], ["Call"], ["value"], ["strftime"], ["<unk>"], ["d"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["Str"], ["d"], ["value"], ["<unk>"], ["<unk>"], ["<unk>"], ["Name"], ["pandas"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how to create a list of date string in ' <unk> ' format with python pandas ? <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how to create a list of date string in ' <unk> ' format with python pandas ? <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` count ` to a string ` count `
Gold: count number of times string ' The big brown fox is brown ' occurred in string ' The big brown fox is brown '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["count"], ["<unk>"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> count number of times string ' <unk> ' <unk> in string ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: count number of times string ' <unk> ' <unk> in string ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` json ` to a string ` json `
Gold: decode json string ` request.body ` to python dict
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Attribute"], ["value"], ["loads"], ["value"], ["body"], ["Name"], ["Name"], ["json"], ["request"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> decode json string ` <unk> ` to python dict <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: decode json string ` <unk> ` to python dict <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` url ` to a string ` file_name `
Gold: download the file from url ` url ` and save it under file ` file_name `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["Name"], ["value"], ["urlretrieve"], ["url"], ["file_name"], ["Attribute"], ["value"], ["request"], ["Name"], ["urllib"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> download the file from url ` url ` and save it <unk> file ` file_name ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: download the file from url ` url ` and save it <unk> file ` file_name ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text `
Gold: split string ` text ` by space
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["split"], ["Name"], ["text"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ` text ` by space <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ` text ` by space <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` , `
Gold: split string ` text ` by " , "
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["split"], [","], ["Name"], ["text"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ` text ` by " , " <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ` text ` by " , " <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` line `
Gold: split string ` line ` into a list by whitespace
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["split"], ["Name"], ["line"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split string ` line ` into a list by whitespace <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split string ` line ` into a list by whitespace <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` s `
Gold: replace dot characters ' . ' associated with ascii letters in list ` s ` with space ' '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["Name"], ["Name"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["i"], ["i"], ["s"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> replace dot characters ' . ' associated with ascii letters in list ` s ` with space ' ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: replace dot characters ' . ' associated with ascii letters in list ` s ` with space ' ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` s ` with a list ` s `
Gold: sort list ` list_of_strings ` based on second index of each string ` s `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["sorted"], ["<unk>"], ["key"], ["value"], ["Lambda"], ["args"], ["body"], ["arguments"], ["Subscript"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["arg"], ["Call"], ["Index"], ["s"], ["annotation"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Str"], ["Num"], ["value"], ["split"], [","], ["1"], ["Name"], ["s"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort list ` <unk> ` based on second index of each string ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort list ` <unk> ` based on second index of each string ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` check_call ` to a string ` check_call `
Gold: call multiple bash function ‘ vasp | tee tee_output ’ and ‘ vasp | tee tee_output ’ using ‘ vasp | tee tee_output ’
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["value"], ["<unk>"], ["<unk>"], ["shell"], ["value"], ["Name"], ["NameConstant"], ["subprocess"], ["True"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> call multiple bash function ‘ <unk> ’ and ‘ <unk> ’ using ‘ <unk> ’ <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: call multiple bash function ‘ <unk> ’ and ‘ <unk> ’ using ‘ <unk> ’ <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` lst `
Gold: eliminate all strings from list ` lst `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["element"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Call"], ["element"], ["lst"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["element"], ["int"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> all strings from list ` lst ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> all strings from list ` lst ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` lst `
Gold: get all the elements except strings from the list ' lst ' .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["element"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["UnaryOp"], ["element"], ["lst"], ["op"], ["operand"], ["Not"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["element"], ["str"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get all the elements except strings from the list ' lst ' . <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get all the elements except strings from the list ' lst ' . <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` name ` with a list ` name `
Gold: sort a list of dictionaries ` list_to_be_sorted ` by the value of the dictionary key ` name `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["sorted"], ["<unk>"], ["key"], ["value"], ["Lambda"], ["args"], ["body"], ["arguments"], ["Subscript"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["arg"], ["Name"], ["Index"], ["k"], ["annotation"], ["k"], ["value"], ["Str"], ["name"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of dictionaries ` <unk> ` by the value of the dictionary key ` name ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of dictionaries ` <unk> ` by the value of the dictionary key ` name ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` l `
Gold: sort a list of dictionaries ` l ` by values in key ` name ` in descending order
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["keyword"], ["keyword"], ["sorted"], ["l"], ["key"], ["value"], ["reverse"], ["value"], ["Call"], ["NameConstant"], ["func"], ["args"], ["keywords"], ["True"], ["Name"], ["Str"], ["itemgetter"], ["name"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of dictionaries ` l ` by values in key ` name ` in descending order <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of dictionaries ` l ` by values in key ` name ` in descending order <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` list_of_dicts ` to a string ` name `
Gold: how do i sort a list of dictionaries by values of the dictionary in python ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Call"], ["list_of_dicts"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["itemgetter"], ["name"], ["Name"], ["operator"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how do i sort a list of dictionaries by values of the dictionary in python ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how do i sort a list of dictionaries by values of the dictionary in python ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` list_of_dicts ` to a string ` list_of_dicts `
Gold: how do i sort a list of dictionaries by values of the dictionary in python ?
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Call"], ["list_of_dicts"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["itemgetter"], ["<unk>"], ["Name"], ["operator"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how do i sort a list of dictionaries by values of the dictionary in python ? <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how do i sort a list of dictionaries by values of the dictionary in python ? <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` df ` to a string ` df `
Gold: how to sort a dataframe by the ocurrences in a column in python ( pandas )
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["keyword"], ["value"], ["sort"], ["<unk>"], ["ascending"], ["value"], ["Call"], ["NameConstant"], ["func"], ["args"], ["keywords"], ["False"], ["Attribute"], ["value"], ["sum"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["groupby"], ["<unk>"], ["Name"], ["df"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> how to sort a dataframe by the <unk> in a column in python ( pandas ) <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: how to sort a dataframe by the <unk> in a column in python ( pandas ) <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` , ` to a list ` , `
Gold: join together with " , " elements inside a list indexed with ' category ' within a dictionary ` trans `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Subscript"], ["value"], ["join"], ["value"], ["slice"], ["Str"], ["Name"], ["Index"], [","], ["<unk>"], ["value"], ["Str"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> join together with " , " elements inside a list <unk> with ' <unk> ' within a dictionary ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: join together with " , " elements inside a list <unk> with ' <unk> ' within a dictionary ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` C ` to a string ` C `
Gold: concatenate array of strings ` ['A', 'B', 'C', 'D'] ` into a string
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["List"], ["value"], ["join"], ["elts"], ["Str"], ["Str"], ["Str"], ["Str"], ["Str"], ["<pad>"], ["A"], ["B"], ["C"], ["D"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> concatenate array of strings ` <unk> <unk> <unk> <unk> ` into a string <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: concatenate array of strings ` <unk> <unk> <unk> <unk> ` into a string <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` url ` to a string ` url `
Gold: get json data from restful service ' url '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["load"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["json"], ["value"], ["urlopen"], ["url"], ["Attribute"], ["value"], ["request"], ["Name"], ["urllib"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get json data from <unk> <unk> ' url ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get json data from <unk> <unk> ' url ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` x `
Gold: remove all strings from a list a strings ` sents ` where the values starts with ` @$ ` or ` # `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["x"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["BoolOp"], ["x"], ["<unk>"], ["op"], ["values"], ["And"], ["UnaryOp"], ["UnaryOp"], ["op"], ["operand"], ["op"], ["operand"], ["Not"], ["Call"], ["Not"], ["Call"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Attribute"], ["Str"], ["value"], ["startswith"], ["<unk>"], ["value"], ["startswith"], ["#"], ["Name"], ["Name"], ["x"], ["x"], ["<pad>"]]
Seq In: <sos> remove all strings from a list a strings ` <unk> ` where the values starts with ` <unk> ` or ` <unk> ` <pad> <pad> <pad> <pad>
Seq Out: remove all strings from a list a strings ` <unk> ` where the values starts with ` <unk> ` or ` <unk> ` <eos> <pad> <pad> <pad> <pad>

Predict: get a string ` Entry `
Gold: django filter by hour
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["filter"], ["<unk>"], ["value"], ["Attribute"], ["Str"], ["value"], ["objects"], ["<unk>"], ["Name"], ["Entry"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> django filter by hour <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: django filter by hour <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` time ` in a list ` item `
Gold: sort a list of dictionary ` list ` first by key ` points ` and then by ` time `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Lambda"], ["list"], ["args"], ["body"], ["arguments"], ["Tuple"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["elts"], ["arg"], ["Subscript"], ["Subscript"], ["item"], ["annotation"], ["value"], ["slice"], ["value"], ["slice"], ["Name"], ["Index"], ["Name"], ["Index"], ["item"], ["value"], ["item"], ["value"], ["Str"], ["Str"], ["<unk>"], ["time"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of dictionary ` list ` first by key ` points ` and then by ` time ` <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of dictionary ` list ` first by key ` points ` and then by ` time ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` total_seconds ` to a string ` total_seconds `
Gold: convert datetime object ` (1970, 1, 1) ` to seconds
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["<unk>"], ["BinOp"], ["left"], ["op"], ["right"], ["Name"], ["Sub"], ["Call"], ["t"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Num"], ["Num"], ["Num"], ["value"], ["datetime"], ["1970"], ["1"], ["1"], ["Name"], ["datetime"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert datetime object ` <unk> 1, <unk> ` to seconds <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert datetime object ` <unk> 1, <unk> ` to seconds <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` (\_a)?\.([^\.]*)$ ` to a string ` (\_a)?\.([^\.]*)$ `
Gold: insert ` _suff ` before the file extension in ` long.file.name.jpg ` or replace ` _a ` with ` suff ` if it precedes the extension .
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Str"], ["value"], ["sub"], ["<unk>"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> insert ` <unk> ` before the file extension in ` <unk> ` or replace ` <unk> ` with ` <unk> ` if it <unk> the extension .
Seq Out: insert ` <unk> ` before the file extension in ` <unk> ` or replace ` <unk> ` with ` <unk> ` if it <unk> the extension . <eos>

Predict: get a list ` imp ` in a string ` imp `
Gold: reload a module ` module `
Tree: [["Module"], ["body"], ["Import"], ["Expr"], ["names"], ["value"], ["alias"], ["Call"], ["<unk>"], ["asname"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["<unk>"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> a module ` module ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> a module ` module ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` H ` to a list ` H `
Gold: convert integer ` number ` into an unassigned integer
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Call"], ["value"], ["unpack"], ["H"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["Name"], ["struct"], ["value"], ["pack"], ["h"], ["number"], ["Name"], ["struct"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert integer ` number ` into an <unk> integer <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert integer ` number ` into an <unk> integer <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` numlist `
Gold: convert int values in list ` numlist ` to float
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["ListComp"], ["<unk>"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Name"], ["float"], ["x"], ["x"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert int values in list ` <unk> ` to float <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert int values in list ` <unk> ` to float <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` filename ` to a string ` filename `
Gold: write dataframe ` df ` , excluding index , to a csv file
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["keyword"], ["value"], ["to_csv"], ["filename"], ["index"], ["value"], ["Name"], ["NameConstant"], ["df"], ["False"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write dataframe ` df ` , excluding index , to a csv file <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write dataframe ` df ` , excluding index , to a csv file <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` json_data ` to a string ` json_data `
Gold: convert a urllib unquoted string ` unescaped ` to a json data ` json_data `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Name"], ["Call"], ["json_data"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Name"], ["value"], ["loads"], ["<unk>"], ["Name"], ["json"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert a <unk> <unk> string ` <unk> ` to a json data ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert a <unk> <unk> string ` <unk> ` to a json data ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` 127 `
Gold: create a list containing all ascii characters as its elements
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["Call"], ["comprehension"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["Name"], ["Name"], ["Name"], ["Call"], ["chr"], ["i"], ["i"], ["func"], ["args"], ["keywords"], ["Name"], ["Num"], ["range"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a list containing all ascii characters as its elements <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create a list containing all ascii characters as its elements <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` newFile ` in a list ` newFile `
Gold: write ` newFileBytes ` to a binary file ` newFile `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["write"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["Starred"], ["<unk>"], ["value"], ["pack"], ["<unk>"], ["value"], ["Name"], ["Name"], ["struct"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write ` <unk> ` to a binary file ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write ` <unk> ` to a binary file ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` string ` to a string ` string `
Gold: python regex - check for a capital letter with a following lowercase in string ` string `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["Name"], ["value"], ["sub"], ["<unk>"], ["<pad>"], ["string"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> python regex - check for a capital letter with a following lowercase in string ` string ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: python regex - check for a capital letter with a following lowercase in string ` string ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` keys `
Gold: get the last key of dictionary ` dict `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Name"], ["Call"], ["UnaryOp"], ["list"], ["func"], ["args"], ["keywords"], ["op"], ["operand"], ["Attribute"], ["USub"], ["Num"], ["value"], ["keys"], ["1"], ["Name"], ["dict"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the last key of dictionary ` dict ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the last key of dictionary ` dict ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` file ` to a string ` file `
Gold: write line " hi there " to file ` f `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["keyword"], ["print"], ["<unk>"], ["file"], ["value"], ["Name"], ["f"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write line " <unk> " to file ` f ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write line " <unk> " to file ` f ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` f ` to a string ` f `
Gold: write line " hi there[LINE] there " to file ` myfile `
Tree: [["Module"], ["body"], ["Assign"], ["Expr"], ["Expr"], ["targets"], ["value"], ["value"], ["value"], ["Name"], ["Call"], ["Call"], ["Call"], ["f"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Str"], ["Attribute"], ["Str"], ["Attribute"], ["open"], ["myfile"], ["w"], ["value"], ["write"], ["<unk>"], ["value"], ["close"], ["Name"], ["Name"], ["f"], ["f"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write line " <unk> <unk> " to file ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write line " <unk> <unk> " to file ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` a ` <unk> ` ' to ' the_file '
Gold: write line " Hello " to file ` somefile.txt `
Tree: [["Module"], ["body"], ["With"], ["items"], ["body"], ["withitem"], ["Expr"], ["context_expr"], ["optional_vars"], ["value"], ["Call"], ["Name"], ["Call"], ["func"], ["args"], ["keywords"], ["<unk>"], ["func"], ["args"], ["keywords"], ["Name"], ["Str"], ["Str"], ["Attribute"], ["Str"], ["open"], ["<unk>"], ["a"], ["value"], ["write"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> write line " Hello " to file ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: write line " Hello " to file ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: convert unicode string ` s ` to ascii
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["encode"], ["<unk>"], ["Name"], ["s"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> convert unicode string ` s ` to ascii <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: convert unicode string ` s ` to ascii <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list ` -added ` to a string ` -added `
Gold: django get maximum value associated with field ' added ' in model ` AuthorizedEmail `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Call"], ["Index"], ["func"], ["args"], ["keywords"], ["value"], ["Attribute"], ["Str"], ["Num"], ["value"], ["order_by"], ["<unk>"], ["0"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["filter"], ["group"], ["value"], ["Attribute"], ["Name"], ["value"], ["objects"], ["group"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> django get maximum value associated with field ' <unk> ' in model ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: django get maximum value associated with field ' <unk> ' in model ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` text `
Gold: find all numbers and dots from a string ` text ` using regex
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["text"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> find all numbers and <unk> from a string ` text ` using regex <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: find all numbers and <unk> from a string ` text ` using regex <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` text ` to a string ` text `
Gold: python regex to find all numbers and dots from ' text '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["text"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> python regex to find all numbers and <unk> from ' text ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: python regex to find all numbers and <unk> from ' text ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` powershell.exe ` to a string ` powershell.exe `
Gold: execute script ' script.ps1 ' using ' powershell.exe ' shell
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["system"], ["<unk>"], ["<unk>"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> execute script ' <unk> ' using ' <unk> ' shell <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: execute script ' <unk> ' using ' <unk> ' shell <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: sort a list ` b ` to list ` b `
Gold: sort a list of tuples ` b ` by third item in the tuple
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["keyword"], ["value"], ["sort"], ["key"], ["value"], ["Name"], ["Lambda"], ["b"], ["args"], ["body"], ["arguments"], ["Subscript"], ["args"], ["vararg"], ["kwonlyargs"], ["kw_defaults"], ["kwarg"], ["defaults"], ["value"], ["slice"], ["arg"], ["Subscript"], ["Index"], ["x"], ["annotation"], ["value"], ["slice"], ["value"], ["Name"], ["Index"], ["Num"], ["x"], ["value"], ["2"], ["Num"], ["1"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sort a list of tuples ` b ` by third item in the tuple <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sort a list of tuples ` b ` by third item in the tuple <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` get_keys ` to a string ` get_keys `
Gold: get a list of all keys in cassandra database ` cf ` with pycassa
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["list"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["<unk>"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["<unk>"], ["Name"], ["<unk>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get a list of all keys in <unk> database ` <unk> ` with <unk> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get a list of all keys in <unk> database ` <unk> ` with <unk> <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` datetime `
Gold: create a datetime with the current date & time
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["value"], ["now"], ["Attribute"], ["value"], ["datetime"], ["Name"], ["datetime"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> create a datetime with the current date & time <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: create a datetime with the current date & time <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list of a list ` lst `
Gold: get the index of an integer ` 1 ` from a list ` lst ` if the list also contains boolean items
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["GeneratorExp"], ["next"], ["elt"], ["generators"], ["Name"], ["comprehension"], ["i"], ["target"], ["iter"], ["ifs"], ["Tuple"], ["Call"], ["BoolOp"], ["elts"], ["func"], ["args"], ["keywords"], ["op"], ["values"], ["Name"], ["Name"], ["Name"], ["Name"], ["And"], ["UnaryOp"], ["Compare"], ["i"], ["x"], ["enumerate"], ["lst"], ["op"], ["operand"], ["left"], ["ops"], ["comparators"], ["Not"], ["Call"], ["Name"], ["Eq"], ["Num"], ["func"], ["args"], ["keywords"], ["x"], ["1"], ["Name"], ["Name"], ["Name"], ["isinstance"], ["x"], ["bool"], ["<pad>"]]
Seq In: <sos> get the index of an integer ` 1 ` from a list ` lst ` if the list <unk> contains boolean items
Seq Out: get the index of an integer ` 1 ` from a list ` lst ` if the list <unk> contains boolean items <eos>

Predict: get a list of a list of a list ` a `
Gold: subtract 13 from every number in a list ` a `
Tree: [["Module"], ["body"], ["Assign"], ["targets"], ["value"], ["Subscript"], ["ListComp"], ["value"], ["slice"], ["elt"], ["generators"], ["Name"], ["Slice"], ["BinOp"], ["comprehension"], ["a"], ["lower"], ["upper"], ["step"], ["left"], ["op"], ["right"], ["target"], ["iter"], ["ifs"], ["Name"], ["Sub"], ["Num"], ["Name"], ["Name"], ["x"], ["<unk>"], ["x"], ["a"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> subtract <unk> from every number in a list ` a ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: subtract <unk> from every number in a list ` a ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` C:\ ` to a string ` C:\ `
Gold: choose a random file from the directory contents of the c drive , ` C:\ `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Call"], ["value"], ["choice"], ["func"], ["args"], ["keywords"], ["Name"], ["Attribute"], ["Str"], ["random"], ["value"], ["listdir"], ["<unk>"], ["Name"], ["os"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> <unk> a random file from the directory contents of the c <unk> , ` <unk> ` <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: <unk> a random file from the directory contents of the c <unk> , ` <unk> ` <eos> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` x ` in a list ` x `
Gold: get the highest element in absolute value in a numpy matrix ` x `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Call"], ["Call"], ["keyword"], ["max"], ["func"], ["args"], ["keywords"], ["func"], ["args"], ["keywords"], ["key"], ["value"], ["Attribute"], ["Attribute"], ["Name"], ["value"], ["min"], ["value"], ["max"], ["abs"], ["Name"], ["Name"], ["x"], ["x"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get the highest element in absolute value in a numpy matrix ` x ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get the highest element in absolute value in a numpy matrix ` x ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` s ` to a string ` s `
Gold: get all urls within text ` s `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["BinOp"], ["value"], ["findall"], ["<unk>"], ["s"], ["left"], ["op"], ["right"], ["Name"], ["Attribute"], ["BitOr"], ["Attribute"], ["re"], ["value"], ["MULTILINE"], ["value"], ["DOTALL"], ["Name"], ["Name"], ["re"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> get all <unk> within text ` s ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: get all <unk> within text ` s ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` http://[^t][^s"]+\.html ` to a string ` http://[^t][^s"]+\.html `
Gold: match urls whose domain does n't start with ` t ` from string ` document ` using regex
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Name"], ["value"], ["findall"], ["<unk>"], ["<unk>"], ["Name"], ["re"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> match <unk> whose <unk> does n't start with ` t ` from string ` <unk> ` using regex <pad> <pad> <pad> <pad>
Seq Out: match <unk> whose <unk> does n't start with ` t ` from string ` <unk> ` using regex <eos> <pad> <pad> <pad> <pad>

Predict: get a string ` mystring ` to a string ` mystring `
Gold: split a string ` mystring ` considering the spaces ' '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["value"], ["split"], ["!"], ["Call"], ["func"], ["args"], ["keywords"], ["Attribute"], ["Str"], ["Str"], ["value"], ["replace"], ["<pad>"], ["<unk>"], ["Name"], ["mystring"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> split a string ` mystring ` <unk> the spaces ' ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: split a string ` mystring ` <unk> the spaces ' ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a string ` path ` to a string ` path `
Gold: open file ` path ` with mode ' r '
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Call"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Str"], ["open"], ["path"], ["r"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> open file ` path ` with mode ' <unk> ' <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: open file ` path ` with mode ' <unk> ' <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of list ` data ` to a list ` data `
Gold: sum elements at the same index in list ` data `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["ListComp"], ["elt"], ["generators"], ["ListComp"], ["comprehension"], ["elt"], ["generators"], ["target"], ["iter"], ["ifs"], ["Call"], ["comprehension"], ["Name"], ["Call"], ["func"], ["args"], ["keywords"], ["target"], ["iter"], ["ifs"], ["items"], ["func"], ["args"], ["keywords"], ["Name"], ["Name"], ["Name"], ["Call"], ["Name"], ["Starred"], ["sum"], ["item"], ["item"], ["func"], ["args"], ["keywords"], ["zip"], ["value"], ["Name"], ["Starred"], ["Name"], ["zip"], ["value"], ["data"], ["Name"], ["items"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> sum elements at the same index in list ` data ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: sum elements at the same index in list ` data ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

Predict: get a list of a list ` a `
Gold: add a new axis to array ` a `
Tree: [["Module"], ["body"], ["Expr"], ["value"], ["Subscript"], ["value"], ["slice"], ["Name"], ["ExtSlice"], ["a"], ["dims"], ["Slice"], ["Index"], ["lower"], ["upper"], ["step"], ["value"], ["Attribute"], ["value"], ["<unk>"], ["Name"], ["np"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"], ["<pad>"]]
Seq In: <sos> add a new axis to array ` a ` <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>
Seq Out: add a new axis to array ` a ` <eos> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad> <pad>

