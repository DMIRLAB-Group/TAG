<pad>	0
<sos>	1
<eos>	2
<unk>	3
delete	4
row	5
`	6
page	7
serialize	8
dictionary	9
data	10
and	11
its	12
keys	13
to	14
a	15
json	16
formatted	17
string	18
get	19
the	20
attribute	21
x	22
from	23
object	24
beautifulsoup	25
find	26
all	27
'	28
elements	29
in	30
html	31
soup	32
at	33
five	34
starting	35
fourth	36
element	37
split	38
s	39
into	40
integers	41
select	42
div	43
with	44
an	45
id	46
value	47
ending	48
sub-string	49
parsed	50
rows	51
pandas	52
by	53
adding	54
their	55
values	56
set	57
y	58
axis	59
range	60
0,	61
1000	62
subplot	63
using	64
replace	65
column	66
BrandName	67
of	68
dataframe	69
df	70
another	71
A	72
check	73
if	74
contains	75
"	76
is	77
sort	78
list	79
mylist	80
tuples	81
arbitrary	82
key	83
order	84
calling	85
external	86
command	87
args	88
create	89
containing	90
permutations	91
each	92
variable	93
as	94
current	95
directory	96
remove	97
square	98
brackets	99
index	100
make	101
60	102
seconds	103
time	104
delay	105
round	106
off	107
entries	108
two	109
decimal	110
places	111
,	112
three	113
convert	114
binary	115
python	116
extract	117
first	118
four	119
ID	120
d	121
iterable	122
adict	123
truncate	124
up	125
character	126
:	127
size	128
file	129
empty	130
frame	131
df2	132
df1	133
hex	134
byte	135
strings	136
unpack	137
i	138
arguments	139
function	140
foo	141
change	142
notation	143
matplotlib	144
plt	145
count	146
number	147
append	148
dict	149
e	150
booleans	151
path	152
module	153
random	154
capital	155
form	156
jinja2	157
formate	158
date	159
pattern	160
print	161
after	162
specific	163
substring	164
my_string	165
whose	166
column_name	167
equals	168
scalar	169
what	170
's	171
best	172
way	173
search	174
for	175
dictionaries	176
?	177
1	178
month	179
today	180
reverse	181
x-axis	182
points	183
pyplot	184
drop	185
timeseries	186
start_remove	187
end_remove	188
post	189
request	190
url	191
parameters	192
payload	193
l	194
2	195
item	196
determine	197
checkbox	198
checked	199
selenium	200
webdriver	201
apply	202
lists	203
arrays	204
columns	205
named	206
multiindex	207
across	208
level	209
.	210
c	211
mysql	212
execute	213
query	214
window	215
possible	216
sequences	217
[2,	218
3,	219
4]	220
corresponding	221
lst	222
lst2	223
how	224
class	225
name	226
occurrence	227
within	228
unicode	229
title	230
ascii	231
add	232
characters	233
!@#$	234
line	235
repeated	236
5	237
times	238
exception	239
instances	240
*	241
single	242
instance	243
text	244
str	245
any	246
one	247
list1	248
are	249
list2	250
given	251
sublists	252
itself	253
splitting	254
mystring	255
delimiter	256
filter	257
django	258
objects	259
ids	260
indices	261
greater	262
than	263
4	264
declare	265
array	266
code	267
matlab	268
decode	269
double	270
encoded	271
getting	272
subdirectories	273
based	274
on	275
do	276
left	277
merge	278
dataframes	279
state	280
closest	281
average	282
numpy	283
last	284
day	285
2002	286
insert	287
database	288
update	289
user	290
having	291
123	292
sqlalchemy	293
newline	294
regular	295
expression	296
comprehension	297
10	298
integer	299
f	300
which	301
format	302
sets	303
val	304
myDict	305
third	306
str_list	307
Peak	308
ascending	309
Weeks	310
descending	311
generate	312
length	313
lower	314
letters	315
iterate	316
over	317
sorted	318
save	319
0	320
8	321
np	322
tmp	323
sums	324
example	325
return	326
queryset	327
field	328
model	329
datetime	330
put	331
them	332
log	333
message	334
test	335
root	336
num	337
formatting	338
.txt	339
files	340
right	341
side	342
subtract	343
hours	344
dt	345
os	346
second	347
dimensions	348
access	349
MyModel	350
where	351
texts	352
sum	353
gold	354
example_list	355
letter	356
exist	357
duplicates	358
it	359
run	360
flask	361
application	362
app	363
mode	364
multiply	365
B	366
C	367
datafram	368
assign	369
group	370
dynamically	371
property	372
attr	373
variables	374
sql	375
statement	376
utc	377
calculate	378
mean	379
highest	380
grouped	381
according	382
new	383
including	384
floating	385
be	386
between	387
non-ascii	388
u	389
limit	390
float	391
13.949999999999999	392
tuple	393
int	394
my_list	395
separated	396
spaces	397
cpu	398
usage	399
word	400
multiple	401
xpath	402
has	403
cut	404
&	405
rename	406
that	407
more	408
duplicate	409
items	410
2d	411
starts	412
queryresult	413
environment	414
KEY_THAT_MIGHT_EXIST	415
content	416
koko	417
matrix	418
consecutive	419
regex	420
maximum	421
parenthesis	422
HOME	423
default	424
reset	425
so	426
following	427
['a',	428
'b']	429
'b',	430
zipped	431
lambda	432
not	433
records	434
occurrences	435
labels	436
[1,	437
2,	438
4,	439
5]	440
plot	441
max	442
reading	443
csv	444
filename	445
mac	446
only	447
part	448
lowercase	449
zero	450
taking	451
results	452
bash	453
duplicated	454
testdata	455
nested	456
flat	457
argparse	458
every	459
-1	460
switch	461
my_dict	462
member	463
resultType	464
parsing	465
whether	466
fname	467
exists	468
/	469
open	470
sample.json	471
read	472
encoding	473
parse	474
Jun[SEP]1[SEP]2005[SEP]1:33PM	475
primary	476
load	477
console	478
logging	479
indexes	480
throw	481
error	482
driver	483
null	484
logical	485
xor	486
b	487
m	488
panda	489
Date	490
words	491
largest	492
less	493
thousands	494
separators	495
a_list	496
numbers	497
can	498
tkinter	499
Total[SEP]score[SEP]for	500
call	501
copy	502
file.txt	503
keep	504
created	505
L	506
anything	507
trim	508
Hello	509
sequence	510
n	511
sub	512
g	513
write	514
without	515
names	516
1,	517
7	518
j	519
same	520
pairs	521
port	522
ls	523
attributes	524
white	525
initialize	526
before	527
6	528
inside	529
separate	530
-	531
move	532
label	533
top	534
ax	535
%Y-%m-%d	536
combine	537
3]	538
year	539
currently	540
export	541
clear	542
axes	543
webbrowser	544
pdf	545
parentheses	546
around	547
record	548
100	549
12-digit	550
strip	551
my_function	552
digits	553
end	554
whilst	555
converting	556
tags	557
tag	558
lxml	559
blabla	560
txt	561
example.txt	562
sub-lists	563
or	564
boolean	565
lol	566
stats	567
next	568
generator	569
4th	570
position	571
Name	572
separator	573
;	574
modified	575
list_a	576
list_b	577
product	578
3d	579
unique	580
seperated	581
match	582
zero-or-more	583
case	584
alphabet	585
f233op	586
rgb	587
image	588
img	589
subset	590
pair	591
bigdict	592
3	593
series	594
whitespace	595
sentence	596
scroll	597
bottom	598
web	599
item3	600
default_data	601
concatenate	602
marks	603
absolute	604
running	605
script	606
lines	607
myfunction	608
zip	609
retrieve	610
parameter	611
itertools	612
individual	613
defined	614
(	615
)	616
newlines	617
trailing	618
test[SEP]string[SEP][LINE][LINE]	619
biggest	620
matches	621
hello	622
some_string	623
non	624
output	625
bigger	626
everything	627
=	628
http	629
header	630
[	631
]	632
have	633
jump	634
front	635
alphabetical	636
minimum	637
doSomething()	638
try-except	639
handling	640
subprocess	641
divide	642
2]	643
tabs	644
thing	645
point	646
‘	647
’	648
type	649
figure	650
i.e	651
comma	652
dot	653
5,	654
6]	655
together	656
store	657
kill	658
process	659
3rd	660
myList	661
insensitive	662
comparison	663
string1	664
string2	665
16	666
AB	667
degrees	668
periods	669
n't	670
immediately	671
expressions	672
nothing	673
p	674
background	675
button	676
some_list	677
utf-8	678
{'My	679
Key':	680
'My	681
Value'}	682
2013-1-25	683
different	684
simple	685
associated	686
greatest	687
display	688
other	689
difference	690
key1	691
out	692
contain	693
ab	694
even	695
Sum[SEP]of[SEP]Accidents	696
Country	697
key-value	698
appear	699
sparse	700
then	701
resulting	702
somestring	703
beautiful	704
X	705
User	706
legend	707
marker	708
once	709
encode	710
table	711
font	712
12	713
canvas	714
k	715
TEXT	716
delimited	717
commas	718
place	719
t	720
9	721
ends	722
extension	723
.jpg	724
myfile.csv	725
aaabcabccd	726
alphabetically	727
file.gz	728
followed	729
str1	730
shell	731
beginning	732
draw	733
grid	734
map	735
join	736
users	737
union	738
digit	739
represented	740
hexadecimal	741
dicts	742
ratio	743
global	744
finding	745
flatten	746
status	747
terminal	748
result	749
permission	750
fields	751
braces	752
{	753
}	754
instead	755
'c',	756
'd']	757
fetch	758
matching	759
conversion	760
prefix	761
(1,	762
5)	763
myVar	764
width	765
control	766
300	767
keeping	768
complete	769
floats	770
stdin	771
click	772
new_list	773
textarea	774
DEBUSSY	775
does	776
dic	777
md5	778
checksum	779
iterating	780
lexicographic	781
_	782
rearrange	783
keyword	784
sized	785
chunks	786
child	787
constructor	788
argument	789
functions	790
define	791
bob	792
browser	793
except	794
compare	795
per	796
hour	797
minutes	798
custom	799
String	800
ints	801
json_string	802
deadbeef	803
echo[SEP]Hello[SEP]World	804
seq	805
send	806
socket	807
connection	808
none	809
predicate	810
a[SEP],[SEP]b;[SEP]cdf	811
both	812
equal	813
computer	814
windows	815
system	816
creating	817
echo	818
z	819
some[SEP]error[SEP]message	820
escape	821
while	822
whitespaces	823
use	824
space	825
ignoring	826
quotes	827
alist	828
age	829
comma-separated	830
username	831
+	832
Test	833
resample	834
resolution	835
summing	836
6,	837
7,	838
8,	839
9]	840
pivot	841
become	842
2nd	843
through	844
iso	845
structured	846
criteria	847
Entry	848
another_choice	849
my_choices	850
[0,	851
Value	852
true	853
adjacent	854
char	855
erase	856
contents	857
shutdown	858
restart	859
pipe	860
d1	861
d2	862
working	863
escaped	864
utf	865
your[SEP]string	866
prompt	867
Press[SEP]Enter[SEP]to[SEP]continue...	868
trimming	869
[LINE]	870
myString	871
your_list	872
identical	873
15	874
backslashes	875
4],	876
concatenating	877
one-dimensional	878
version	879
base64	880
fill	881
missing	882
numeric	883
celsius	884
symbol	885
11	886
17	887
respective	888
listone	889
listtwo	890
extracting	891
excluding	892
upper	893
lower-case	894
M\N{AMPERSAND}M\N{APOSTROPHE}s	895
filled	896
zeros	897
recursively	898
folder	899
20	900
obj	901
positions	902
along	903
INSERT[SEP]OR[SEP]REPLACE[SEP]INTO[SEP]master.table1[SEP]SELECT[SEP]*[SEP]FROM[SEP]table1	904
db	905
cursor	906
LoD	907
/etc/password.txt	908
swap	909
input	910
download	911
most	912
exclude	913
start	914
removing	915
Y	916
ndarray	917
shape	918
randomly	919
structure	920
will	921
fit	922
screen	923
present	924
('l',	925
'm',	926
'n')	927
terminate	928
program	929
sorting	930
list_of_tuples	931
reversed	932
mydict	933
requests	934
week	935
7]	936
l1	937
similar	938
tab	939
old_list	940
build	941
2],	942
key/value	943
punctuation	944
multidimensional	945
[4,	946
['b',	947
'a',	948
'foo',	949
'bar']	950
{'muffin'[SEP]:[SEP]'lolz',[SEP]'foo'[SEP]:[SEP]'kitty'}	951
representation	952
previous	953
P	954
webpage	955
mycsv.csv	956
multiplication	957
months	958
grep	959
one[LINE]two[LINE]three[LINE]four[LINE]five[LINE]six[LINE]	960
[3,	961
nearest	962
scientific	963
groupby	964
yaml	965
example.yaml	966
var	967
precision	968
D	969
long	970
myNumber	971
%Y-%m-%d[SEP]%H:%M:%S	972
sub-elements	973
response	974
repeating	975
widget	976
baz	977
abort	978
special	979
0.1	980
0.05	981
0.2	982
raw	983
literal	984
dpi	985
png	986
filename.png	987
substrings	988
align	989
obtained	990
replacing	991
Book	992
command[SEP]-flags[SEP]arguments[SEP]&	993
key2	994
',	995
operations	996
std	997
2014	998
dir	999
!	1000
col	1001
types	1002
|	1003
http://randomsite.com/file.gz	1004
excel	1005
combination	1006
vowel	1007
errorbars	1008
y,	1009
color	1010
list2d	1011
upload	1012
mechanize	1013
xml	1014
dates	1015
li	1016
properly	1017
but	1018
occurence	1019
dimensional	1020
updated	1021
None	1022
splitted	1023
\	1024
jinja	1025
writing	1026
text[SEP]to[SEP]write[LINE]	1027
basename	1028
no	1029
utf-16-le	1030
sdfasdf	1031
representations	1032
six	1033
arr	1034
$	1035
directly	1036
food_colors	1037
%	1038
members	1039
link	1040
readable	1041
begins	1042
1d	1043
node	1044
graph	1045
G	1046
False,	1047
construct	1048
smaller	1049
test.sh[SEP]otherfunc	1050
nan	1051
file_name	1052
comparing	1053
l2	1054
interval	1055
specifying	1056
placeholder	1057
slice	1058
relative	1059
/usr/var	1060
xs	1061
/etc	1062
n/a	1063
aaa[SEP]bbb[SEP]ccc[SEP]ddd[SEP]eee[SEP]fff	1064
pass	1065
yourdata	1066
subkey	1067
holds	1068
lookup	1069
bar	1070
bytes	1071
M	1072
apple	1073
hash	1074
src	1075
dst	1076
substitute	1077
normalize	1078
This[SEP]is[SEP]a[SEP]string	1079
utf8	1080
linux	1081
import	1082
tuple/list	1083
ordered	1084
perl	1085
City	1086
wise	1087
Sample	1088
2011	1089
when	1090
alpha	1091
this[SEP]is[SEP]my[SEP]string	1092
carriage	1093
returns	1094
coordinates	1095
the_list	1096
a_string	1097
suffix	1098
42	1099
creation	1100
full	1101
queue	1102
patterns	1103
.com	1104
xlsxwriter	1105
timestamp	1106
classes	1107
hand	1108
thisismylist	1109
start[SEP]command[SEP]-flags[SEP]arguments	1110
wait	1111
parent_dict	1112
\xc3\x85ã	1113
python[SEP]myscript.py	1114
fn	1115
cat	1116
Bull	1117
success	1118
squares	1119
breaks	1120
anniversary_score	1121
option	1122
address	1123
thelist	1124
thefile	1125
loops	1126
index[SEP]<[SEP]@start_remove[SEP]or[SEP]index[SEP]>[SEP]@end_remove	1127
body	1128
@	1129
in.	1130
weight	1131
modification	1132
cell	1133
question	1134
Bob[SEP]has[SEP]a[SEP]cat	1135
disable	1136
picture.jpg	1137
var1	1138
var2	1139
factor	1140
info	1141
Log[SEP]message	1142
collection	1143
input_list	1144
canonical	1145
colorbar	1146
''	1147
total	1148
o	1149
ip	1150
a[LINE][SEP]b[LINE][SEP]c[LINE]d[SEP]e	1151
printing	1152
ram	1153
google	1154
ABC	1155
/does/not/exist	1156
ftplib	1157
embedded	1158
squared	1159
'd	1160
Enter[SEP]two[SEP]numbers[SEP]here:	1161
mv[SEP]/home/somedir/subdir/*[SEP]somedir/	1162
matplotlib.pyplot	1163
grep[SEP]-r[SEP]PASSED[SEP]*.log[SEP]|[SEP]sort[SEP]-u[SEP]|[SEP]wc[SEP]-l	1164
produce	1165
a[SEP]1[SEP]a[SEP]2[SEP]a[SEP]3[SEP]a[SEP]4[SEP]a	1166
Joe[SEP]Blow	1167
This[SEP]is[SEP]the[SEP]exception[SEP]you[SEP]expect[SEP]to[SEP]handle	1168
represents[SEP]a[SEP]hidden[SEP]bug,[SEP]do[SEP]not[SEP]catch[SEP]this	1169
foo[SEP]bar[SEP]bar[SEP]bar	1170
